!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	pilas-engine/declaraciones/phaser.d.ts	/^                A: boolean;$/;"	m
A	pilas-engine/declaraciones/phaser.d.ts	/^                A: string;$/;"	m
ALIGN_CENTER	pilas-engine/declaraciones/phaser.d.ts	/^            static ALIGN_CENTER: number;$/;"	m
ALIGN_LEFT	pilas-engine/declaraciones/phaser.d.ts	/^            static ALIGN_LEFT: number;$/;"	m
ALIGN_RIGHT	pilas-engine/declaraciones/phaser.d.ts	/^            static ALIGN_RIGHT: number;$/;"	m
ASTC	pilas-engine/declaraciones/phaser.d.ts	/^                    ASTC: object | undefined;$/;"	m
ATC	pilas-engine/declaraciones/phaser.d.ts	/^                    ATC: object | undefined;$/;"	m
Acceleration	pilas-engine/declaraciones/phaser.d.ts	/^                interface Acceleration {$/;"	i
Actions	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Actions {$/;"	c
Actions	pilas-engine/declaraciones/phaser.d.ts	/^    namespace Actions {$/;"	c
Actor	pilas-engine/actores/-actor.ts	/^class Actor extends ActorBase {$/;"	c
ActorBase	pilas-engine/actores/-actor-base.ts	/^class ActorBase {$/;"	c
ActorEnModoEdici	pilas-engine/modos/actor_en_modo_edicion.ts	/^class ActorEnModoEdici√≥n extends Phaser.GameObjects.Container {$/;"	c
ActorTextoBase	pilas-engine/actores/-actor-texto-base.ts	/^class ActorTextoBase extends ActorBase {$/;"	c
Actores	pilas-engine/actores.ts	/^class Actores {$/;"	c
Add	pilas-engine/declaraciones/phaser.d.ts	/^            function Add(array: any[], item: any | any[], limit?: number, callback?: Function, context?: object): any[];$/;"	f
AddAt	pilas-engine/declaraciones/phaser.d.ts	/^            function AddAt(array: any[], item: any | any[], index?: number, limit?: number, callback?: Function, context?: object): any[];$/;"	f
AddToDOM	pilas-engine/declaraciones/phaser.d.ts	/^        function AddToDOM(element: HTMLElement, parent?: string | HTMLElement): HTMLElement;$/;"	f
AfterAddEvent	pilas-engine/declaraciones/phaser.d.ts	/^                type AfterAddEvent = {$/;"	t
AfterRemoveEvent	pilas-engine/declaraciones/phaser.d.ts	/^                type AfterRemoveEvent = {$/;"	t
AfterUpdateEvent	pilas-engine/declaraciones/phaser.d.ts	/^                type AfterUpdateEvent = {$/;"	t
Align	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Align {$/;"	c
AlignTo	pilas-engine/declaraciones/phaser.d.ts	/^        function AlignTo<G extends Phaser.GameObjects.GameObject[]>(items: G, position: number, offsetX?: number, offsetY?: number): G;$/;"	f
Alpha	pilas-engine/declaraciones/phaser.d.ts	/^            interface Alpha {$/;"	i
AlphaSingle	pilas-engine/declaraciones/phaser.d.ts	/^            interface AlphaSingle {$/;"	i
Alt	pilas-engine/utilidades.ts	/^      Alt: "alt",$/;"	m
Angle	pilas-engine/declaraciones/phaser.d.ts	/^            static Angle(line: Phaser.Geom.Line): number;$/;"	m
Angle	pilas-engine/declaraciones/phaser.d.ts	/^        function Angle<G extends Phaser.GameObjects.GameObject[]>(items: G, value: number, step?: number, index?: number, direction?: number): G;$/;"	f
Angle	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Angle {$/;"	c
Angle	pilas-engine/libs/spriter.ts	/^class Angle {$/;"	c
Angular	pilas-engine/declaraciones/phaser.d.ts	/^                interface Angular {$/;"	i
AnimacionDePropiedad	pilas-engine/animacion_de_propiedad.ts	/^class AnimacionDePropiedad {$/;"	c
AnimacionNula	pilas-engine/animacion_nula.ts	/^class AnimacionNula extends AnimacionDePropiedad {$/;"	c
Animaciones	pilas-engine/animaciones.ts	/^class Animaciones {$/;"	c
Animation	pilas-engine/declaraciones/phaser.d.ts	/^            type Animation = {$/;"	t
Animation	pilas-engine/declaraciones/phaser.d.ts	/^        class Animation {$/;"	c
Animation	pilas-engine/libs/spriter.ts	/^class Animation extends Element {$/;"	c
AnimationFrame	pilas-engine/declaraciones/phaser.d.ts	/^            type AnimationFrame = {$/;"	t
AnimationFrame	pilas-engine/declaraciones/phaser.d.ts	/^        class AnimationFrame {$/;"	c
AnimationJSONFile	pilas-engine/declaraciones/phaser.d.ts	/^            class AnimationJSONFile extends Phaser.Loader.File {$/;"	c
AnimationManager	pilas-engine/declaraciones/phaser.d.ts	/^        class AnimationManager extends Phaser.Events.EventEmitter {$/;"	c
AnimationState	pilas-engine/declaraciones/phaser.d.ts	/^        class AnimationState {$/;"	c
Animations	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Animations {$/;"	c
Animations	pilas-engine/declaraciones/phaser.d.ts	/^    namespace Animations {$/;"	c
Arc	pilas-engine/declaraciones/phaser.d.ts	/^        class Arc extends Phaser.GameObjects.Shape {$/;"	c
Arcade	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Arcade {$/;"	c
Arcade	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Arcade {$/;"	c
ArcadeBodyBounds	pilas-engine/declaraciones/phaser.d.ts	/^                type ArcadeBodyBounds = {$/;"	t
ArcadeBodyCollision	pilas-engine/declaraciones/phaser.d.ts	/^                type ArcadeBodyCollision = {$/;"	t
ArcadeColliderType	pilas-engine/declaraciones/phaser.d.ts	/^                type ArcadeColliderType = Phaser.GameObjects.GameObject | Phaser.GameObjects.Group | Phaser.Physics.Arcade.Sprite | Phaser.Physics.Arcade.Image | Phaser.Physics.Arcade.StaticGroup | Phaser.Physics.Arcade.Group | Phaser.Tilemaps.TilemapLayer | Phaser.GameObjects.GameObject[] | Phaser.Physics.Arcade.Sprite[] | Phaser.Physics.Arcade.Image[] | Phaser.Physics.Arcade.StaticGroup[] | Phaser.Physics.Arcade.Group[] | Phaser.Tilemaps.TilemapLayer[];$/;"	t
ArcadePhysics	pilas-engine/declaraciones/phaser.d.ts	/^            class ArcadePhysics {$/;"	c
ArcadeWorldConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type ArcadeWorldConfig = {$/;"	t
ArcadeWorldDefaults	pilas-engine/declaraciones/phaser.d.ts	/^                type ArcadeWorldDefaults = {$/;"	t
ArcadeWorldTreeMinMax	pilas-engine/declaraciones/phaser.d.ts	/^                type ArcadeWorldTreeMinMax = {$/;"	t
Area	pilas-engine/declaraciones/phaser.d.ts	/^            static Area(circle: Phaser.Geom.Circle): number;$/;"	m
Area	pilas-engine/declaraciones/phaser.d.ts	/^            static Area(ellipse: Phaser.Geom.Ellipse): number;$/;"	m
Area	pilas-engine/declaraciones/phaser.d.ts	/^            static Area(rect: Phaser.Geom.Rectangle): number;$/;"	m
Area	pilas-engine/declaraciones/phaser.d.ts	/^            static Area(triangle: Phaser.Geom.Triangle): number;$/;"	m
Arrastrable	pilas-engine/habilidades/arrastrable.ts	/^class Arrastrable extends Habilidad {$/;"	c
Array	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Array {$/;"	c
ArrayBufferToBase64	pilas-engine/declaraciones/phaser.d.ts	/^            function ArrayBufferToBase64(arrayBuffer: ArrayBuffer, mediaType?: string): string;$/;"	f
ArrowDown	pilas-engine/utilidades.ts	/^      ArrowDown: "abajo",$/;"	m
ArrowLeft	pilas-engine/utilidades.ts	/^      ArrowLeft: "izquierda",$/;"	m
ArrowRight	pilas-engine/utilidades.ts	/^      ArrowRight: "derecha",$/;"	m
ArrowUp	pilas-engine/utilidades.ts	/^      ArrowUp: "arriba",$/;"	m
AsepriteFile	pilas-engine/declaraciones/phaser.d.ts	/^            class AsepriteFile extends Phaser.Loader.MultiFile {$/;"	c
AsepriteFileConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type AsepriteFileConfig = {$/;"	t
AssignTileProperties	pilas-engine/declaraciones/phaser.d.ts	/^                function AssignTileProperties(mapData: Phaser.Tilemaps.MapData): void;$/;"	f
AtlasJSONFile	pilas-engine/declaraciones/phaser.d.ts	/^            class AtlasJSONFile extends Phaser.Loader.MultiFile {$/;"	c
AtlasJSONFileConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type AtlasJSONFileConfig = {$/;"	t
AtlasXMLFile	pilas-engine/declaraciones/phaser.d.ts	/^            class AtlasXMLFile extends Phaser.Loader.MultiFile {$/;"	c
AtlasXMLFileConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type AtlasXMLFileConfig = {$/;"	t
Audio	pilas-engine/declaraciones/phaser.d.ts	/^        type Audio = {$/;"	t
AudioConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type AudioConfig = {$/;"	t
AudioFile	pilas-engine/declaraciones/phaser.d.ts	/^            class AudioFile extends Phaser.Loader.File {$/;"	c
AudioFileConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type AudioFileConfig = {$/;"	t
AudioSpriteFile	pilas-engine/declaraciones/phaser.d.ts	/^            class AudioSpriteFile extends Phaser.Loader.MultiFile {$/;"	c
AudioSpriteFileConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type AudioSpriteFileConfig = {$/;"	t
AudioSpriteSound	pilas-engine/declaraciones/phaser.d.ts	/^            type AudioSpriteSound = {$/;"	t
Automata	pilas-engine/automata.ts	/^class Automata {$/;"	c
Average	pilas-engine/declaraciones/phaser.d.ts	/^        function Average(values: number[]): number;$/;"	f
Axis	pilas-engine/declaraciones/phaser.d.ts	/^            class Axis {$/;"	c
B	pilas-engine/declaraciones/phaser.d.ts	/^                B: boolean;$/;"	m
B	pilas-engine/declaraciones/phaser.d.ts	/^                B: string;$/;"	m
BACK	pilas-engine/declaraciones/phaser.d.ts	/^            static readonly BACK: Phaser.Math.Vector3;$/;"	m
BITMAPMASK_PIPELINE	pilas-engine/declaraciones/phaser.d.ts	/^                BITMAPMASK_PIPELINE: Phaser.Renderer.WebGL.Pipelines.BitmapMaskPipeline;$/;"	m
BPTC	pilas-engine/declaraciones/phaser.d.ts	/^                    BPTC: object | undefined;$/;"	m
Back	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Back {$/;"	c
Backspace	pilas-engine/utilidades.ts	/^      Backspace: "backspace",$/;"	m
BannerConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type BannerConfig = {$/;"	t
Base64	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Base64 {$/;"	c
Base64Decode	pilas-engine/declaraciones/phaser.d.ts	/^                function Base64Decode(data: object): any[];$/;"	f
Base64ToArrayBuffer	pilas-engine/declaraciones/phaser.d.ts	/^            function Base64ToArrayBuffer(base64: string): ArrayBuffer;$/;"	f
BaseCache	pilas-engine/declaraciones/phaser.d.ts	/^        class BaseCache {$/;"	c
BaseCamera	pilas-engine/declaraciones/phaser.d.ts	/^            class BaseCamera extends Phaser.Events.EventEmitter implements Phaser.GameObjects.Components.Alpha, Phaser.GameObjects.Components.Visible {$/;"	c
BaseObject	pilas-engine/libs/spriter.ts	/^class BaseObject {$/;"	c
BasePlugin	pilas-engine/declaraciones/phaser.d.ts	/^        class BasePlugin {$/;"	c
BaseShader	pilas-engine/declaraciones/phaser.d.ts	/^        class BaseShader {$/;"	c
BaseSound	pilas-engine/declaraciones/phaser.d.ts	/^        class BaseSound extends Phaser.Events.EventEmitter {$/;"	c
BaseSoundManager	pilas-engine/declaraciones/phaser.d.ts	/^        class BaseSoundManager extends Phaser.Events.EventEmitter {$/;"	c
BeforeAddEvent	pilas-engine/declaraciones/phaser.d.ts	/^                type BeforeAddEvent = {$/;"	t
BeforeRemoveEvent	pilas-engine/declaraciones/phaser.d.ts	/^                type BeforeRemoveEvent = {$/;"	t
BeforeUpdateEvent	pilas-engine/declaraciones/phaser.d.ts	/^                type BeforeUpdateEvent = {$/;"	t
Bernstein	pilas-engine/declaraciones/phaser.d.ts	/^        function Bernstein(n: number, i: number): number;$/;"	f
Between	pilas-engine/declaraciones/phaser.d.ts	/^            function Between(x1: number, y1: number, x2: number, y2: number): number;$/;"	f
Between	pilas-engine/declaraciones/phaser.d.ts	/^        function Between(min: number, max: number): number;$/;"	f
BetweenPoints	pilas-engine/declaraciones/phaser.d.ts	/^            function BetweenPoints(a: Phaser.Types.Math.Vector2Like, b: Phaser.Types.Math.Vector2Like): number;$/;"	f
BetweenPoints	pilas-engine/declaraciones/phaser.d.ts	/^            function BetweenPoints(point1: Phaser.Types.Math.Vector2Like, point2: Phaser.Types.Math.Vector2Like): number;$/;"	f
BetweenPointsSquared	pilas-engine/declaraciones/phaser.d.ts	/^            function BetweenPointsSquared(a: Phaser.Types.Math.Vector2Like, b: Phaser.Types.Math.Vector2Like): number;$/;"	f
BetweenPointsY	pilas-engine/declaraciones/phaser.d.ts	/^            function BetweenPointsY(point1: Phaser.Types.Math.Vector2Like, point2: Phaser.Types.Math.Vector2Like): number;$/;"	f
BetweenY	pilas-engine/declaraciones/phaser.d.ts	/^            function BetweenY(x1: number, y1: number, x2: number, y2: number): number;$/;"	f
Bezier	pilas-engine/declaraciones/phaser.d.ts	/^            function Bezier(v: number[], k: number): number;$/;"	f
BinaryFile	pilas-engine/declaraciones/phaser.d.ts	/^            class BinaryFile extends Phaser.Loader.File {$/;"	c
BinaryFileConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type BinaryFileConfig = {$/;"	t
BitmapFontCharacterData	pilas-engine/declaraciones/phaser.d.ts	/^                type BitmapFontCharacterData = {$/;"	t
BitmapFontData	pilas-engine/declaraciones/phaser.d.ts	/^                type BitmapFontData = {$/;"	t
BitmapFontFile	pilas-engine/declaraciones/phaser.d.ts	/^            class BitmapFontFile extends Phaser.Loader.MultiFile {$/;"	c
BitmapFontFileConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type BitmapFontFileConfig = {$/;"	t
BitmapMask	pilas-engine/declaraciones/phaser.d.ts	/^            class BitmapMask {$/;"	c
BitmapMaskPipeline	pilas-engine/declaraciones/phaser.d.ts	/^                class BitmapMaskPipeline extends Phaser.Renderer.WebGL.WebGLPipeline {$/;"	c
BitmapText	pilas-engine/declaraciones/phaser.d.ts	/^            namespace BitmapText {$/;"	c
BitmapText	pilas-engine/declaraciones/phaser.d.ts	/^        class BitmapText extends Phaser.GameObjects.GameObject implements Phaser.GameObjects.Components.Alpha, Phaser.GameObjects.Components.BlendMode, Phaser.GameObjects.Components.Depth, Phaser.GameObjects.Components.Mask, Phaser.GameObjects.Components.Origin, Phaser.GameObjects.Components.Pipeline, Phaser.GameObjects.Components.ScrollFactor, Phaser.GameObjects.Components.Texture, Phaser.GameObjects.Components.Tint, Phaser.GameObjects.Components.Transform, Phaser.GameObjects.Components.Visible {$/;"	c
BitmapTextCharacter	pilas-engine/declaraciones/phaser.d.ts	/^                type BitmapTextCharacter = {$/;"	t
BitmapTextConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type BitmapTextConfig = Phaser.Types.GameObjects.GameObjectConfig & {$/;"	t
BitmapTextLines	pilas-engine/declaraciones/phaser.d.ts	/^                type BitmapTextLines = {$/;"	t
BitmapTextSize	pilas-engine/declaraciones/phaser.d.ts	/^                type BitmapTextSize = {$/;"	t
BitmapTextWord	pilas-engine/declaraciones/phaser.d.ts	/^                type BitmapTextWord = {$/;"	t
BlendMode	pilas-engine/declaraciones/phaser.d.ts	/^            interface BlendMode {$/;"	i
BlendModes	pilas-engine/declaraciones/phaser.d.ts	/^    enum BlendModes {$/;"	e
Blitter	pilas-engine/declaraciones/phaser.d.ts	/^        class Blitter extends Phaser.GameObjects.GameObject implements Phaser.GameObjects.Components.Alpha, Phaser.GameObjects.Components.BlendMode, Phaser.GameObjects.Components.Depth, Phaser.GameObjects.Components.Mask, Phaser.GameObjects.Components.Pipeline, Phaser.GameObjects.Components.ScrollFactor, Phaser.GameObjects.Components.Size, Phaser.GameObjects.Components.Texture, Phaser.GameObjects.Components.Transform, Phaser.GameObjects.Components.Visible {$/;"	c
Bob	pilas-engine/declaraciones/phaser.d.ts	/^        class Bob {$/;"	c
Body	pilas-engine/declaraciones/phaser.d.ts	/^            class Body {$/;"	c
BodyBounds	pilas-engine/declaraciones/phaser.d.ts	/^            class BodyBounds {$/;"	c
Bone	pilas-engine/libs/spriter.ts	/^class Bone extends BaseObject {$/;"	c
BoneObjInfo	pilas-engine/libs/spriter.ts	/^class BoneObjInfo extends ObjInfo {$/;"	c
BoneRef	pilas-engine/libs/spriter.ts	/^class BoneRef extends Ref {}$/;"	c
BoneTimelineKeyframe	pilas-engine/libs/spriter.ts	/^class BoneTimelineKeyframe extends TimelineKeyframe {$/;"	c
BootCallback	pilas-engine/declaraciones/phaser.d.ts	/^            type BootCallback = (game: Phaser.Game)=>void;$/;"	t
BottomCenter	pilas-engine/declaraciones/phaser.d.ts	/^                function BottomCenter<G extends Phaser.GameObjects.GameObject>(gameObject: G, alignIn: Phaser.GameObjects.GameObject, offsetX?: number, offsetY?: number): G;$/;"	f
BottomCenter	pilas-engine/declaraciones/phaser.d.ts	/^                function BottomCenter<G extends Phaser.GameObjects.GameObject>(gameObject: G, alignTo: Phaser.GameObjects.GameObject, offsetX?: number, offsetY?: number): G;$/;"	f
BottomLeft	pilas-engine/declaraciones/phaser.d.ts	/^                function BottomLeft<G extends Phaser.GameObjects.GameObject>(gameObject: G, alignIn: Phaser.GameObjects.GameObject, offsetX?: number, offsetY?: number): G;$/;"	f
BottomLeft	pilas-engine/declaraciones/phaser.d.ts	/^                function BottomLeft<G extends Phaser.GameObjects.GameObject>(gameObject: G, alignTo: Phaser.GameObjects.GameObject, offsetX?: number, offsetY?: number): G;$/;"	f
BottomRight	pilas-engine/declaraciones/phaser.d.ts	/^                function BottomRight<G extends Phaser.GameObjects.GameObject>(gameObject: G, alignIn: Phaser.GameObjects.GameObject, offsetX?: number, offsetY?: number): G;$/;"	f
BottomRight	pilas-engine/declaraciones/phaser.d.ts	/^                function BottomRight<G extends Phaser.GameObjects.GameObject>(gameObject: G, alignTo: Phaser.GameObjects.GameObject, offsetX?: number, offsetY?: number): G;$/;"	f
Bounce	pilas-engine/declaraciones/phaser.d.ts	/^                interface Bounce {$/;"	i
Bounce	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Bounce {$/;"	c
Bounds	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Bounds {$/;"	c
BoxObjInfo	pilas-engine/libs/spriter.ts	/^class BoxObjInfo extends ObjInfo {$/;"	c
BoxObject	pilas-engine/libs/spriter.ts	/^class BoxObject extends BaseObject {$/;"	c
BoxTimelineKeyframe	pilas-engine/libs/spriter.ts	/^class BoxTimelineKeyframe extends TimelineKeyframe {$/;"	c
BresenhamPoints	pilas-engine/declaraciones/phaser.d.ts	/^            static BresenhamPoints(line: Phaser.Geom.Line, stepRate?: number, results?: Phaser.Types.Math.Vector2Like[]): Phaser.Types.Math.Vector2Like[];$/;"	m
BringToTop	pilas-engine/declaraciones/phaser.d.ts	/^            function BringToTop(array: any[], item: any): any;$/;"	f
Browser	pilas-engine/declaraciones/phaser.d.ts	/^        type Browser = {$/;"	t
BuildEquilateral	pilas-engine/declaraciones/phaser.d.ts	/^            static BuildEquilateral(x: number, y: number, length: number): Phaser.Geom.Triangle;$/;"	m
BuildGameObject	pilas-engine/declaraciones/phaser.d.ts	/^        function BuildGameObject(scene: Phaser.Scene, gameObject: Phaser.GameObjects.GameObject, config: Phaser.Types.GameObjects.GameObjectConfig): Phaser.GameObjects.GameObject;$/;"	f
BuildGameObjectAnimation	pilas-engine/declaraciones/phaser.d.ts	/^        function BuildGameObjectAnimation(sprite: Phaser.GameObjects.Sprite, config: object): Phaser.GameObjects.Sprite;$/;"	f
BuildRight	pilas-engine/declaraciones/phaser.d.ts	/^            static BuildRight(x: number, y: number, width: number, height: number): Phaser.Geom.Triangle;$/;"	m
BuildTilesetIndex	pilas-engine/declaraciones/phaser.d.ts	/^                function BuildTilesetIndex(mapData: Phaser.Tilemaps.MapData): any[];$/;"	f
Builders	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Builders {$/;"	c
Button	pilas-engine/declaraciones/phaser.d.ts	/^            class Button {$/;"	c
C	pilas-engine/declaraciones/phaser.d.ts	/^                C: string;$/;"	m
CSSFile	pilas-engine/declaraciones/phaser.d.ts	/^            class CSSFile extends Phaser.Loader.File {$/;"	c
CSSFileConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type CSSFileConfig = {$/;"	t
Cache	pilas-engine/declaraciones/phaser.d.ts	/^    namespace Cache {$/;"	c
CacheManager	pilas-engine/declaraciones/phaser.d.ts	/^        class CacheManager {$/;"	c
CalculateFacesAt	pilas-engine/declaraciones/phaser.d.ts	/^            function CalculateFacesAt(tileX: number, tileY: number, layer: Phaser.Tilemaps.LayerData): void;$/;"	f
CalculateFacesWithin	pilas-engine/declaraciones/phaser.d.ts	/^            function CalculateFacesWithin(tileX: number, tileY: number, width: number, height: number, layer: Phaser.Tilemaps.LayerData): void;$/;"	f
Call	pilas-engine/declaraciones/phaser.d.ts	/^        function Call<G extends Phaser.GameObjects.GameObject[]>(items: G, callback: Phaser.Types.Actions.CallCallback, context: any): G;$/;"	f
CallCallback	pilas-engine/declaraciones/phaser.d.ts	/^            type CallCallback = (item: Phaser.GameObjects.GameObject)=>void;$/;"	t
CallbacksConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type CallbacksConfig = {$/;"	t
Camara	pilas-engine/camara.ts	/^class Camara {$/;"	c
CamaraEnModoEdici	pilas-engine/modos/camara_en_modo_edicion.ts	/^class CamaraEnModoEdici√≥n extends Phaser.GameObjects.Container {$/;"	c
Camera	pilas-engine/declaraciones/phaser.d.ts	/^            class Camera extends Phaser.Cameras.Scene2D.BaseCamera implements Phaser.GameObjects.Components.Flip, Phaser.GameObjects.Components.Tint, Phaser.GameObjects.Components.Pipeline {$/;"	c
CameraConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type CameraConfig = {$/;"	t
CameraFadeCallback	pilas-engine/declaraciones/phaser.d.ts	/^                type CameraFadeCallback = (camera: Phaser.Cameras.Scene2D.Camera, progress: number)=>void;$/;"	t
CameraFlashCallback	pilas-engine/declaraciones/phaser.d.ts	/^                type CameraFlashCallback = (camera: Phaser.Cameras.Scene2D.Camera, progress: number)=>void;$/;"	t
CameraManager	pilas-engine/declaraciones/phaser.d.ts	/^            class CameraManager {$/;"	c
CameraPanCallback	pilas-engine/declaraciones/phaser.d.ts	/^                type CameraPanCallback = (camera: Phaser.Cameras.Scene2D.Camera, progress: number, x: number, y: number)=>void;$/;"	t
CameraShakeCallback	pilas-engine/declaraciones/phaser.d.ts	/^                type CameraShakeCallback = (camera: Phaser.Cameras.Scene2D.Camera, progress: number)=>void;$/;"	t
CameraZoomCallback	pilas-engine/declaraciones/phaser.d.ts	/^                type CameraZoomCallback = (camera: Phaser.Cameras.Scene2D.Camera, progress: number, zoom: number)=>void;$/;"	t
Cameras	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Cameras {$/;"	c
Cameras	pilas-engine/declaraciones/phaser.d.ts	/^    namespace Cameras {$/;"	c
Canvas	pilas-engine/declaraciones/phaser.d.ts	/^            function Canvas(sourceCanvas: HTMLCanvasElement, config: Phaser.Types.Renderer.Snapshot.SnapshotState): void;$/;"	f
Canvas	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Canvas {$/;"	c
CanvasFeatures	pilas-engine/declaraciones/phaser.d.ts	/^        type CanvasFeatures = {$/;"	t
CanvasInterpolation	pilas-engine/declaraciones/phaser.d.ts	/^            namespace CanvasInterpolation {$/;"	c
CanvasPool	pilas-engine/declaraciones/phaser.d.ts	/^            namespace CanvasPool {$/;"	c
CanvasRenderer	pilas-engine/declaraciones/phaser.d.ts	/^            class CanvasRenderer extends Phaser.Events.EventEmitter {$/;"	c
CanvasTexture	pilas-engine/declaraciones/phaser.d.ts	/^        class CanvasTexture extends Phaser.Textures.Texture {$/;"	c
CatmullRom	pilas-engine/declaraciones/phaser.d.ts	/^            function CatmullRom(v: number[], k: number): number;$/;"	f
CatmullRom	pilas-engine/declaraciones/phaser.d.ts	/^        function CatmullRom(t: number, p0: number, p1: number, p2: number, p3: number): number;$/;"	f
Ceil	pilas-engine/declaraciones/phaser.d.ts	/^            function Ceil(value: number, epsilon?: number): number;$/;"	f
Ceil	pilas-engine/declaraciones/phaser.d.ts	/^            function Ceil(value: number, gap: number, start?: number, divide?: boolean): number;$/;"	f
CeilTo	pilas-engine/declaraciones/phaser.d.ts	/^        function CeilTo(value: number, place?: number, base?: number): number;$/;"	f
Center	pilas-engine/declaraciones/phaser.d.ts	/^                function Center<G extends Phaser.GameObjects.GameObject>(gameObject: G, alignIn: Phaser.GameObjects.GameObject, offsetX?: number, offsetY?: number): G;$/;"	f
Center	pilas-engine/declaraciones/phaser.d.ts	/^        enum Center {$/;"	e
CenterOn	pilas-engine/declaraciones/phaser.d.ts	/^            function CenterOn<G extends Phaser.GameObjects.GameObject>(gameObject: G, x: number, y: number): G;$/;"	f
CenterOn	pilas-engine/declaraciones/phaser.d.ts	/^            static CenterOn(line: Phaser.Geom.Line, x: number, y: number): Phaser.Geom.Line;$/;"	m
CenterType	pilas-engine/declaraciones/phaser.d.ts	/^        type CenterType = Phaser.Scale.Center;$/;"	t
CharacterMap	pilas-engine/libs/spriter.ts	/^class CharacterMap extends Element {$/;"	c
Chebyshev	pilas-engine/declaraciones/phaser.d.ts	/^            function Chebyshev(x1: number, y1: number, x2: number, y2: number): number;$/;"	f
CheckCollisionObject	pilas-engine/declaraciones/phaser.d.ts	/^                type CheckCollisionObject = {$/;"	t
CheckIsoBounds	pilas-engine/declaraciones/phaser.d.ts	/^            function CheckIsoBounds(tileX: number, tileY: number, layer: Phaser.Tilemaps.LayerData, camera?: Phaser.Cameras.Scene2D.Camera): boolean;$/;"	f
CheckMatrix	pilas-engine/declaraciones/phaser.d.ts	/^                function CheckMatrix<T>(matrix?: T[][]): boolean;$/;"	f
Circle	pilas-engine/declaraciones/phaser.d.ts	/^        class Circle {$/;"	c
CircleToCircle	pilas-engine/declaraciones/phaser.d.ts	/^            function CircleToCircle(circleA: Phaser.Geom.Circle, circleB: Phaser.Geom.Circle): boolean;$/;"	f
CircleToRectangle	pilas-engine/declaraciones/phaser.d.ts	/^            function CircleToRectangle(circle: Phaser.Geom.Circle, rect: Phaser.Geom.Rectangle): boolean;$/;"	f
Circular	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Circular {$/;"	c
Circumference	pilas-engine/declaraciones/phaser.d.ts	/^            static Circumference(circle: Phaser.Geom.Circle): number;$/;"	m
Circumference	pilas-engine/declaraciones/phaser.d.ts	/^            static Circumference(ellipse: Phaser.Geom.Ellipse): number;$/;"	m
Clamp	pilas-engine/declaraciones/phaser.d.ts	/^        function Clamp(value: number, min: number, max: number): number;$/;"	f
Clock	pilas-engine/declaraciones/phaser.d.ts	/^        class Clock {$/;"	c
Clone	pilas-engine/declaraciones/phaser.d.ts	/^            function Clone(obj: object): object;$/;"	f
Clone	pilas-engine/declaraciones/phaser.d.ts	/^            static Clone(polygon: Phaser.Geom.Polygon): Phaser.Geom.Polygon;$/;"	m
Clone	pilas-engine/declaraciones/phaser.d.ts	/^            static Clone(source: Phaser.Geom.Circle | object): Phaser.Geom.Circle;$/;"	m
Clone	pilas-engine/declaraciones/phaser.d.ts	/^            static Clone(source: Phaser.Geom.Ellipse): Phaser.Geom.Ellipse;$/;"	m
Clone	pilas-engine/declaraciones/phaser.d.ts	/^            static Clone(source: Phaser.Geom.Line): Phaser.Geom.Line;$/;"	m
Clone	pilas-engine/declaraciones/phaser.d.ts	/^            static Clone(source: Phaser.Geom.Point): Phaser.Geom.Point;$/;"	m
Clone	pilas-engine/declaraciones/phaser.d.ts	/^            static Clone(source: Phaser.Geom.Rectangle): Phaser.Geom.Rectangle;$/;"	m
Clone	pilas-engine/declaraciones/phaser.d.ts	/^            static Clone(source: Phaser.Geom.Triangle): Phaser.Geom.Triangle;$/;"	m
Collider	pilas-engine/declaraciones/phaser.d.ts	/^            class Collider {$/;"	c
Collision	pilas-engine/declaraciones/phaser.d.ts	/^                interface Collision {$/;"	i
CollisionActiveEvent	pilas-engine/declaraciones/phaser.d.ts	/^                type CollisionActiveEvent = {$/;"	t
CollisionEndEvent	pilas-engine/declaraciones/phaser.d.ts	/^                type CollisionEndEvent = {$/;"	t
CollisionStartEvent	pilas-engine/declaraciones/phaser.d.ts	/^                type CollisionStartEvent = {$/;"	t
Color	pilas-engine/colores.ts	/^interface Color {$/;"	i
Color	pilas-engine/declaraciones/phaser.d.ts	/^        class Color {$/;"	c
Color	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Color {$/;"	c
ColorMatrix	pilas-engine/declaraciones/phaser.d.ts	/^        class ColorMatrix {$/;"	c
ColorObject	pilas-engine/declaraciones/phaser.d.ts	/^            type ColorObject = {$/;"	t
ColorSpectrum	pilas-engine/declaraciones/phaser.d.ts	/^            static ColorSpectrum(limit?: number): Phaser.Types.Display.ColorObject[];$/;"	m
ColorToRGBA	pilas-engine/declaraciones/phaser.d.ts	/^            static ColorToRGBA(color: number): Phaser.Types.Display.ColorObject;$/;"	m
ColorWithColor	pilas-engine/declaraciones/phaser.d.ts	/^                function ColorWithColor(color1: Phaser.Display.Color, color2: Phaser.Display.Color, length?: number, index?: number): Phaser.Types.Display.ColorObject;$/;"	f
ColorWithRGB	pilas-engine/declaraciones/phaser.d.ts	/^                function ColorWithRGB(color1: Phaser.Display.Color, r: number, g: number, b: number, length?: number, index?: number): Phaser.Types.Display.ColorObject;$/;"	f
Colores	pilas-engine/colores.ts	/^class Colores {$/;"	c
ComponentToHex	pilas-engine/declaraciones/phaser.d.ts	/^            static ComponentToHex(color: number): string;$/;"	m
Components	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Components {$/;"	c
Components	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Components {$/;"	c
Comportamiento	pilas-engine/comportamientos/-comportamiento.ts	/^class Comportamiento {$/;"	c
ComportamientoAparecer	pilas-engine/comportamientos/aparecer.ts	/^class ComportamientoAparecer extends Comportamiento {$/;"	c
ComportamientoDesaparecer	pilas-engine/comportamientos/desaparecer.ts	/^class ComportamientoDesaparecer extends Comportamiento {$/;"	c
ComportamientoEliminar	pilas-engine/comportamientos/eliminar.ts	/^class ComportamientoEliminar extends Comportamiento {$/;"	c
ComportamientoMover	pilas-engine/comportamientos/mover.ts	/^class ComportamientoMover extends Comportamiento {$/;"	c
Comportamientos	pilas-engine/comportamientos.ts	/^class Comportamientos {$/;"	c
CompressedTextureData	pilas-engine/declaraciones/phaser.d.ts	/^            type CompressedTextureData = {$/;"	t
CompressedTextureFile	pilas-engine/declaraciones/phaser.d.ts	/^            class CompressedTextureFile extends Phaser.Loader.MultiFile {$/;"	c
CompressedTextureFileConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type CompressedTextureFileConfig = {$/;"	t
CompressedTextureFileEntry	pilas-engine/declaraciones/phaser.d.ts	/^                type CompressedTextureFileEntry = {$/;"	t
ComputedSize	pilas-engine/declaraciones/phaser.d.ts	/^            interface ComputedSize {$/;"	i
Config	pilas-engine/declaraciones/phaser.d.ts	/^        class Config {$/;"	c
Configs	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Configs {$/;"	c
Container	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Container {$/;"	c
Container	pilas-engine/declaraciones/phaser.d.ts	/^        class Container extends Phaser.GameObjects.GameObject implements Phaser.GameObjects.Components.AlphaSingle, Phaser.GameObjects.Components.BlendMode, Phaser.GameObjects.Components.ComputedSize, Phaser.GameObjects.Components.Depth, Phaser.GameObjects.Components.Mask, Phaser.GameObjects.Components.Pipeline, Phaser.GameObjects.Components.Transform, Phaser.GameObjects.Components.Visible {$/;"	c
ContainerConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type ContainerConfig = Phaser.Types.GameObjects.GameObjectConfig & {$/;"	t
Contains	pilas-engine/declaraciones/phaser.d.ts	/^            static Contains(circle: Phaser.Geom.Circle, x: number, y: number): boolean;$/;"	m
Contains	pilas-engine/declaraciones/phaser.d.ts	/^            static Contains(ellipse: Phaser.Geom.Ellipse, x: number, y: number): boolean;$/;"	m
Contains	pilas-engine/declaraciones/phaser.d.ts	/^            static Contains(polygon: Phaser.Geom.Polygon, x: number, y: number): boolean;$/;"	m
Contains	pilas-engine/declaraciones/phaser.d.ts	/^            static Contains(rect: Phaser.Geom.Rectangle, x: number, y: number): boolean;$/;"	m
Contains	pilas-engine/declaraciones/phaser.d.ts	/^            static Contains(triangle: Phaser.Geom.Triangle, x: number, y: number): boolean;$/;"	m
ContainsArray	pilas-engine/declaraciones/phaser.d.ts	/^            static ContainsArray(triangle: Phaser.Geom.Triangle, points: Phaser.Geom.Point[], returnFirst?: boolean, out?: any[]): Phaser.Geom.Point[];$/;"	m
ContainsPoint	pilas-engine/declaraciones/phaser.d.ts	/^            static ContainsPoint(circle: Phaser.Geom.Circle, point: Phaser.Geom.Point | object): boolean;$/;"	m
ContainsPoint	pilas-engine/declaraciones/phaser.d.ts	/^            static ContainsPoint(ellipse: Phaser.Geom.Ellipse, point: Phaser.Geom.Point | object): boolean;$/;"	m
ContainsPoint	pilas-engine/declaraciones/phaser.d.ts	/^            static ContainsPoint(polygon: Phaser.Geom.Polygon, point: Phaser.Geom.Point): boolean;$/;"	m
ContainsPoint	pilas-engine/declaraciones/phaser.d.ts	/^            static ContainsPoint(rect: Phaser.Geom.Rectangle, point: Phaser.Geom.Point): boolean;$/;"	m
ContainsPoint	pilas-engine/declaraciones/phaser.d.ts	/^            static ContainsPoint(triangle: Phaser.Geom.Triangle, point: Phaser.Geom.Point | Phaser.Math.Vector2 | any): boolean;$/;"	m
ContainsRect	pilas-engine/declaraciones/phaser.d.ts	/^            static ContainsRect(circle: Phaser.Geom.Circle, rect: Phaser.Geom.Rectangle | object): boolean;$/;"	m
ContainsRect	pilas-engine/declaraciones/phaser.d.ts	/^            static ContainsRect(ellipse: Phaser.Geom.Ellipse, rect: Phaser.Geom.Rectangle | object): boolean;$/;"	m
ContainsRect	pilas-engine/declaraciones/phaser.d.ts	/^            static ContainsRect(rectA: Phaser.Geom.Rectangle, rectB: Phaser.Geom.Rectangle): boolean;$/;"	m
Control	pilas-engine/control.ts	/^class Control {$/;"	c
Control	pilas-engine/utilidades.ts	/^      Control: "control",$/;"	m
Controls	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Controls {$/;"	c
Controls	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Controls {$/;"	c
Copy	pilas-engine/declaraciones/phaser.d.ts	/^            function Copy(srcTileX: number, srcTileY: number, width: number, height: number, destTileX: number, destTileY: number, recalculateFaces: boolean, layer: Phaser.Tilemaps.LayerData): void;$/;"	f
Core	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Core {$/;"	c
Core	pilas-engine/declaraciones/phaser.d.ts	/^    namespace Core {$/;"	c
CorePluginContainer	pilas-engine/declaraciones/phaser.d.ts	/^            type CorePluginContainer = {$/;"	t
CountAllMatching	pilas-engine/declaraciones/phaser.d.ts	/^            function CountAllMatching(array: any[], property: string, value: any, startIndex?: number, endIndex?: number): number;$/;"	f
CounterClockwise	pilas-engine/declaraciones/phaser.d.ts	/^            function CounterClockwise(angle: number): number;$/;"	f
Create	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Create {$/;"	c
Create	pilas-engine/declaraciones/phaser.d.ts	/^    namespace Create {$/;"	c
CreateFromObjectLayerConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type CreateFromObjectLayerConfig = {$/;"	t
CreateFromTiles	pilas-engine/declaraciones/phaser.d.ts	/^            function CreateFromTiles(indexes: number | number[], replacements: number | number[], spriteConfig: Phaser.Types.GameObjects.Sprite.SpriteConfig, scene: Phaser.Scene, camera: Phaser.Cameras.Scene2D.Camera, layer: Phaser.Tilemaps.LayerData): Phaser.GameObjects.Sprite[];$/;"	f
CreateGroupLayer	pilas-engine/declaraciones/phaser.d.ts	/^                function CreateGroupLayer(json: object, currentl?: object, parentstate?: object): object;$/;"	f
CreateInteractiveObject	pilas-engine/declaraciones/phaser.d.ts	/^        function CreateInteractiveObject(gameObject: Phaser.GameObjects.GameObject, hitArea: any, hitAreaCallback: Phaser.Types.Input.HitAreaCallback): Phaser.Types.Input.InteractiveObject;$/;"	f
CreatePixelPerfectHandler	pilas-engine/declaraciones/phaser.d.ts	/^        function CreatePixelPerfectHandler(textureManager: Phaser.Textures.TextureManager, alphaTolerance: number): Function;$/;"	f
CreateRenderer	pilas-engine/declaraciones/phaser.d.ts	/^        function CreateRenderer(game: Phaser.Game): void;$/;"	f
CreateSceneFromObjectConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type CreateSceneFromObjectConfig = {$/;"	t
Crop	pilas-engine/declaraciones/phaser.d.ts	/^            interface Crop {$/;"	i
Cubic	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Cubic {$/;"	c
CubicBezier	pilas-engine/declaraciones/phaser.d.ts	/^            function CubicBezier(t: number, p0: number, p1: number, p2: number, p3: number): number;$/;"	f
CubicBezier	pilas-engine/declaraciones/phaser.d.ts	/^        class CubicBezier extends Phaser.Curves.Curve {$/;"	c
CullBounds	pilas-engine/declaraciones/phaser.d.ts	/^            function CullBounds(layer: Phaser.Tilemaps.LayerData, camera: Phaser.Cameras.Scene2D.Camera): Phaser.Geom.Rectangle;$/;"	f
CullTiles	pilas-engine/declaraciones/phaser.d.ts	/^            function CullTiles(layer: Phaser.Tilemaps.LayerData, camera: Phaser.Cameras.Scene2D.Camera, outputArray?: any[], renderOrder?: number): Phaser.Tilemaps.Tile[];$/;"	f
CursorKeys	pilas-engine/declaraciones/phaser.d.ts	/^                type CursorKeys = {$/;"	t
Curve	pilas-engine/declaraciones/phaser.d.ts	/^        class Curve extends Phaser.GameObjects.Shape {$/;"	c
Curve	pilas-engine/declaraciones/phaser.d.ts	/^        class Curve {$/;"	c
Curve	pilas-engine/libs/spriter.ts	/^class Curve {$/;"	c
Curves	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Curves {$/;"	c
Curves	pilas-engine/declaraciones/phaser.d.ts	/^    namespace Curves {$/;"	c
CustomPluginContainer	pilas-engine/declaraciones/phaser.d.ts	/^            type CustomPluginContainer = {$/;"	t
D	pilas-engine/declaraciones/phaser.d.ts	/^                D: string;$/;"	m
DOM	pilas-engine/declaraciones/phaser.d.ts	/^    namespace DOM {$/;"	c
DOMContainerConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type DOMContainerConfig = {$/;"	t
DOMContentLoaded	pilas-engine/declaraciones/phaser.d.ts	/^        function DOMContentLoaded(callback: ContentLoadedCallback): void;$/;"	f
DOMElement	pilas-engine/declaraciones/phaser.d.ts	/^        class DOMElement extends Phaser.GameObjects.GameObject implements Phaser.GameObjects.Components.AlphaSingle, Phaser.GameObjects.Components.BlendMode, Phaser.GameObjects.Components.Depth, Phaser.GameObjects.Components.Origin, Phaser.GameObjects.Components.ScrollFactor, Phaser.GameObjects.Components.Transform, Phaser.GameObjects.Components.Visible {$/;"	c
DOWN	pilas-engine/declaraciones/phaser.d.ts	/^            static readonly DOWN: Phaser.Math.Vector2;$/;"	m
DOWN	pilas-engine/declaraciones/phaser.d.ts	/^            static readonly DOWN: Phaser.Math.Vector3;$/;"	m
DUALSHOCK_4	pilas-engine/declaraciones/phaser.d.ts	/^                namespace DUALSHOCK_4 {$/;"	c
Data	pilas-engine/declaraciones/phaser.d.ts	/^    namespace Data {$/;"	c
Data	pilas-engine/libs/spriter.ts	/^class Data {$/;"	c
DataManager	pilas-engine/declaraciones/phaser.d.ts	/^        class DataManager {$/;"	c
DataManagerPlugin	pilas-engine/declaraciones/phaser.d.ts	/^        class DataManagerPlugin extends Phaser.Data.DataManager {$/;"	c
DeathZone	pilas-engine/declaraciones/phaser.d.ts	/^                class DeathZone {$/;"	c
DeathZoneSource	pilas-engine/declaraciones/phaser.d.ts	/^                type DeathZoneSource = {$/;"	t
DeathZoneSourceCallback	pilas-engine/declaraciones/phaser.d.ts	/^                type DeathZoneSourceCallback = (x: number, y: number)=>void;$/;"	t
Debug	pilas-engine/declaraciones/phaser.d.ts	/^                interface Debug {$/;"	i
DebugHeader	pilas-engine/declaraciones/phaser.d.ts	/^        function DebugHeader(game: Phaser.Game): void;$/;"	f
DebugStyleOptions	pilas-engine/declaraciones/phaser.d.ts	/^            type DebugStyleOptions = {$/;"	t
DecodeAudioConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type DecodeAudioConfig = {$/;"	t
Decompose	pilas-engine/declaraciones/phaser.d.ts	/^            static Decompose(rect: Phaser.Geom.Rectangle, out?: any[]): any[];$/;"	m
Decompose	pilas-engine/declaraciones/phaser.d.ts	/^            static Decompose(triangle: Phaser.Geom.Triangle, out?: any[]): any[];$/;"	m
DeepCopy	pilas-engine/declaraciones/phaser.d.ts	/^            function DeepCopy(obj: object): object;$/;"	f
DefaultPlugins	pilas-engine/declaraciones/phaser.d.ts	/^        namespace DefaultPlugins {$/;"	c
DegToRad	pilas-engine/declaraciones/phaser.d.ts	/^        function DegToRad(degrees: number): number;$/;"	f
Depth	pilas-engine/declaraciones/phaser.d.ts	/^            interface Depth {$/;"	i
Depurador	pilas-engine/depurador.ts	/^class Depurador {$/;"	c
Device	pilas-engine/declaraciones/phaser.d.ts	/^    namespace Device {$/;"	c
DeviceConf	pilas-engine/declaraciones/phaser.d.ts	/^    type DeviceConf = {$/;"	t
Difference	pilas-engine/declaraciones/phaser.d.ts	/^        function Difference(a: number, b: number): number;$/;"	f
Display	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Display {$/;"	c
Display	pilas-engine/declaraciones/phaser.d.ts	/^    namespace Display {$/;"	c
DisplayCallback	pilas-engine/declaraciones/phaser.d.ts	/^                type DisplayCallback = (display: Phaser.Types.GameObjects.BitmapText.DisplayCallbackConfig)=>void;$/;"	t
DisplayCallbackConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type DisplayCallbackConfig = {$/;"	t
DisplayList	pilas-engine/declaraciones/phaser.d.ts	/^        class DisplayList extends Phaser.Structs.List<Phaser.GameObjects.GameObject> {$/;"	c
Distance	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Distance {$/;"	c
DownDuration	pilas-engine/declaraciones/phaser.d.ts	/^            function DownDuration(key: Phaser.Input.Keyboard.Key, duration?: number): boolean;$/;"	f
Drag	pilas-engine/declaraciones/phaser.d.ts	/^                interface Drag {$/;"	i
DynamicBitmapText	pilas-engine/declaraciones/phaser.d.ts	/^        class DynamicBitmapText extends Phaser.GameObjects.BitmapText {$/;"	c
E	pilas-engine/declaraciones/phaser.d.ts	/^                E: string;$/;"	m
ENVELOP	pilas-engine/declaraciones/phaser.d.ts	/^            static readonly ENVELOP: number;$/;"	m
ETC	pilas-engine/declaraciones/phaser.d.ts	/^                    ETC: object | undefined;$/;"	m
ETC1	pilas-engine/declaraciones/phaser.d.ts	/^                    ETC1: object | undefined;$/;"	m
Each	pilas-engine/declaraciones/phaser.d.ts	/^            function Each(array: any[], callback: Function, context: object, ...args: any[]): any[];$/;"	f
EachActiveSoundCallback	pilas-engine/declaraciones/phaser.d.ts	/^            type EachActiveSoundCallback = (manager: Phaser.Sound.BaseSoundManager, sound: Phaser.Sound.BaseSound, index: number, sounds: Phaser.Sound.BaseSound[])=>void;$/;"	t
EachInRange	pilas-engine/declaraciones/phaser.d.ts	/^            function EachInRange(array: any[], callback: Function, context: object, startIndex: number, endIndex: number, ...args: any[]): any[];$/;"	f
Earcut	pilas-engine/declaraciones/phaser.d.ts	/^            static Earcut(data: number[], holeIndices?: number[], dimensions?: number): number[];$/;"	m
Easing	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Easing {$/;"	c
EdgeZone	pilas-engine/declaraciones/phaser.d.ts	/^                class EdgeZone {$/;"	c
EdgeZoneSource	pilas-engine/declaraciones/phaser.d.ts	/^                type EdgeZoneSource = {$/;"	t
EdgeZoneSourceCallback	pilas-engine/declaraciones/phaser.d.ts	/^                type EdgeZoneSourceCallback = (quantity: number, stepRate?: number)=>void;$/;"	t
Effects	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Effects {$/;"	c
Elastic	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Elastic {$/;"	c
Element	pilas-engine/libs/spriter.ts	/^class Element {$/;"	c
Ellipse	pilas-engine/declaraciones/phaser.d.ts	/^        class Ellipse extends Phaser.Curves.Curve {$/;"	c
Ellipse	pilas-engine/declaraciones/phaser.d.ts	/^        class Ellipse extends Phaser.GameObjects.Shape {$/;"	c
Ellipse	pilas-engine/declaraciones/phaser.d.ts	/^        class Ellipse {$/;"	c
EllipseCurveConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type EllipseCurveConfig = {$/;"	t
EmitterOp	pilas-engine/declaraciones/phaser.d.ts	/^            class EmitterOp {$/;"	c
EmitterOpCustomEmitConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type EmitterOpCustomEmitConfig = {$/;"	t
EmitterOpCustomUpdateConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type EmitterOpCustomUpdateConfig = {$/;"	t
EmitterOpEaseConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type EmitterOpEaseConfig = {$/;"	t
EmitterOpOnEmitCallback	pilas-engine/declaraciones/phaser.d.ts	/^                type EmitterOpOnEmitCallback = (particle: Phaser.GameObjects.Particles.Particle, key: string, value: number)=>void;$/;"	t
EmitterOpOnEmitType	pilas-engine/declaraciones/phaser.d.ts	/^                type EmitterOpOnEmitType = number | number[] | Phaser.Types.GameObjects.Particles.EmitterOpOnEmitCallback | Phaser.Types.GameObjects.Particles.EmitterOpRandomConfig | Phaser.Types.GameObjects.Particles.EmitterOpRandomMinMaxConfig | Phaser.Types.GameObjects.Particles.EmitterOpRandomStartEndConfig | Phaser.Types.GameObjects.Particles.EmitterOpSteppedConfig | Phaser.Types.GameObjects.Particles.EmitterOpCustomEmitConfig;$/;"	t
EmitterOpOnUpdateCallback	pilas-engine/declaraciones/phaser.d.ts	/^                type EmitterOpOnUpdateCallback = (particle: Phaser.GameObjects.Particles.Particle, key: string, t: number, value: number)=>void;$/;"	t
EmitterOpOnUpdateType	pilas-engine/declaraciones/phaser.d.ts	/^                type EmitterOpOnUpdateType = Phaser.Types.GameObjects.Particles.EmitterOpOnUpdateCallback | Phaser.Types.GameObjects.Particles.EmitterOpEaseConfig | Phaser.Types.GameObjects.Particles.EmitterOpCustomUpdateConfig;$/;"	t
EmitterOpRandomConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type EmitterOpRandomConfig = {$/;"	t
EmitterOpRandomMinMaxConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type EmitterOpRandomMinMaxConfig = {$/;"	t
EmitterOpRandomStartEndConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type EmitterOpRandomStartEndConfig = {$/;"	t
EmitterOpSteppedConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type EmitterOpSteppedConfig = {$/;"	t
Enable	pilas-engine/declaraciones/phaser.d.ts	/^                interface Enable {$/;"	i
Enter	pilas-engine/utilidades.ts	/^      Enter: "enter"$/;"	m
Entity	pilas-engine/libs/spriter.ts	/^class Entity extends Element {$/;"	c
EntityObject	pilas-engine/libs/spriter.ts	/^class EntityObject extends BaseObject {$/;"	c
EntityTimelineKeyframe	pilas-engine/libs/spriter.ts	/^class EntityTimelineKeyframe extends TimelineKeyframe {$/;"	c
Equal	pilas-engine/declaraciones/phaser.d.ts	/^            function Equal(a: number, b: number, epsilon?: number): boolean;$/;"	f
Equals	pilas-engine/declaraciones/phaser.d.ts	/^            static Equals(circle: Phaser.Geom.Circle, toCompare: Phaser.Geom.Circle): boolean;$/;"	m
Equals	pilas-engine/declaraciones/phaser.d.ts	/^            static Equals(ellipse: Phaser.Geom.Ellipse, toCompare: Phaser.Geom.Ellipse): boolean;$/;"	m
Equals	pilas-engine/declaraciones/phaser.d.ts	/^            static Equals(line: Phaser.Geom.Line, toCompare: Phaser.Geom.Line): boolean;$/;"	m
Equals	pilas-engine/declaraciones/phaser.d.ts	/^            static Equals(point: Phaser.Geom.Point, toCompare: Phaser.Geom.Point): boolean;$/;"	m
Equals	pilas-engine/declaraciones/phaser.d.ts	/^            static Equals(rect: Phaser.Geom.Rectangle, toCompare: Phaser.Geom.Rectangle): boolean;$/;"	m
Equals	pilas-engine/declaraciones/phaser.d.ts	/^            static Equals(triangle: Phaser.Geom.Triangle, toCompare: Phaser.Geom.Triangle): boolean;$/;"	m
Escape	pilas-engine/utilidades.ts	/^      Escape: "escape",$/;"	m
Escena	pilas-engine/escenas/-escena.ts	/^class Escena extends EscenaBase {$/;"	c
EscenaBase	pilas-engine/escenas/-escena-base.ts	/^class EscenaBase {$/;"	c
Escenas	pilas-engine/escenas.ts	/^class Escenas {$/;"	c
Euler	pilas-engine/declaraciones/phaser.d.ts	/^        class Euler {$/;"	c
Event	pilas-engine/declaraciones/phaser.d.ts	/^            type Event = string;$/;"	t
EventData	pilas-engine/declaraciones/phaser.d.ts	/^            type EventData = {$/;"	t
EventEmitter	pilas-engine/declaraciones/phaser.d.ts	/^        class EventEmitter {$/;"	c
Eventline	pilas-engine/libs/spriter.ts	/^class Eventline extends Element {$/;"	c
EventlineKeyframe	pilas-engine/libs/spriter.ts	/^class EventlineKeyframe extends Keyframe {$/;"	c
Eventos	pilas-engine/eventos.ts	/^class Eventos {$/;"	c
EventosDeEscena	pilas-engine/eventos_de_escena.ts	/^class EventosDeEscena {$/;"	c
Events	pilas-engine/declaraciones/phaser.d.ts	/^                namespace Events {$/;"	c
Events	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Events {$/;"	c
Events	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Events {$/;"	c
Events	pilas-engine/declaraciones/phaser.d.ts	/^    namespace Events {$/;"	c
Expo	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Expo {$/;"	c
Extend	pilas-engine/declaraciones/phaser.d.ts	/^            function Extend(...args: any[]): object;$/;"	f
Extend	pilas-engine/declaraciones/phaser.d.ts	/^            static Extend(line: Phaser.Geom.Line, left: number, right?: number): Phaser.Geom.Line;$/;"	m
Extern	pilas-engine/declaraciones/phaser.d.ts	/^        class Extern extends Phaser.GameObjects.GameObject implements Phaser.GameObjects.Components.Alpha, Phaser.GameObjects.Components.BlendMode, Phaser.GameObjects.Components.Depth, Phaser.GameObjects.Components.Flip, Phaser.GameObjects.Components.Origin, Phaser.GameObjects.Components.ScrollFactor, Phaser.GameObjects.Components.Size, Phaser.GameObjects.Components.Texture, Phaser.GameObjects.Components.Tint, Phaser.GameObjects.Components.Transform, Phaser.GameObjects.Components.Visible {$/;"	c
F	pilas-engine/declaraciones/phaser.d.ts	/^                F: string;$/;"	m
FIT	pilas-engine/declaraciones/phaser.d.ts	/^            static readonly FIT: number;$/;"	m
FORWARD	pilas-engine/declaraciones/phaser.d.ts	/^            static readonly FORWARD: Phaser.Math.Vector3;$/;"	m
FPSConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type FPSConfig = {$/;"	t
Face	pilas-engine/declaraciones/phaser.d.ts	/^            class Face {$/;"	c
Face	pilas-engine/declaraciones/phaser.d.ts	/^            type Face = {$/;"	t
FacebookInstantGamesLeaderboard	pilas-engine/declaraciones/phaser.d.ts	/^    class FacebookInstantGamesLeaderboard extends Phaser.Events.EventEmitter {$/;"	c
FacebookInstantGamesPlugin	pilas-engine/declaraciones/phaser.d.ts	/^    class FacebookInstantGamesPlugin extends Phaser.Events.EventEmitter {$/;"	c
Factorial	pilas-engine/declaraciones/phaser.d.ts	/^        function Factorial(value: number): number;$/;"	f
Factory	pilas-engine/declaraciones/phaser.d.ts	/^            class Factory {$/;"	c
Fade	pilas-engine/declaraciones/phaser.d.ts	/^                class Fade {$/;"	c
Features	pilas-engine/declaraciones/phaser.d.ts	/^        type Features = {$/;"	t
File	pilas-engine/declaraciones/phaser.d.ts	/^        class File {$/;"	c
File	pilas-engine/libs/spriter.ts	/^class File extends Element {$/;"	c
FileConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type FileConfig = {$/;"	t
FileTypes	pilas-engine/declaraciones/phaser.d.ts	/^            namespace FileTypes {$/;"	c
FileTypes	pilas-engine/declaraciones/phaser.d.ts	/^        namespace FileTypes {$/;"	c
FileTypesManager	pilas-engine/declaraciones/phaser.d.ts	/^        namespace FileTypesManager {$/;"	c
Fill	pilas-engine/declaraciones/phaser.d.ts	/^            function Fill(index: number, tileX: number, tileY: number, width: number, height: number, recalculateFaces: boolean, layer: Phaser.Tilemaps.LayerData): void;$/;"	f
FillStyle	pilas-engine/declaraciones/phaser.d.ts	/^                type FillStyle = {$/;"	t
FilterMode	pilas-engine/declaraciones/phaser.d.ts	/^        enum FilterMode {$/;"	e
FilterTiles	pilas-engine/declaraciones/phaser.d.ts	/^            function FilterTiles(callback: Function, context: object, tileX: number, tileY: number, width: number, height: number, filteringOptions: Phaser.Types.Tilemaps.FilteringOptions, layer: Phaser.Tilemaps.LayerData): Phaser.Tilemaps.Tile[];$/;"	f
FilteringOptions	pilas-engine/declaraciones/phaser.d.ts	/^            type FilteringOptions = {$/;"	t
FindByIndex	pilas-engine/declaraciones/phaser.d.ts	/^            function FindByIndex(index: number, skip: number, reverse: boolean, layer: Phaser.Tilemaps.LayerData): Phaser.Tilemaps.Tile;$/;"	f
FindClosestInSorted	pilas-engine/declaraciones/phaser.d.ts	/^            function FindClosestInSorted(value: number, array: any[], key?: string): number | any;$/;"	f
FindTile	pilas-engine/declaraciones/phaser.d.ts	/^            function FindTile(callback: FindTileCallback, context: object, tileX: number, tileY: number, width: number, height: number, filteringOptions: Phaser.Types.Tilemaps.FilteringOptions, layer: Phaser.Tilemaps.LayerData): Phaser.Tilemaps.Tile;$/;"	f
Fisica	pilas-engine/fisica.ts	/^class Fisica {$/;"	c
FixedKeyControl	pilas-engine/declaraciones/phaser.d.ts	/^            class FixedKeyControl {$/;"	c
FixedKeyControlConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type FixedKeyControlConfig = {$/;"	t
Flash	pilas-engine/declaraciones/phaser.d.ts	/^                class Flash {$/;"	c
Flip	pilas-engine/declaraciones/phaser.d.ts	/^            interface Flip {$/;"	i
FloatBetween	pilas-engine/declaraciones/phaser.d.ts	/^        function FloatBetween(min: number, max: number): number;$/;"	f
Floor	pilas-engine/declaraciones/phaser.d.ts	/^            function Floor(value: number, epsilon?: number): number;$/;"	f
Floor	pilas-engine/declaraciones/phaser.d.ts	/^            function Floor(value: number, gap: number, start?: number, divide?: boolean): number;$/;"	f
FloorTo	pilas-engine/declaraciones/phaser.d.ts	/^        function FloorTo(value: number, place?: number, base?: number): number;$/;"	f
Folder	pilas-engine/libs/spriter.ts	/^class Folder extends Element {$/;"	c
ForEachTile	pilas-engine/declaraciones/phaser.d.ts	/^            function ForEachTile(callback: EachTileCallback, context: object, tileX: number, tileY: number, width: number, height: number, filteringOptions: Phaser.Types.Tilemaps.FilteringOptions, layer: Phaser.Tilemaps.LayerData): void;$/;"	f
Force	pilas-engine/declaraciones/phaser.d.ts	/^                interface Force {$/;"	i
Format	pilas-engine/declaraciones/phaser.d.ts	/^            function Format(string: string, values: any[]): string;$/;"	f
Formats	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Formats {$/;"	c
Frame	pilas-engine/declaraciones/phaser.d.ts	/^        class Frame {$/;"	c
Friction	pilas-engine/declaraciones/phaser.d.ts	/^                interface Friction {$/;"	i
FromOrientationString	pilas-engine/declaraciones/phaser.d.ts	/^            function FromOrientationString(orientation?: string): Phaser.Tilemaps.OrientationType;$/;"	f
FromPercent	pilas-engine/declaraciones/phaser.d.ts	/^        function FromPercent(percent: number, min: number, max?: number): number;$/;"	f
Fullscreen	pilas-engine/declaraciones/phaser.d.ts	/^        type Fullscreen = {$/;"	t
Fuzzy	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Fuzzy {$/;"	c
GIDData	pilas-engine/declaraciones/phaser.d.ts	/^            type GIDData = {$/;"	t
GLSLFile	pilas-engine/declaraciones/phaser.d.ts	/^            class GLSLFile extends Phaser.Loader.File {$/;"	c
GLSLFileConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type GLSLFileConfig = {$/;"	t
Game	pilas-engine/declaraciones/phaser.d.ts	/^    class Game {$/;"	c
GameConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type GameConfig = {$/;"	t
GameObject	pilas-engine/declaraciones/phaser.d.ts	/^        class GameObject extends Phaser.Events.EventEmitter {$/;"	c
GameObjectConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type GameObjectConfig = {$/;"	t
GameObjectCreator	pilas-engine/declaraciones/phaser.d.ts	/^        class GameObjectCreator {$/;"	c
GameObjectFactory	pilas-engine/declaraciones/phaser.d.ts	/^        class GameObjectFactory {$/;"	c
GameObjectWithBody	pilas-engine/declaraciones/phaser.d.ts	/^                type GameObjectWithBody = Phaser.GameObjects.GameObject & {$/;"	t
GameObjectWithDynamicBody	pilas-engine/declaraciones/phaser.d.ts	/^                type GameObjectWithDynamicBody = Phaser.GameObjects.GameObject & {$/;"	t
GameObjectWithStaticBody	pilas-engine/declaraciones/phaser.d.ts	/^                type GameObjectWithStaticBody = Phaser.GameObjects.GameObject & {$/;"	t
GameObjects	pilas-engine/declaraciones/phaser.d.ts	/^        namespace GameObjects {$/;"	c
GameObjects	pilas-engine/declaraciones/phaser.d.ts	/^    namespace GameObjects {$/;"	c
GamePad	pilas-engine/control.ts	/^class GamePad {$/;"	c
Gamepad	pilas-engine/declaraciones/phaser.d.ts	/^            class Gamepad extends Phaser.Events.EventEmitter {$/;"	c
Gamepad	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Gamepad {$/;"	c
Gamepad	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Gamepad {$/;"	c
GamepadInputConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type GamepadInputConfig = {$/;"	t
GamepadPlugin	pilas-engine/declaraciones/phaser.d.ts	/^            class GamepadPlugin extends Phaser.Events.EventEmitter {$/;"	c
GenerateFrameNames	pilas-engine/declaraciones/phaser.d.ts	/^            type GenerateFrameNames = {$/;"	t
GenerateFrameNumbers	pilas-engine/declaraciones/phaser.d.ts	/^            type GenerateFrameNumbers = {$/;"	t
GenerateGridConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type GenerateGridConfig = {$/;"	t
GenerateGridVerts	pilas-engine/declaraciones/phaser.d.ts	/^            function GenerateGridVerts(config: Phaser.Types.Geom.Mesh.GenerateGridConfig): Phaser.Types.Geom.Mesh.GenerateGridVertsResult;$/;"	f
GenerateGridVertsResult	pilas-engine/declaraciones/phaser.d.ts	/^                type GenerateGridVertsResult = {$/;"	t
GenerateObjVerts	pilas-engine/declaraciones/phaser.d.ts	/^            function GenerateObjVerts(data: Phaser.Types.Geom.Mesh.OBJData, mesh?: Phaser.GameObjects.Mesh, scale?: number, x?: number, y?: number, z?: number, rotateX?: number, rotateY?: number, rotateZ?: number, zIsUp?: boolean): Phaser.Types.Geom.Mesh.GenerateVertsResult;$/;"	f
GenerateTexture	pilas-engine/declaraciones/phaser.d.ts	/^        function GenerateTexture(config: Phaser.Types.Create.GenerateTextureConfig): HTMLCanvasElement;$/;"	f
GenerateTextureCallback	pilas-engine/declaraciones/phaser.d.ts	/^            type GenerateTextureCallback = (canvas: HTMLCanvasElement, context: CanvasRenderingContext2D)=>void;$/;"	t
GenerateTextureConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type GenerateTextureConfig = {$/;"	t
GenerateVerts	pilas-engine/declaraciones/phaser.d.ts	/^            function GenerateVerts(vertices: number[], uvs: number[], indicies?: number[], containsZ?: boolean, normals?: number[], colors?: number | number[], alphas?: number | number[]): Phaser.Types.Geom.Mesh.GenerateVertsResult;$/;"	f
GenerateVertsResult	pilas-engine/declaraciones/phaser.d.ts	/^                type GenerateVertsResult = {$/;"	t
Geom	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Geom {$/;"	c
Geom	pilas-engine/declaraciones/phaser.d.ts	/^    namespace Geom {$/;"	c
GeometryMask	pilas-engine/declaraciones/phaser.d.ts	/^            class GeometryMask {$/;"	c
GetActiveCallback	pilas-engine/declaraciones/phaser.d.ts	/^            type GetActiveCallback = (target: any, key: string, value: number, targetIndex: number, totalTargets: number, tween: Phaser.Tweens.Tween)=>void;$/;"	t
GetAdvancedValue	pilas-engine/declaraciones/phaser.d.ts	/^            function GetAdvancedValue(source: object, key: string, defaultValue: any): any;$/;"	f
GetAll	pilas-engine/declaraciones/phaser.d.ts	/^            function GetAll(array: any[], property?: string, value?: any, startIndex?: number, endIndex?: number): any[];$/;"	f
GetAspectRatio	pilas-engine/declaraciones/phaser.d.ts	/^            static GetAspectRatio(rect: Phaser.Geom.Rectangle): number;$/;"	m
GetBlendModes	pilas-engine/declaraciones/phaser.d.ts	/^            function GetBlendModes(): any[];$/;"	f
GetBoolean	pilas-engine/declaraciones/phaser.d.ts	/^            function GetBoolean(source: object, key: string, defaultValue: any): any;$/;"	f
GetBottom	pilas-engine/declaraciones/phaser.d.ts	/^            function GetBottom(gameObject: Phaser.GameObjects.GameObject): number;$/;"	f
GetBounds	pilas-engine/declaraciones/phaser.d.ts	/^            function GetBounds(gameObject: Phaser.GameObjects.GameObject, output?: Phaser.Geom.Rectangle | object): Phaser.Geom.Rectangle | object;$/;"	f
GetBounds	pilas-engine/declaraciones/phaser.d.ts	/^            interface GetBounds {$/;"	i
GetCalcMatrix	pilas-engine/declaraciones/phaser.d.ts	/^        function GetCalcMatrix(src: Phaser.GameObjects.GameObject, camera: Phaser.Cameras.Scene2D.Camera, parentMatrix?: Phaser.GameObjects.Components.TransformMatrix): Phaser.Types.GameObjects.GetCalcMatrixResults;$/;"	f
GetCalcMatrixResults	pilas-engine/declaraciones/phaser.d.ts	/^            type GetCalcMatrixResults = {$/;"	t
GetCenterX	pilas-engine/declaraciones/phaser.d.ts	/^            function GetCenterX(gameObject: Phaser.GameObjects.GameObject): number;$/;"	f
GetCenterY	pilas-engine/declaraciones/phaser.d.ts	/^            function GetCenterY(gameObject: Phaser.GameObjects.GameObject): number;$/;"	f
GetCircleToCircle	pilas-engine/declaraciones/phaser.d.ts	/^            function GetCircleToCircle(circleA: Phaser.Geom.Circle, circleB: Phaser.Geom.Circle, out?: any[]): any[];$/;"	f
GetCircleToRectangle	pilas-engine/declaraciones/phaser.d.ts	/^            function GetCircleToRectangle(circle: Phaser.Geom.Circle, rect: Phaser.Geom.Rectangle, out?: any[]): any[];$/;"	f
GetColor	pilas-engine/declaraciones/phaser.d.ts	/^            static GetColor(red: number, green: number, blue: number): number;$/;"	m
GetColor32	pilas-engine/declaraciones/phaser.d.ts	/^            static GetColor32(red: number, green: number, blue: number, alpha: number): number;$/;"	m
GetCullTilesFunction	pilas-engine/declaraciones/phaser.d.ts	/^            function GetCullTilesFunction(orientation: number): Function;$/;"	f
GetEaseFunction	pilas-engine/declaraciones/phaser.d.ts	/^            function GetEaseFunction(ease: string | Function, easeParams?: number[]): Function;$/;"	f
GetEndCallback	pilas-engine/declaraciones/phaser.d.ts	/^            type GetEndCallback = (target: any, key: string, value: number, targetIndex: number, totalTargets: number, tween: Phaser.Tweens.Tween)=>void;$/;"	t
GetFastValue	pilas-engine/declaraciones/phaser.d.ts	/^            function GetFastValue(source: object, key: string, defaultValue?: any): any;$/;"	f
GetFirst	pilas-engine/declaraciones/phaser.d.ts	/^            function GetFirst(array: any[], property?: string, value?: any, startIndex?: number, endIndex?: number): object;$/;"	f
GetFirst	pilas-engine/declaraciones/phaser.d.ts	/^        function GetFirst<G extends Phaser.GameObjects.GameObject[]>(items: G, compare: object, index?: number): object | Phaser.GameObjects.GameObject;$/;"	f
GetInnerHeight	pilas-engine/declaraciones/phaser.d.ts	/^        function GetInnerHeight(iOS: boolean): number;$/;"	f
GetLast	pilas-engine/declaraciones/phaser.d.ts	/^        function GetLast<G extends Phaser.GameObjects.GameObject[]>(items: G, compare: object, index?: number): object | Phaser.GameObjects.GameObject;$/;"	f
GetLeft	pilas-engine/declaraciones/phaser.d.ts	/^            function GetLeft(gameObject: Phaser.GameObjects.GameObject): number;$/;"	f
GetLineToCircle	pilas-engine/declaraciones/phaser.d.ts	/^            function GetLineToCircle(line: Phaser.Geom.Line, circle: Phaser.Geom.Circle, out?: any[]): any[];$/;"	f
GetLineToLine	pilas-engine/declaraciones/phaser.d.ts	/^            function GetLineToLine(line1: Phaser.Geom.Line, line2: Phaser.Geom.Line, out?: Phaser.Math.Vector3): Phaser.Math.Vector3;$/;"	f
GetLineToPoints	pilas-engine/declaraciones/phaser.d.ts	/^            function GetLineToPoints(line: Phaser.Geom.Line, points: Phaser.Math.Vector2[] | Phaser.Geom.Point[], out?: Phaser.Math.Vector3): Phaser.Math.Vector3;$/;"	f
GetLineToPolygon	pilas-engine/declaraciones/phaser.d.ts	/^            function GetLineToPolygon(line: Phaser.Geom.Line, polygons: Phaser.Geom.Polygon | Phaser.Geom.Polygon[], out?: Phaser.Math.Vector4): Phaser.Math.Vector4;$/;"	f
GetLineToRectangle	pilas-engine/declaraciones/phaser.d.ts	/^            function GetLineToRectangle(line: Phaser.Geom.Line, rect: Phaser.Geom.Rectangle | object, out?: any[]): any[];$/;"	f
GetMagnitude	pilas-engine/declaraciones/phaser.d.ts	/^            static GetMagnitude(point: Phaser.Geom.Point): number;$/;"	m
GetMagnitudeSq	pilas-engine/declaraciones/phaser.d.ts	/^            static GetMagnitudeSq(point: Phaser.Geom.Point): number;$/;"	m
GetMinMaxValue	pilas-engine/declaraciones/phaser.d.ts	/^            function GetMinMaxValue(source: object, key: string, min: number, max: number, defaultValue: number): number;$/;"	f
GetNewValue	pilas-engine/declaraciones/phaser.d.ts	/^            function GetNewValue(source: any, key: string, defaultValue: any): Function;$/;"	f
GetNext	pilas-engine/declaraciones/phaser.d.ts	/^            function GetNext(value: number): number;$/;"	f
GetOffsetX	pilas-engine/declaraciones/phaser.d.ts	/^            function GetOffsetX(gameObject: Phaser.GameObjects.GameObject): number;$/;"	f
GetOffsetY	pilas-engine/declaraciones/phaser.d.ts	/^            function GetOffsetY(gameObject: Phaser.GameObjects.GameObject): number;$/;"	f
GetOverlapX	pilas-engine/declaraciones/phaser.d.ts	/^            function GetOverlapX(body1: Phaser.Physics.Arcade.Body, body2: Phaser.Physics.Arcade.Body, overlapOnly: boolean, bias: number): number;$/;"	f
GetOverlapY	pilas-engine/declaraciones/phaser.d.ts	/^            function GetOverlapY(body1: Phaser.Physics.Arcade.Body, body2: Phaser.Physics.Arcade.Body, overlapOnly: boolean, bias: number): number;$/;"	f
GetPhysicsPlugins	pilas-engine/declaraciones/phaser.d.ts	/^        function GetPhysicsPlugins(sys: Phaser.Scenes.Systems): any[];$/;"	f
GetPoints	pilas-engine/declaraciones/phaser.d.ts	/^            static GetPoints(circle: Phaser.Geom.Circle, quantity: number, stepRate?: number, output?: any[]): Phaser.Geom.Point[];$/;"	m
GetPoints	pilas-engine/declaraciones/phaser.d.ts	/^            static GetPoints(polygon: Phaser.Geom.Polygon, quantity: number, stepRate?: number, output?: any[]): Phaser.Geom.Point[];$/;"	m
GetProps	pilas-engine/declaraciones/phaser.d.ts	/^            function GetProps(config: Phaser.Types.Tweens.TweenBuilderConfig): string[];$/;"	f
GetRandom	pilas-engine/declaraciones/phaser.d.ts	/^            function GetRandom(array: any[], startIndex?: number, length?: number): any;$/;"	f
GetRaysFromPointToPolygon	pilas-engine/declaraciones/phaser.d.ts	/^            function GetRaysFromPointToPolygon(x: number, y: number, polygons: Phaser.Geom.Polygon | Phaser.Geom.Polygon[]): Phaser.Math.Vector4[];$/;"	f
GetRectangleIntersection	pilas-engine/declaraciones/phaser.d.ts	/^            function GetRectangleIntersection<O extends Phaser.Geom.Rectangle>(rectA: Phaser.Geom.Rectangle, rectB: Phaser.Geom.Rectangle, output?: O): O;$/;"	f
GetRectangleToRectangle	pilas-engine/declaraciones/phaser.d.ts	/^            function GetRectangleToRectangle(rectA: Phaser.Geom.Rectangle, rectB: Phaser.Geom.Rectangle, out?: any[]): any[];$/;"	f
GetRectangleToTriangle	pilas-engine/declaraciones/phaser.d.ts	/^            function GetRectangleToTriangle(rect: Phaser.Geom.Rectangle, triangle: Phaser.Geom.Triangle, out?: any[]): any[];$/;"	f
GetRight	pilas-engine/declaraciones/phaser.d.ts	/^            function GetRight(gameObject: Phaser.GameObjects.GameObject): number;$/;"	f
GetScenePlugins	pilas-engine/declaraciones/phaser.d.ts	/^        function GetScenePlugins(sys: Phaser.Scenes.Systems): any[];$/;"	f
GetScreenOrientation	pilas-engine/declaraciones/phaser.d.ts	/^        function GetScreenOrientation(width: number, height: number): string;$/;"	f
GetSpeed	pilas-engine/declaraciones/phaser.d.ts	/^        function GetSpeed(distance: number, time: number): number;$/;"	f
GetStartCallback	pilas-engine/declaraciones/phaser.d.ts	/^            type GetStartCallback = (target: any, key: string, value: number, targetIndex: number, totalTargets: number, tween: Phaser.Tweens.Tween)=>void;$/;"	t
GetTarget	pilas-engine/declaraciones/phaser.d.ts	/^        function GetTarget(element: HTMLElement): void;$/;"	f
GetTargets	pilas-engine/declaraciones/phaser.d.ts	/^            function GetTargets(config: object): any[];$/;"	f
GetTextSize	pilas-engine/declaraciones/phaser.d.ts	/^        function GetTextSize(text: Phaser.GameObjects.Text, size: Phaser.Types.GameObjects.Text.TextMetrics, lines: string[]): Phaser.Types.GameObjects.Text.GetTextSizeObject;$/;"	f
GetTextSizeObject	pilas-engine/declaraciones/phaser.d.ts	/^                type GetTextSizeObject = {$/;"	t
GetTileAt	pilas-engine/declaraciones/phaser.d.ts	/^            function GetTileAt(tileX: number, tileY: number, nonNull: boolean, layer: Phaser.Tilemaps.LayerData): Phaser.Tilemaps.Tile;$/;"	f
GetTileAtWorldXY	pilas-engine/declaraciones/phaser.d.ts	/^            function GetTileAtWorldXY(worldX: number, worldY: number, nonNull: boolean, camera: Phaser.Cameras.Scene2D.Camera, layer: Phaser.Tilemaps.LayerData): Phaser.Tilemaps.Tile;$/;"	f
GetTileToWorldXFunction	pilas-engine/declaraciones/phaser.d.ts	/^            function GetTileToWorldXFunction(orientation: number): Function;$/;"	f
GetTileToWorldXYFunction	pilas-engine/declaraciones/phaser.d.ts	/^            function GetTileToWorldXYFunction(orientation: number): Function;$/;"	f
GetTileToWorldYFunction	pilas-engine/declaraciones/phaser.d.ts	/^            function GetTileToWorldYFunction(orientation: number): Function;$/;"	f
GetTilesWithin	pilas-engine/declaraciones/phaser.d.ts	/^            function GetTilesWithin(tileX: number, tileY: number, width: number, height: number, filteringOptions: Phaser.Types.Tilemaps.FilteringOptions, layer: Phaser.Tilemaps.LayerData): Phaser.Tilemaps.Tile[];$/;"	f
GetTilesWithinShape	pilas-engine/declaraciones/phaser.d.ts	/^            function GetTilesWithinShape(shape: Phaser.Geom.Circle | Phaser.Geom.Line | Phaser.Geom.Rectangle | Phaser.Geom.Triangle, filteringOptions: Phaser.Types.Tilemaps.FilteringOptions, camera: Phaser.Cameras.Scene2D.Camera, layer: Phaser.Tilemaps.LayerData): Phaser.Tilemaps.Tile[];$/;"	f
GetTilesWithinWorldXY	pilas-engine/declaraciones/phaser.d.ts	/^            function GetTilesWithinWorldXY(worldX: number, worldY: number, width: number, height: number, filteringOptions: Phaser.Types.Tilemaps.FilteringOptions, camera: Phaser.Cameras.Scene2D.Camera, layer: Phaser.Tilemaps.LayerData): Phaser.Tilemaps.Tile[];$/;"	f
GetTop	pilas-engine/declaraciones/phaser.d.ts	/^            function GetTop(gameObject: Phaser.GameObjects.GameObject): number;$/;"	f
GetTriangleToCircle	pilas-engine/declaraciones/phaser.d.ts	/^            function GetTriangleToCircle(triangle: Phaser.Geom.Triangle, circle: Phaser.Geom.Circle, out?: any[]): any[];$/;"	f
GetTriangleToLine	pilas-engine/declaraciones/phaser.d.ts	/^            function GetTriangleToLine(triangle: Phaser.Geom.Triangle, line: Phaser.Geom.Line, out?: any[]): any[];$/;"	f
GetTriangleToTriangle	pilas-engine/declaraciones/phaser.d.ts	/^            function GetTriangleToTriangle(triangleA: Phaser.Geom.Triangle, triangleB: Phaser.Geom.Triangle, out?: any[]): any[];$/;"	f
GetTweens	pilas-engine/declaraciones/phaser.d.ts	/^            function GetTweens(config: Phaser.Types.Tweens.TimelineBuilderConfig): Phaser.Tweens.Tween[];$/;"	f
GetURL	pilas-engine/declaraciones/phaser.d.ts	/^        function GetURL(file: Phaser.Loader.File, baseURL: string): string;$/;"	f
GetValue	pilas-engine/declaraciones/phaser.d.ts	/^            function GetValue(source: object, key: string, defaultValue: any): any;$/;"	f
GetValueOp	pilas-engine/declaraciones/phaser.d.ts	/^            function GetValueOp(key: string, propertyValue: any): Function;$/;"	f
GetWorldToTileXFunction	pilas-engine/declaraciones/phaser.d.ts	/^            function GetWorldToTileXFunction(orientation: number): Function;$/;"	f
GetWorldToTileXYFunction	pilas-engine/declaraciones/phaser.d.ts	/^            function GetWorldToTileXYFunction(orientation: number): Function;$/;"	f
GetWorldToTileYFunction	pilas-engine/declaraciones/phaser.d.ts	/^            function GetWorldToTileYFunction(orientation: number): Function;$/;"	f
GlobalBitmapTextSize	pilas-engine/declaraciones/phaser.d.ts	/^                type GlobalBitmapTextSize = {$/;"	t
GlobalPlugin	pilas-engine/declaraciones/phaser.d.ts	/^            type GlobalPlugin = {$/;"	t
Graphics	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Graphics {$/;"	c
Graphics	pilas-engine/declaraciones/phaser.d.ts	/^        class Graphics extends Phaser.GameObjects.GameObject implements Phaser.GameObjects.Components.AlphaSingle, Phaser.GameObjects.Components.BlendMode, Phaser.GameObjects.Components.Depth, Phaser.GameObjects.Components.Mask, Phaser.GameObjects.Components.Pipeline, Phaser.GameObjects.Components.Transform, Phaser.GameObjects.Components.Visible, Phaser.GameObjects.Components.ScrollFactor {$/;"	c
GraphicsPipeline	pilas-engine/declaraciones/phaser.d.ts	/^                class GraphicsPipeline extends Phaser.Renderer.WebGL.WebGLPipeline {$/;"	c
Gravity	pilas-engine/declaraciones/phaser.d.ts	/^                interface Gravity {$/;"	i
GravityWell	pilas-engine/declaraciones/phaser.d.ts	/^            class GravityWell {$/;"	c
GravityWellConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type GravityWellConfig = {$/;"	t
GreaterThan	pilas-engine/declaraciones/phaser.d.ts	/^            function GreaterThan(a: number, b: number, epsilon?: number): boolean;$/;"	f
Grid	pilas-engine/declaraciones/phaser.d.ts	/^        class Grid extends Phaser.GameObjects.Shape {$/;"	c
GridAlign	pilas-engine/declaraciones/phaser.d.ts	/^        function GridAlign<G extends Phaser.GameObjects.GameObject[]>(items: G, options: Phaser.Types.Actions.GridAlignConfig): G;$/;"	f
GridAlignConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type GridAlignConfig = {$/;"	t
Group	pilas-engine/declaraciones/phaser.d.ts	/^            class Group extends Phaser.GameObjects.Group {$/;"	c
Group	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Group {$/;"	c
Group	pilas-engine/declaraciones/phaser.d.ts	/^        class Group extends Phaser.Events.EventEmitter {$/;"	c
GroupCallback	pilas-engine/declaraciones/phaser.d.ts	/^                type GroupCallback = (item: Phaser.GameObjects.GameObject)=>void;$/;"	t
GroupConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type GroupConfig = {$/;"	t
GroupCreateConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type GroupCreateConfig = {$/;"	t
GroupMultipleCreateCallback	pilas-engine/declaraciones/phaser.d.ts	/^                type GroupMultipleCreateCallback = (items: Phaser.GameObjects.GameObject[])=>void;$/;"	t
HEIGHT_CONTROLS_WIDTH	pilas-engine/declaraciones/phaser.d.ts	/^            static readonly HEIGHT_CONTROLS_WIDTH: number;$/;"	m
HSLToColor	pilas-engine/declaraciones/phaser.d.ts	/^            static HSLToColor(h: number, s: number, l: number): Phaser.Display.Color;$/;"	m
HSVColorObject	pilas-engine/declaraciones/phaser.d.ts	/^            type HSVColorObject = {$/;"	t
HSVColorWheel	pilas-engine/declaraciones/phaser.d.ts	/^            static HSVColorWheel(s?: number, v?: number): Phaser.Types.Display.ColorObject[];$/;"	m
HSVToRGB	pilas-engine/declaraciones/phaser.d.ts	/^            static HSVToRGB(h: number, s: number, v: number, out?: Phaser.Types.Display.ColorObject | Phaser.Display.Color): Phaser.Types.Display.ColorObject | Phaser.Display.Color;$/;"	m
HTML5AudioFile	pilas-engine/declaraciones/phaser.d.ts	/^            class HTML5AudioFile extends Phaser.Loader.File {$/;"	c
HTML5AudioSound	pilas-engine/declaraciones/phaser.d.ts	/^        class HTML5AudioSound extends Phaser.Sound.BaseSound {$/;"	c
HTML5AudioSoundManager	pilas-engine/declaraciones/phaser.d.ts	/^        class HTML5AudioSoundManager extends Phaser.Sound.BaseSoundManager {$/;"	c
HTMLFile	pilas-engine/declaraciones/phaser.d.ts	/^            class HTMLFile extends Phaser.Loader.File {$/;"	c
HTMLFileConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type HTMLFileConfig = {$/;"	t
HTMLTextureFile	pilas-engine/declaraciones/phaser.d.ts	/^            class HTMLTextureFile extends Phaser.Loader.File {$/;"	c
HTMLTextureFileConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type HTMLTextureFileConfig = {$/;"	t
Habilidad	pilas-engine/habilidades/-habilidad.ts	/^class Habilidad {$/;"	c
Habilidades	pilas-engine/habilidades.ts	/^class Habilidades {$/;"	c
HasAll	pilas-engine/declaraciones/phaser.d.ts	/^            function HasAll(source: object, keys: string[]): boolean;$/;"	f
HasAny	pilas-engine/declaraciones/phaser.d.ts	/^            function HasAny(source: object, keys: string[]): boolean;$/;"	f
HasTileAt	pilas-engine/declaraciones/phaser.d.ts	/^            function HasTileAt(tileX: number, tileY: number, layer: Phaser.Tilemaps.LayerData): boolean;$/;"	f
HasTileAtWorldXY	pilas-engine/declaraciones/phaser.d.ts	/^            function HasTileAtWorldXY(worldX: number, worldY: number, camera: Phaser.Cameras.Scene2D.Camera, layer: Phaser.Tilemaps.LayerData): boolean;$/;"	f
HasValue	pilas-engine/declaraciones/phaser.d.ts	/^            function HasValue(source: object, key: string): boolean;$/;"	f
Height	pilas-engine/declaraciones/phaser.d.ts	/^            static Height(line: Phaser.Geom.Line): number;$/;"	m
HexStringToColor	pilas-engine/declaraciones/phaser.d.ts	/^            static HexStringToColor(hex: string): Phaser.Display.Color;$/;"	m
HexagonalCullBounds	pilas-engine/declaraciones/phaser.d.ts	/^            function HexagonalCullBounds(layer: Phaser.Tilemaps.LayerData, camera: Phaser.Cameras.Scene2D.Camera): object;$/;"	f
HexagonalCullTiles	pilas-engine/declaraciones/phaser.d.ts	/^            function HexagonalCullTiles(layer: Phaser.Tilemaps.LayerData, camera: Phaser.Cameras.Scene2D.Camera, outputArray?: any[], renderOrder?: number): Phaser.Tilemaps.Tile[];$/;"	f
HexagonalTileToWorldXY	pilas-engine/declaraciones/phaser.d.ts	/^            function HexagonalTileToWorldXY(tileX: number, tileY: number, point: Phaser.Math.Vector2, camera: Phaser.Cameras.Scene2D.Camera, layer: Phaser.Tilemaps.LayerData): Phaser.Math.Vector2;$/;"	f
HexagonalTileToWorldY	pilas-engine/declaraciones/phaser.d.ts	/^            function HexagonalTileToWorldY(tileY: number, camera: Phaser.Cameras.Scene2D.Camera, layer: Phaser.Tilemaps.LayerData): number;$/;"	f
HexagonalWorldToTileXY	pilas-engine/declaraciones/phaser.d.ts	/^            function HexagonalWorldToTileXY(worldX: number, worldY: number, snapToFloor: boolean, point: Phaser.Math.Vector2, camera: Phaser.Cameras.Scene2D.Camera, layer: Phaser.Tilemaps.LayerData): Phaser.Math.Vector2;$/;"	f
HexagonalWorldToTileY	pilas-engine/declaraciones/phaser.d.ts	/^            function HexagonalWorldToTileY(worldY: number, snapToFloor: boolean, camera: Phaser.Cameras.Scene2D.Camera, layer: Phaser.Tilemaps.LayerData): number;$/;"	f
Historia	pilas-engine/historia.ts	/^class Historia {$/;"	c
HitAreaCallback	pilas-engine/declaraciones/phaser.d.ts	/^            type HitAreaCallback = (hitArea: any, x: number, y: number, gameObject: Phaser.GameObjects.GameObject)=>void;$/;"	t
HueToComponent	pilas-engine/declaraciones/phaser.d.ts	/^            static HueToComponent(p: number, q: number, t: number): number;$/;"	m
Huesos	pilas-engine/huesos.ts	/^class Huesos {$/;"	c
IMG	pilas-engine/declaraciones/phaser.d.ts	/^                    IMG: object | undefined;$/;"	m
Image	pilas-engine/declaraciones/phaser.d.ts	/^            class Image extends Phaser.GameObjects.Image implements Phaser.Physics.Arcade.Components.Acceleration, Phaser.Physics.Arcade.Components.Angular, Phaser.Physics.Arcade.Components.Bounce, Phaser.Physics.Arcade.Components.Debug, Phaser.Physics.Arcade.Components.Drag, Phaser.Physics.Arcade.Components.Enable, Phaser.Physics.Arcade.Components.Friction, Phaser.Physics.Arcade.Components.Gravity, Phaser.Physics.Arcade.Components.Immovable, Phaser.Physics.Arcade.Components.Mass, Phaser.Physics.Arcade.Components.Pushable, Phaser.Physics.Arcade.Components.Size, Phaser.Physics.Arcade.Components.Velocity, Phaser.GameObjects.Components.Alpha, Phaser.GameObjects.Components.BlendMode, Phaser.GameObjects.Components.Depth, Phaser.GameObjects.Components.Flip, Phaser.GameObjects.Components.GetBounds, Phaser.GameObjects.Components.Origin, Phaser.GameObjects.Components.Pipeline, Phaser.GameObjects.Components.ScrollFactor, Phaser.GameObjects.Components.Size, Phaser.GameObjects.Components.Texture, Phaser.GameObjects.Components.Tint, Phaser.GameObjects.Components.Transform, Phaser.GameObjects.Components.Visible {$/;"	c
Image	pilas-engine/declaraciones/phaser.d.ts	/^            class Image extends Phaser.GameObjects.Image implements Phaser.Physics.Matter.Components.Bounce, Phaser.Physics.Matter.Components.Collision, Phaser.Physics.Matter.Components.Force, Phaser.Physics.Matter.Components.Friction, Phaser.Physics.Matter.Components.Gravity, Phaser.Physics.Matter.Components.Mass, Phaser.Physics.Matter.Components.Sensor, Phaser.Physics.Matter.Components.SetBody, Phaser.Physics.Matter.Components.Sleep, Phaser.Physics.Matter.Components.Static, Phaser.Physics.Matter.Components.Transform, Phaser.Physics.Matter.Components.Velocity, Phaser.GameObjects.Components.Alpha, Phaser.GameObjects.Components.BlendMode, Phaser.GameObjects.Components.Depth, Phaser.GameObjects.Components.Flip, Phaser.GameObjects.Components.GetBounds, Phaser.GameObjects.Components.Origin, Phaser.GameObjects.Components.Pipeline, Phaser.GameObjects.Components.ScrollFactor, Phaser.GameObjects.Components.Size, Phaser.GameObjects.Components.Texture, Phaser.GameObjects.Components.Tint, Phaser.GameObjects.Components.Transform, Phaser.GameObjects.Components.Visible {$/;"	c
Image	pilas-engine/declaraciones/phaser.d.ts	/^        class Image extends Phaser.GameObjects.GameObject implements Phaser.GameObjects.Components.Alpha, Phaser.GameObjects.Components.BlendMode, Phaser.GameObjects.Components.Depth, Phaser.GameObjects.Components.Flip, Phaser.GameObjects.Components.GetBounds, Phaser.GameObjects.Components.Mask, Phaser.GameObjects.Components.Origin, Phaser.GameObjects.Components.Pipeline, Phaser.GameObjects.Components.ScrollFactor, Phaser.GameObjects.Components.Size, Phaser.GameObjects.Components.TextureCrop, Phaser.GameObjects.Components.Tint, Phaser.GameObjects.Components.Transform, Phaser.GameObjects.Components.Visible {$/;"	c
ImageCollection	pilas-engine/declaraciones/phaser.d.ts	/^        class ImageCollection {$/;"	c
ImageFile	pilas-engine/declaraciones/phaser.d.ts	/^            class ImageFile extends Phaser.Loader.File {$/;"	c
ImageFile	pilas-engine/libs/spriter.ts	/^class ImageFile extends File {$/;"	c
ImageFileConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type ImageFileConfig = {$/;"	t
ImageFrameConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type ImageFrameConfig = {$/;"	t
ImageWithDynamicBody	pilas-engine/declaraciones/phaser.d.ts	/^                type ImageWithDynamicBody = Phaser.Physics.Arcade.Image & {$/;"	t
ImageWithStaticBody	pilas-engine/declaraciones/phaser.d.ts	/^                type ImageWithStaticBody = Phaser.Physics.Arcade.Image & {$/;"	t
ImagesConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type ImagesConfig = {$/;"	t
Immovable	pilas-engine/declaraciones/phaser.d.ts	/^                interface Immovable {$/;"	i
Impact	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Impact {$/;"	c
In	pilas-engine/declaraciones/phaser.d.ts	/^                function In(v: number): number;$/;"	f
In	pilas-engine/declaraciones/phaser.d.ts	/^                function In(v: number, amplitude?: number, period?: number): number;$/;"	f
In	pilas-engine/declaraciones/phaser.d.ts	/^                function In(v: number, overshoot?: number): number;$/;"	f
In	pilas-engine/declaraciones/phaser.d.ts	/^            namespace In {$/;"	c
InOut	pilas-engine/declaraciones/phaser.d.ts	/^                function InOut(v: number): number;$/;"	f
InOut	pilas-engine/declaraciones/phaser.d.ts	/^                function InOut(v: number, amplitude?: number, period?: number): number;$/;"	f
InOut	pilas-engine/declaraciones/phaser.d.ts	/^                function InOut(v: number, overshoot?: number): number;$/;"	f
IncAlpha	pilas-engine/declaraciones/phaser.d.ts	/^        function IncAlpha<G extends Phaser.GameObjects.GameObject[]>(items: G, value: number, step?: number, index?: number, direction?: number): G;$/;"	f
IncX	pilas-engine/declaraciones/phaser.d.ts	/^        function IncX<G extends Phaser.GameObjects.GameObject[]>(items: G, value: number, step?: number, index?: number, direction?: number): G;$/;"	f
IncXY	pilas-engine/declaraciones/phaser.d.ts	/^        function IncXY<G extends Phaser.GameObjects.GameObject[]>(items: G, x: number, y?: number, stepX?: number, stepY?: number, index?: number, direction?: number): G;$/;"	f
IncY	pilas-engine/declaraciones/phaser.d.ts	/^        function IncY<G extends Phaser.GameObjects.GameObject[]>(items: G, value: number, step?: number, index?: number, direction?: number): G;$/;"	f
Input	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Input {$/;"	c
Input	pilas-engine/declaraciones/phaser.d.ts	/^        type Input = {$/;"	t
Input	pilas-engine/declaraciones/phaser.d.ts	/^    namespace Input {$/;"	c
InputColorObject	pilas-engine/declaraciones/phaser.d.ts	/^            type InputColorObject = {$/;"	t
InputConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type InputConfig = {$/;"	t
InputConfiguration	pilas-engine/declaraciones/phaser.d.ts	/^            type InputConfiguration = {$/;"	t
InputManager	pilas-engine/declaraciones/phaser.d.ts	/^        class InputManager {$/;"	c
InputPlugin	pilas-engine/declaraciones/phaser.d.ts	/^        class InputPlugin extends Phaser.Events.EventEmitter {$/;"	c
InputPluginCache	pilas-engine/declaraciones/phaser.d.ts	/^        namespace InputPluginCache {$/;"	c
InputPluginContainer	pilas-engine/declaraciones/phaser.d.ts	/^            type InputPluginContainer = {$/;"	t
IntegerToColor	pilas-engine/declaraciones/phaser.d.ts	/^            static IntegerToColor(input: number): Phaser.Display.Color;$/;"	m
IntegerToRGB	pilas-engine/declaraciones/phaser.d.ts	/^            static IntegerToRGB(input: number): Phaser.Types.Display.ColorObject;$/;"	m
InteractiveObject	pilas-engine/declaraciones/phaser.d.ts	/^            type InteractiveObject = {$/;"	t
Interpolate	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Interpolate {$/;"	c
Interpolation	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Interpolation {$/;"	c
Intersecci	pilas-engine/laser.ts	/^interface Intersecci√≥n {$/;"	i
Intersects	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Intersects {$/;"	c
IsEven	pilas-engine/declaraciones/phaser.d.ts	/^        function IsEven(value: number): boolean;$/;"	f
IsEvenStrict	pilas-engine/declaraciones/phaser.d.ts	/^        function IsEvenStrict(value: number): boolean;$/;"	f
IsInLayerBounds	pilas-engine/declaraciones/phaser.d.ts	/^            function IsInLayerBounds(tileX: number, tileY: number, layer: Phaser.Tilemaps.LayerData): boolean;$/;"	f
IsPlainObject	pilas-engine/declaraciones/phaser.d.ts	/^            function IsPlainObject(obj: object): boolean;$/;"	f
IsSize	pilas-engine/declaraciones/phaser.d.ts	/^            function IsSize(width: number, height: number): boolean;$/;"	f
IsValue	pilas-engine/declaraciones/phaser.d.ts	/^            function IsValue(value: number): boolean;$/;"	f
IsoBox	pilas-engine/declaraciones/phaser.d.ts	/^        class IsoBox extends Phaser.GameObjects.Shape {$/;"	c
IsoTriangle	pilas-engine/declaraciones/phaser.d.ts	/^        class IsoTriangle extends Phaser.GameObjects.Shape {$/;"	c
IsometricCullTiles	pilas-engine/declaraciones/phaser.d.ts	/^            function IsometricCullTiles(layer: Phaser.Tilemaps.LayerData, camera: Phaser.Cameras.Scene2D.Camera, outputArray?: any[], renderOrder?: number): Phaser.Tilemaps.Tile[];$/;"	f
IsometricTileToWorldXY	pilas-engine/declaraciones/phaser.d.ts	/^            function IsometricTileToWorldXY(tileX: number, tileY: number, point: Phaser.Math.Vector2, camera: Phaser.Cameras.Scene2D.Camera, layer: Phaser.Tilemaps.LayerData): Phaser.Math.Vector2;$/;"	f
IsometricWorldToTileXY	pilas-engine/declaraciones/phaser.d.ts	/^            function IsometricWorldToTileXY(worldX: number, worldY: number, snapToFloor: boolean, point: Phaser.Math.Vector2, camera: Phaser.Cameras.Scene2D.Camera, layer: Phaser.Tilemaps.LayerData): Phaser.Math.Vector2;$/;"	f
JSONAnimation	pilas-engine/declaraciones/phaser.d.ts	/^            type JSONAnimation = {$/;"	t
JSONAnimationFrame	pilas-engine/declaraciones/phaser.d.ts	/^            type JSONAnimationFrame = {$/;"	t
JSONAnimations	pilas-engine/declaraciones/phaser.d.ts	/^            type JSONAnimations = {$/;"	t
JSONBitmapText	pilas-engine/declaraciones/phaser.d.ts	/^                type JSONBitmapText = Phaser.Types.GameObjects.JSONGameObject & {$/;"	t
JSONCamera	pilas-engine/declaraciones/phaser.d.ts	/^                type JSONCamera = {$/;"	t
JSONCameraBounds	pilas-engine/declaraciones/phaser.d.ts	/^                type JSONCameraBounds = {$/;"	t
JSONCurve	pilas-engine/declaraciones/phaser.d.ts	/^            type JSONCurve = {$/;"	t
JSONEllipseCurve	pilas-engine/declaraciones/phaser.d.ts	/^            type JSONEllipseCurve = {$/;"	t
JSONFile	pilas-engine/declaraciones/phaser.d.ts	/^            class JSONFile extends Phaser.Loader.File {$/;"	c
JSONFileConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type JSONFileConfig = {$/;"	t
JSONGameObject	pilas-engine/declaraciones/phaser.d.ts	/^            type JSONGameObject = {$/;"	t
JSONPath	pilas-engine/declaraciones/phaser.d.ts	/^            type JSONPath = {$/;"	t
JustDown	pilas-engine/declaraciones/phaser.d.ts	/^            function JustDown(key: Phaser.Input.Keyboard.Key): boolean;$/;"	f
JustUp	pilas-engine/declaraciones/phaser.d.ts	/^            function JustUp(key: Phaser.Input.Keyboard.Key): boolean;$/;"	f
KTXParser	pilas-engine/declaraciones/phaser.d.ts	/^            function KTXParser(data: ArrayBuffer): Phaser.Types.Textures.CompressedTextureData;$/;"	f
Key	pilas-engine/declaraciones/phaser.d.ts	/^            class Key extends Phaser.Events.EventEmitter {$/;"	c
KeyCodes	pilas-engine/declaraciones/phaser.d.ts	/^            namespace KeyCodes {$/;"	c
KeyCombo	pilas-engine/declaraciones/phaser.d.ts	/^            class KeyCombo {$/;"	c
KeyComboConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type KeyComboConfig = {$/;"	t
Keyboard	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Keyboard {$/;"	c
Keyboard	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Keyboard {$/;"	c
KeyboardInputConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type KeyboardInputConfig = {$/;"	t
KeyboardKeydownCallback	pilas-engine/declaraciones/phaser.d.ts	/^                type KeyboardKeydownCallback = (event: KeyboardEvent)=>void;$/;"	t
KeyboardManager	pilas-engine/declaraciones/phaser.d.ts	/^            class KeyboardManager {$/;"	c
KeyboardPlugin	pilas-engine/declaraciones/phaser.d.ts	/^            class KeyboardPlugin extends Phaser.Events.EventEmitter {$/;"	c
Keyframe	pilas-engine/libs/spriter.ts	/^class Keyframe extends Element {$/;"	c
L1	pilas-engine/declaraciones/phaser.d.ts	/^                L1: number;$/;"	m
L2	pilas-engine/declaraciones/phaser.d.ts	/^                L2: number;$/;"	m
LEFT	pilas-engine/declaraciones/phaser.d.ts	/^            static readonly LEFT: Phaser.Math.Vector2;$/;"	m
LEFT	pilas-engine/declaraciones/phaser.d.ts	/^            static readonly LEFT: Phaser.Math.Vector3;$/;"	m
Laser	pilas-engine/laser.ts	/^class Laser {$/;"	c
Layer	pilas-engine/declaraciones/phaser.d.ts	/^        class Layer extends Phaser.Structs.List<Phaser.GameObjects.GameObject> implements Phaser.GameObjects.Components.AlphaSingle, Phaser.GameObjects.Components.BlendMode, Phaser.GameObjects.Components.Depth, Phaser.GameObjects.Components.Mask, Phaser.GameObjects.Components.Pipeline, Phaser.GameObjects.Components.Visible {$/;"	c
LayerData	pilas-engine/declaraciones/phaser.d.ts	/^        class LayerData {$/;"	c
LayerDataConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type LayerDataConfig = {$/;"	t
LeftBottom	pilas-engine/declaraciones/phaser.d.ts	/^                function LeftBottom<G extends Phaser.GameObjects.GameObject>(gameObject: G, alignTo: Phaser.GameObjects.GameObject, offsetX?: number, offsetY?: number): G;$/;"	f
LeftCenter	pilas-engine/declaraciones/phaser.d.ts	/^                function LeftCenter<G extends Phaser.GameObjects.GameObject>(gameObject: G, alignIn: Phaser.GameObjects.GameObject, offsetX?: number, offsetY?: number): G;$/;"	f
LeftCenter	pilas-engine/declaraciones/phaser.d.ts	/^                function LeftCenter<G extends Phaser.GameObjects.GameObject>(gameObject: G, alignTo: Phaser.GameObjects.GameObject, offsetX?: number, offsetY?: number): G;$/;"	f
LeftTop	pilas-engine/declaraciones/phaser.d.ts	/^                function LeftTop<G extends Phaser.GameObjects.GameObject>(gameObject: G, alignTo: Phaser.GameObjects.GameObject, offsetX?: number, offsetY?: number): G;$/;"	f
Length	pilas-engine/declaraciones/phaser.d.ts	/^            static Length(line: Phaser.Geom.Line): number;$/;"	m
LessThan	pilas-engine/declaraciones/phaser.d.ts	/^            function LessThan(a: number, b: number, epsilon?: number): boolean;$/;"	f
Light	pilas-engine/declaraciones/phaser.d.ts	/^        class Light extends Phaser.Geom.Circle implements Phaser.GameObjects.Components.ScrollFactor, Phaser.GameObjects.Components.Visible {$/;"	c
LightPipeline	pilas-engine/declaraciones/phaser.d.ts	/^                class LightPipeline extends Phaser.Renderer.WebGL.Pipelines.MultiPipeline {$/;"	c
LightsManager	pilas-engine/declaraciones/phaser.d.ts	/^        class LightsManager {$/;"	c
LightsPlugin	pilas-engine/declaraciones/phaser.d.ts	/^        class LightsPlugin extends Phaser.GameObjects.LightsManager {$/;"	c
Line	pilas-engine/declaraciones/phaser.d.ts	/^        class Line extends Phaser.Curves.Curve {$/;"	c
Line	pilas-engine/declaraciones/phaser.d.ts	/^        class Line extends Phaser.GameObjects.Shape {$/;"	c
Line	pilas-engine/declaraciones/phaser.d.ts	/^        class Line {$/;"	c
LineStyle	pilas-engine/declaraciones/phaser.d.ts	/^                type LineStyle = {$/;"	t
LineToCircle	pilas-engine/declaraciones/phaser.d.ts	/^            function LineToCircle(line: Phaser.Geom.Line, circle: Phaser.Geom.Circle, nearest?: Phaser.Geom.Point | any): boolean;$/;"	f
LineToLine	pilas-engine/declaraciones/phaser.d.ts	/^            function LineToLine(line1: Phaser.Geom.Line, line2: Phaser.Geom.Line, out?: Phaser.Geom.Point): boolean;$/;"	f
LineToRectangle	pilas-engine/declaraciones/phaser.d.ts	/^            function LineToRectangle(line: Phaser.Geom.Line, rect: Phaser.Geom.Rectangle | object): boolean;$/;"	f
Linear	pilas-engine/declaraciones/phaser.d.ts	/^            function Linear(v: number): number;$/;"	f
Linear	pilas-engine/declaraciones/phaser.d.ts	/^            function Linear(v: number[], k: number): number;$/;"	f
Linear	pilas-engine/declaraciones/phaser.d.ts	/^        function Linear(p0: number, p1: number, t: number): number;$/;"	f
List	pilas-engine/declaraciones/phaser.d.ts	/^        class List<T> {$/;"	c
Loader	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Loader {$/;"	c
Loader	pilas-engine/declaraciones/phaser.d.ts	/^    namespace Loader {$/;"	c
LoaderConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type LoaderConfig = {$/;"	t
LoaderPlugin	pilas-engine/declaraciones/phaser.d.ts	/^        class LoaderPlugin extends Phaser.Events.EventEmitter {$/;"	c
LocalBitmapTextSize	pilas-engine/declaraciones/phaser.d.ts	/^                type LocalBitmapTextSize = {$/;"	t
MULTI_PIPELINE	pilas-engine/declaraciones/phaser.d.ts	/^                MULTI_PIPELINE: Phaser.Renderer.WebGL.Pipelines.MultiPipeline;$/;"	m
Mainline	pilas-engine/libs/spriter.ts	/^class Mainline {$/;"	c
MainlineKeyframe	pilas-engine/libs/spriter.ts	/^class MainlineKeyframe extends Keyframe {$/;"	c
Map	pilas-engine/declaraciones/phaser.d.ts	/^        class Map<K, V> {$/;"	c
MapData	pilas-engine/declaraciones/phaser.d.ts	/^        class MapData {$/;"	c
MapDataConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type MapDataConfig = {$/;"	t
MapInstruction	pilas-engine/libs/spriter.ts	/^class MapInstruction {$/;"	c
Mask	pilas-engine/declaraciones/phaser.d.ts	/^            interface Mask {$/;"	i
Masks	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Masks {$/;"	c
Mass	pilas-engine/declaraciones/phaser.d.ts	/^                interface Mass {$/;"	i
Math	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Math {$/;"	c
Math	pilas-engine/declaraciones/phaser.d.ts	/^    namespace Math {$/;"	c
Matrix	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Matrix {$/;"	c
Matrix3	pilas-engine/declaraciones/phaser.d.ts	/^        class Matrix3 {$/;"	c
Matrix4	pilas-engine/declaraciones/phaser.d.ts	/^        class Matrix4 {$/;"	c
MatrixToString	pilas-engine/declaraciones/phaser.d.ts	/^                function MatrixToString<T>(matrix?: T[][]): string;$/;"	f
Matter	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Matter {$/;"	c
Matter	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Matter {$/;"	c
Matter	pilas-engine/fisica.ts	/^  get Matter() {$/;"	m
MatterBody	pilas-engine/declaraciones/phaser.d.ts	/^                type MatterBody = MatterJS.BodyType | Phaser.GameObjects.GameObject | Phaser.Physics.Matter.Image | Phaser.Physics.Matter.Sprite | Phaser.Physics.Matter.TileBody;$/;"	t
MatterBodyConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type MatterBodyConfig = {$/;"	t
MatterBodyRenderConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type MatterBodyRenderConfig = {$/;"	t
MatterBodyTileOptions	pilas-engine/declaraciones/phaser.d.ts	/^                type MatterBodyTileOptions = {$/;"	t
MatterChamferConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type MatterChamferConfig = {$/;"	t
MatterCollisionData	pilas-engine/declaraciones/phaser.d.ts	/^                type MatterCollisionData = {$/;"	t
MatterCollisionFilter	pilas-engine/declaraciones/phaser.d.ts	/^                type MatterCollisionFilter = {$/;"	t
MatterCollisionPair	pilas-engine/declaraciones/phaser.d.ts	/^                type MatterCollisionPair = {$/;"	t
MatterConstraintConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type MatterConstraintConfig = {$/;"	t
MatterConstraintRenderConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type MatterConstraintRenderConfig = {$/;"	t
MatterDebugConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type MatterDebugConfig = {$/;"	t
MatterGameObject	pilas-engine/declaraciones/phaser.d.ts	/^            function MatterGameObject(world: Phaser.Physics.Matter.World, gameObject: Phaser.GameObjects.GameObject, options?: Phaser.Types.Physics.Matter.MatterBodyConfig | MatterJS.Body, addToWorld?: boolean): Phaser.GameObjects.GameObject;$/;"	f
MatterPhysics	pilas-engine/declaraciones/phaser.d.ts	/^            class MatterPhysics {$/;"	c
MatterRunnerConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type MatterRunnerConfig = {$/;"	t
MatterSetBodyConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type MatterSetBodyConfig = {$/;"	t
MatterTileOptions	pilas-engine/declaraciones/phaser.d.ts	/^                type MatterTileOptions = {$/;"	t
MatterWorldConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type MatterWorldConfig = {$/;"	t
MaxAdd	pilas-engine/declaraciones/phaser.d.ts	/^        function MaxAdd(value: number, amount: number, max: number): number;$/;"	f
MeasureText	pilas-engine/declaraciones/phaser.d.ts	/^        function MeasureText(textStyle: Phaser.GameObjects.TextStyle): Phaser.Types.GameObjects.Text.TextMetrics;$/;"	f
Median	pilas-engine/declaraciones/phaser.d.ts	/^        function Median(values: number[]): number;$/;"	f
Mensajes	pilas-engine/mensajes.ts	/^class Mensajes {$/;"	c
Merge	pilas-engine/declaraciones/phaser.d.ts	/^            function Merge(obj1: object, obj2: object): object;$/;"	f
MergeRight	pilas-engine/declaraciones/phaser.d.ts	/^            function MergeRight(obj1: object, obj2: object): object;$/;"	f
MergeXHRSettings	pilas-engine/declaraciones/phaser.d.ts	/^        function MergeXHRSettings(global: Phaser.Types.Loader.XHRSettingsObject, local: Phaser.Types.Loader.XHRSettingsObject): Phaser.Types.Loader.XHRSettingsObject;$/;"	f
Mesh	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Mesh {$/;"	c
Mesh	pilas-engine/declaraciones/phaser.d.ts	/^        class Mesh extends Phaser.GameObjects.GameObject implements Phaser.GameObjects.Components.AlphaSingle, Phaser.GameObjects.Components.BlendMode, Phaser.GameObjects.Components.Depth, Phaser.GameObjects.Components.Mask, Phaser.GameObjects.Components.Pipeline, Phaser.GameObjects.Components.Size, Phaser.GameObjects.Components.Texture, Phaser.GameObjects.Components.Transform, Phaser.GameObjects.Components.Visible, Phaser.GameObjects.Components.ScrollFactor {$/;"	c
Mesh	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Mesh {$/;"	c
MeshConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type MeshConfig = Phaser.Types.GameObjects.GameObjectConfig & {$/;"	t
Meta	pilas-engine/libs/spriter.ts	/^class Meta extends Element {$/;"	c
Meta	pilas-engine/utilidades.ts	/^      Meta: "meta",$/;"	m
MinSub	pilas-engine/declaraciones/phaser.d.ts	/^        function MinSub(value: number, amount: number, min: number): number;$/;"	f
MipmapType	pilas-engine/declaraciones/phaser.d.ts	/^            type MipmapType = {$/;"	t
Modo	pilas-engine/modos/modo.ts	/^class Modo extends Phaser.Scene {$/;"	c
ModoCargador	pilas-engine/modos/modo_cargador.ts	/^class ModoCargador extends Modo {$/;"	c
ModoEditor	pilas-engine/modos/modo_editor.ts	/^class ModoEditor extends Modo {$/;"	c
ModoEjecucion	pilas-engine/modos/modo_ejecucion.ts	/^class ModoEjecucion extends Modo {$/;"	c
ModoEjecucionEnPausa	pilas-engine/modos/modo_ejecucion_en_pausa.ts	/^class ModoEjecucionEnPausa extends Modo {$/;"	c
ModoError	pilas-engine/modos/modo_error.ts	/^class ModoError extends Modo {$/;"	c
ModoPausa	pilas-engine/modos/modo_pausa.ts	/^class ModoPausa extends Modo {$/;"	c
Mouse	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Mouse {$/;"	c
MouseInputConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type MouseInputConfig = {$/;"	t
MouseManager	pilas-engine/declaraciones/phaser.d.ts	/^            class MouseManager {$/;"	c
MoveAbove	pilas-engine/declaraciones/phaser.d.ts	/^            function MoveAbove(array: any[], item1: any, item2: any): any[];$/;"	f
MoveBelow	pilas-engine/declaraciones/phaser.d.ts	/^            function MoveBelow(array: any[], item1: any, item2: any): any[];$/;"	f
MoveDown	pilas-engine/declaraciones/phaser.d.ts	/^            function MoveDown(array: any[], item: any): any[];$/;"	f
MoveTo	pilas-engine/declaraciones/phaser.d.ts	/^            function MoveTo(array: any[], item: any, index: number): any;$/;"	f
MoveTo	pilas-engine/declaraciones/phaser.d.ts	/^        class MoveTo {$/;"	c
MoveUp	pilas-engine/declaraciones/phaser.d.ts	/^            function MoveUp(array: any[], item: any): any[];$/;"	f
MoverConElTeclado	pilas-engine/habilidades/mover-con-el-teclado.ts	/^class MoverConElTeclado extends Habilidad {$/;"	c
MultiAtlasFile	pilas-engine/declaraciones/phaser.d.ts	/^            class MultiAtlasFile extends Phaser.Loader.MultiFile {$/;"	c
MultiAtlasFileConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type MultiAtlasFileConfig = {$/;"	t
MultiFile	pilas-engine/declaraciones/phaser.d.ts	/^        class MultiFile {$/;"	c
MultiPipeline	pilas-engine/declaraciones/phaser.d.ts	/^                class MultiPipeline extends Phaser.Renderer.WebGL.WebGLPipeline {$/;"	c
MultiScriptFile	pilas-engine/declaraciones/phaser.d.ts	/^            class MultiScriptFile extends Phaser.Loader.MultiFile {$/;"	c
MultiScriptFileConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type MultiScriptFileConfig = {$/;"	t
NONE	pilas-engine/declaraciones/phaser.d.ts	/^            static readonly NONE: number;$/;"	m
NOOP	pilas-engine/declaraciones/phaser.d.ts	/^            type NOOP = ()=>void;$/;"	t
NOOP	pilas-engine/declaraciones/phaser.d.ts	/^        function NOOP(): void;$/;"	f
NoAudioSound	pilas-engine/declaraciones/phaser.d.ts	/^        class NoAudioSound {$/;"	c
NoAudioSoundManager	pilas-engine/declaraciones/phaser.d.ts	/^        class NoAudioSoundManager extends Phaser.Sound.BaseSoundManager {$/;"	c
Normal	pilas-engine/escenas.ts	/^  Normal() {$/;"	m
Normal	pilas-engine/escenas/normal.ts	/^class Normal extends Escena {$/;"	c
NormalAngle	pilas-engine/declaraciones/phaser.d.ts	/^            static NormalAngle(line: Phaser.Geom.Line): number;$/;"	m
NormalX	pilas-engine/declaraciones/phaser.d.ts	/^            static NormalX(line: Phaser.Geom.Line): number;$/;"	m
NormalY	pilas-engine/declaraciones/phaser.d.ts	/^            static NormalY(line: Phaser.Geom.Line): number;$/;"	m
Normalize	pilas-engine/declaraciones/phaser.d.ts	/^            function Normalize(angle: number): number;$/;"	f
NumberArray	pilas-engine/declaraciones/phaser.d.ts	/^            function NumberArray(start: number, end: number, prefix?: string, suffix?: string): number[] | string[];$/;"	f
NumberArrayStep	pilas-engine/declaraciones/phaser.d.ts	/^            function NumberArrayStep(start?: number, end?: number, step?: number): number[];$/;"	f
NumberTweenBuilder	pilas-engine/declaraciones/phaser.d.ts	/^            function NumberTweenBuilder(parent: Phaser.Tweens.TweenManager | Phaser.Tweens.Timeline, config: Phaser.Types.Tweens.NumberTweenBuilderConfig, defaults: Phaser.Types.Tweens.TweenConfigDefaults): Phaser.Tweens.Tween;$/;"	f
NumberTweenBuilderConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type NumberTweenBuilderConfig = {$/;"	t
OBJData	pilas-engine/declaraciones/phaser.d.ts	/^                type OBJData = {$/;"	t
OBJFace	pilas-engine/declaraciones/phaser.d.ts	/^                type OBJFace = {$/;"	t
OBJFaceVertice	pilas-engine/declaraciones/phaser.d.ts	/^                type OBJFaceVertice = {$/;"	t
OBJFile	pilas-engine/declaraciones/phaser.d.ts	/^            class OBJFile extends Phaser.Loader.MultiFile {$/;"	c
OBJFileConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type OBJFileConfig = {$/;"	t
OBJModel	pilas-engine/declaraciones/phaser.d.ts	/^                type OBJModel = {$/;"	t
ONE	pilas-engine/declaraciones/phaser.d.ts	/^            static readonly ONE: Phaser.Math.Vector2;$/;"	m
ONE	pilas-engine/declaraciones/phaser.d.ts	/^            static readonly ONE: Phaser.Math.Vector3;$/;"	m
OS	pilas-engine/declaraciones/phaser.d.ts	/^        type OS = {$/;"	t
OVERLAP_BIAS	pilas-engine/declaraciones/phaser.d.ts	/^                OVERLAP_BIAS: number;$/;"	m
ObjInfo	pilas-engine/libs/spriter.ts	/^class ObjInfo extends Element {$/;"	c
ObjectHelper	pilas-engine/declaraciones/phaser.d.ts	/^        class ObjectHelper {$/;"	c
ObjectLayer	pilas-engine/declaraciones/phaser.d.ts	/^        class ObjectLayer {$/;"	c
ObjectLayerConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type ObjectLayerConfig = {$/;"	t
ObjectRef	pilas-engine/libs/spriter.ts	/^class ObjectRef extends Ref {$/;"	c
ObjectToColor	pilas-engine/declaraciones/phaser.d.ts	/^            static ObjectToColor(input: Phaser.Types.Display.InputColorObject): Phaser.Display.Color;$/;"	m
Objects	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Objects {$/;"	c
Options	pilas-engine/declaraciones/phaser.d.ts	/^                type Options = Phaser.Types.GameObjects.Graphics.Styles & {$/;"	t
Orientation	pilas-engine/declaraciones/phaser.d.ts	/^        enum Orientation {$/;"	e
OrientationType	pilas-engine/declaraciones/phaser.d.ts	/^        type OrientationType = Phaser.Scale.Orientation;$/;"	t
OrientationType	pilas-engine/declaraciones/phaser.d.ts	/^        type OrientationType = Phaser.Tilemaps.Orientation;$/;"	t
Origin	pilas-engine/declaraciones/phaser.d.ts	/^            interface Origin {$/;"	i
OscilarRotacion	pilas-engine/habilidades/oscilar-rotacion.ts	/^class OscilarRotacion extends Habilidad {$/;"	c
OscilarTransparencia	pilas-engine/habilidades/oscilar-transparencia.ts	/^class OscilarTransparencia extends Habilidad {$/;"	c
OscilarVerticalmente	pilas-engine/habilidades/oscilar-verticalmente.ts	/^class OscilarVerticalmente extends Habilidad {$/;"	c
Out	pilas-engine/declaraciones/phaser.d.ts	/^                function Out(v: number): number;$/;"	f
Out	pilas-engine/declaraciones/phaser.d.ts	/^                function Out(v: number, amplitude?: number, period?: number): number;$/;"	f
Out	pilas-engine/declaraciones/phaser.d.ts	/^                function Out(v: number, overshoot?: number): number;$/;"	f
OverlapCirc	pilas-engine/declaraciones/phaser.d.ts	/^                interface OverlapCirc {$/;"	i
OverlapRect	pilas-engine/declaraciones/phaser.d.ts	/^                interface OverlapRect {$/;"	i
Overlaps	pilas-engine/declaraciones/phaser.d.ts	/^            static Overlaps(rectA: Phaser.Geom.Rectangle, rectB: Phaser.Geom.Rectangle): boolean;$/;"	m
PVRParser	pilas-engine/declaraciones/phaser.d.ts	/^            function PVRParser(data: ArrayBuffer): Phaser.Types.Textures.CompressedTextureData;$/;"	f
PVRTC	pilas-engine/declaraciones/phaser.d.ts	/^                    PVRTC: object | undefined;$/;"	m
PackFile	pilas-engine/declaraciones/phaser.d.ts	/^            class PackFile extends Phaser.Loader.File {$/;"	c
PackFileConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type PackFileConfig = {$/;"	t
PackFileSection	pilas-engine/declaraciones/phaser.d.ts	/^                type PackFileSection = {$/;"	t
Pad	pilas-engine/declaraciones/phaser.d.ts	/^                type Pad = {$/;"	t
Pad	pilas-engine/declaraciones/phaser.d.ts	/^            function Pad(str: string | number | object, len?: number, pad?: string, dir?: number): string;$/;"	f
Palette	pilas-engine/declaraciones/phaser.d.ts	/^            type Palette = {$/;"	t
Palettes	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Palettes {$/;"	c
Pan	pilas-engine/declaraciones/phaser.d.ts	/^                class Pan {$/;"	c
Parse	pilas-engine/declaraciones/phaser.d.ts	/^            function Parse(name: string, mapFormat: number, data: number[][] | string | object, tileWidth: number, tileHeight: number, insertNull: boolean): Phaser.Tilemaps.MapData;$/;"	f
Parse	pilas-engine/declaraciones/phaser.d.ts	/^            function Parse(scene: Phaser.Scene, config: Phaser.Types.GameObjects.BitmapText.RetroFontConfig): Phaser.Types.GameObjects.BitmapText.BitmapFontData;$/;"	f
Parse2DArray	pilas-engine/declaraciones/phaser.d.ts	/^            function Parse2DArray(name: string, data: number[][], tileWidth: number, tileHeight: number, insertNull: boolean): Phaser.Tilemaps.MapData;$/;"	f
ParseCSV	pilas-engine/declaraciones/phaser.d.ts	/^            function ParseCSV(name: string, data: string, tileWidth: number, tileHeight: number, insertNull: boolean): Phaser.Tilemaps.MapData;$/;"	f
ParseFromAtlas	pilas-engine/declaraciones/phaser.d.ts	/^            static ParseFromAtlas(scene: Phaser.Scene, fontName: string, textureKey: string, frameKey: string, xmlKey: string, xSpacing?: number, ySpacing?: number): boolean;$/;"	m
ParseGID	pilas-engine/declaraciones/phaser.d.ts	/^                function ParseGID(gid: number): Phaser.Types.Tilemaps.GIDData;$/;"	f
ParseImageLayers	pilas-engine/declaraciones/phaser.d.ts	/^                function ParseImageLayers(json: object): any[];$/;"	f
ParseJSONTiled	pilas-engine/declaraciones/phaser.d.ts	/^                function ParseJSONTiled(name: string, json: object, insertNull: boolean): Phaser.Tilemaps.MapData;$/;"	f
ParseObj	pilas-engine/declaraciones/phaser.d.ts	/^            function ParseObj(data: string, flipUV?: boolean): Phaser.Types.Geom.Mesh.OBJData;$/;"	f
ParseObjMaterial	pilas-engine/declaraciones/phaser.d.ts	/^            function ParseObjMaterial(mtl: string): object;$/;"	f
ParseObject	pilas-engine/declaraciones/phaser.d.ts	/^                function ParseObject(tiledObject: object, offsetX?: number, offsetY?: number): object;$/;"	f
ParseObjectLayers	pilas-engine/declaraciones/phaser.d.ts	/^                function ParseObjectLayers(json: object): any[];$/;"	f
ParseTileLayers	pilas-engine/declaraciones/phaser.d.ts	/^                function ParseTileLayers(json: object, insertNull: boolean): Phaser.Tilemaps.LayerData[];$/;"	f
ParseTilesets	pilas-engine/declaraciones/phaser.d.ts	/^                function ParseTilesets(json: object): any[];$/;"	f
ParseTilesets	pilas-engine/declaraciones/phaser.d.ts	/^                function ParseTilesets(json: object): object;$/;"	f
ParseToTilemap	pilas-engine/declaraciones/phaser.d.ts	/^        function ParseToTilemap(scene: Phaser.Scene, key?: string, tileWidth?: number, tileHeight?: number, width?: number, height?: number, data?: number[][], insertNull?: boolean): Phaser.Tilemaps.Tilemap;$/;"	f
ParseWangsets	pilas-engine/declaraciones/phaser.d.ts	/^                function ParseWangsets(wangsets: object[], datas: object): object;$/;"	f
ParseWeltmeister	pilas-engine/declaraciones/phaser.d.ts	/^                function ParseWeltmeister(name: string, json: object, insertNull: boolean): Phaser.Tilemaps.MapData;$/;"	f
ParseXML	pilas-engine/declaraciones/phaser.d.ts	/^        function ParseXML(data: string): DOMParser | ActiveXObject;$/;"	f
ParseXMLBitmapFont	pilas-engine/declaraciones/phaser.d.ts	/^            static ParseXMLBitmapFont(xml: XMLDocument, frame: Phaser.Textures.Frame, xSpacing?: number, ySpacing?: number): Phaser.Types.GameObjects.BitmapText.BitmapFontData;$/;"	m
Parsers	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Parsers {$/;"	c
Particle	pilas-engine/declaraciones/phaser.d.ts	/^            class Particle {$/;"	c
ParticleDeathCallback	pilas-engine/declaraciones/phaser.d.ts	/^                type ParticleDeathCallback = (particle: Phaser.GameObjects.Particles.Particle)=>void;$/;"	t
ParticleEmitter	pilas-engine/declaraciones/phaser.d.ts	/^            class ParticleEmitter implements Phaser.GameObjects.Components.BlendMode, Phaser.GameObjects.Components.Mask, Phaser.GameObjects.Components.ScrollFactor, Phaser.GameObjects.Components.Visible {$/;"	c
ParticleEmitterBounds	pilas-engine/declaraciones/phaser.d.ts	/^                type ParticleEmitterBounds = {$/;"	t
ParticleEmitterBoundsAlt	pilas-engine/declaraciones/phaser.d.ts	/^                type ParticleEmitterBoundsAlt = {$/;"	t
ParticleEmitterCallback	pilas-engine/declaraciones/phaser.d.ts	/^                type ParticleEmitterCallback = (particle: Phaser.GameObjects.Particles.Particle, emitter: Phaser.GameObjects.Particles.ParticleEmitter)=>void;$/;"	t
ParticleEmitterConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type ParticleEmitterConfig = {$/;"	t
ParticleEmitterDeathZoneConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type ParticleEmitterDeathZoneConfig = {$/;"	t
ParticleEmitterEdgeZoneConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type ParticleEmitterEdgeZoneConfig = {$/;"	t
ParticleEmitterFrameConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type ParticleEmitterFrameConfig = {$/;"	t
ParticleEmitterManager	pilas-engine/declaraciones/phaser.d.ts	/^            class ParticleEmitterManager extends Phaser.GameObjects.GameObject implements Phaser.GameObjects.Components.Depth, Phaser.GameObjects.Components.Mask, Phaser.GameObjects.Components.Pipeline, Phaser.GameObjects.Components.Transform, Phaser.GameObjects.Components.Visible {$/;"	c
ParticleEmitterManagerConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type ParticleEmitterManagerConfig = {$/;"	t
ParticleEmitterRandomZoneConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type ParticleEmitterRandomZoneConfig = {$/;"	t
Particles	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Particles {$/;"	c
Particles	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Particles {$/;"	c
Path	pilas-engine/declaraciones/phaser.d.ts	/^        class Path {$/;"	c
PathConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type PathConfig = {$/;"	t
PathFollower	pilas-engine/declaraciones/phaser.d.ts	/^            interface PathFollower {$/;"	i
PathFollower	pilas-engine/declaraciones/phaser.d.ts	/^            namespace PathFollower {$/;"	c
PathFollower	pilas-engine/declaraciones/phaser.d.ts	/^        class PathFollower extends Phaser.GameObjects.Sprite implements Phaser.GameObjects.Components.PathFollower {$/;"	c
Percent	pilas-engine/declaraciones/phaser.d.ts	/^        function Percent(value: number, min: number, max?: number, upperMax?: number): number;$/;"	f
Perimeter	pilas-engine/declaraciones/phaser.d.ts	/^            static Perimeter(polygon: Phaser.Geom.Polygon): number;$/;"	m
Perimeter	pilas-engine/declaraciones/phaser.d.ts	/^            static Perimeter(rect: Phaser.Geom.Rectangle): number;$/;"	m
Perimeter	pilas-engine/declaraciones/phaser.d.ts	/^            static Perimeter(triangle: Phaser.Geom.Triangle): number;$/;"	m
PerpSlope	pilas-engine/declaraciones/phaser.d.ts	/^            static PerpSlope(line: Phaser.Geom.Line): number;$/;"	m
Phaser	pilas-engine/declaraciones/phaser.d.ts	/^declare namespace Phaser {$/;"	c
Phaser	pilas-engine/pilas.ts	/^  Phaser: any;$/;"	m
Physics	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Physics {$/;"	c
Physics	pilas-engine/declaraciones/phaser.d.ts	/^    namespace Physics {$/;"	c
PhysicsConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type PhysicsConfig = {$/;"	t
PhysicsEditorParser	pilas-engine/declaraciones/phaser.d.ts	/^            namespace PhysicsEditorParser {$/;"	c
PhysicsGroupConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type PhysicsGroupConfig = Phaser.Types.GameObjects.Group.GroupConfig & {$/;"	t
PhysicsGroupDefaults	pilas-engine/declaraciones/phaser.d.ts	/^                type PhysicsGroupDefaults = {$/;"	t
PhysicsJSONParser	pilas-engine/declaraciones/phaser.d.ts	/^            namespace PhysicsJSONParser {$/;"	c
Pick	pilas-engine/declaraciones/phaser.d.ts	/^            function Pick(object: object, keys: any[]): object;$/;"	f
Pilas	pilas-engine/pilas.ts	/^class Pilas {$/;"	c
Pipeline	pilas-engine/declaraciones/phaser.d.ts	/^            interface Pipeline {$/;"	i
PipelineConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type PipelineConfig = {$/;"	t
PipelineManager	pilas-engine/declaraciones/phaser.d.ts	/^            class PipelineManager {$/;"	c
Pipelines	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Pipelines {$/;"	c
Pivot	pilas-engine/libs/spriter.ts	/^class Pivot extends Vector {$/;"	c
PixelConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type PixelConfig = {$/;"	t
PizarraBase	pilas-engine/actores/-pizarra-base.ts	/^class PizarraBase extends Actor {$/;"	c
PlaceOnCircle	pilas-engine/declaraciones/phaser.d.ts	/^        function PlaceOnCircle<G extends Phaser.GameObjects.GameObject[]>(items: G, circle: Phaser.Geom.Circle, startAngle?: number, endAngle?: number): G;$/;"	f
PlaceOnEllipse	pilas-engine/declaraciones/phaser.d.ts	/^        function PlaceOnEllipse<G extends Phaser.GameObjects.GameObject[]>(items: G, ellipse: Phaser.Geom.Ellipse, startAngle?: number, endAngle?: number): G;$/;"	f
PlaceOnLine	pilas-engine/declaraciones/phaser.d.ts	/^        function PlaceOnLine<G extends Phaser.GameObjects.GameObject[]>(items: G, line: Phaser.Geom.Line): G;$/;"	f
PlaceOnRectangle	pilas-engine/declaraciones/phaser.d.ts	/^        function PlaceOnRectangle<G extends Phaser.GameObjects.GameObject[]>(items: G, rect: Phaser.Geom.Rectangle, shift?: number): G;$/;"	f
PlaceOnTriangle	pilas-engine/declaraciones/phaser.d.ts	/^        function PlaceOnTriangle<G extends Phaser.GameObjects.GameObject[]>(items: G, triangle: Phaser.Geom.Triangle, stepRate?: number): G;$/;"	f
PlayAnimation	pilas-engine/declaraciones/phaser.d.ts	/^        function PlayAnimation<G extends Phaser.GameObjects.GameObject[]>(items: G, key: string | Phaser.Animations.Animation | Phaser.Types.Animations.PlayAnimationConfig, ignoreIfPlaying?: boolean): G;$/;"	f
PlayAnimationConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type PlayAnimationConfig = {$/;"	t
PluginCache	pilas-engine/declaraciones/phaser.d.ts	/^        namespace PluginCache {$/;"	c
PluginFile	pilas-engine/declaraciones/phaser.d.ts	/^            class PluginFile extends Phaser.Loader.File {$/;"	c
PluginFileConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type PluginFileConfig = {$/;"	t
PluginManager	pilas-engine/declaraciones/phaser.d.ts	/^        class PluginManager {$/;"	c
PluginObject	pilas-engine/declaraciones/phaser.d.ts	/^            type PluginObject = {$/;"	t
PluginObjectItem	pilas-engine/declaraciones/phaser.d.ts	/^            type PluginObjectItem = {$/;"	t
Plugins	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Plugins {$/;"	c
Plugins	pilas-engine/declaraciones/phaser.d.ts	/^    namespace Plugins {$/;"	c
Point	pilas-engine/declaraciones/phaser.d.ts	/^        class Point {$/;"	c
PointLight	pilas-engine/declaraciones/phaser.d.ts	/^        class PointLight extends Phaser.GameObjects.GameObject implements Phaser.GameObjects.Components.AlphaSingle, Phaser.GameObjects.Components.BlendMode, Phaser.GameObjects.Components.Depth, Phaser.GameObjects.Components.GetBounds, Phaser.GameObjects.Components.Mask, Phaser.GameObjects.Components.Pipeline, Phaser.GameObjects.Components.ScrollFactor, Phaser.GameObjects.Components.Transform, Phaser.GameObjects.Components.Visible {$/;"	c
PointLightPipeline	pilas-engine/declaraciones/phaser.d.ts	/^                class PointLightPipeline extends Phaser.Renderer.WebGL.WebGLPipeline {$/;"	c
PointObject	pilas-engine/libs/spriter.ts	/^class PointObject extends BaseObject {$/;"	c
PointTimelineKeyframe	pilas-engine/libs/spriter.ts	/^class PointTimelineKeyframe extends TimelineKeyframe {$/;"	c
PointToLine	pilas-engine/declaraciones/phaser.d.ts	/^            function PointToLine(point: Phaser.Geom.Point | any, line: Phaser.Geom.Line, lineThickness?: number): boolean;$/;"	f
PointToLineSegment	pilas-engine/declaraciones/phaser.d.ts	/^            function PointToLineSegment(point: Phaser.Geom.Point, line: Phaser.Geom.Line): boolean;$/;"	f
Pointer	pilas-engine/declaraciones/phaser.d.ts	/^        class Pointer {$/;"	c
PointerConstraint	pilas-engine/declaraciones/phaser.d.ts	/^            class PointerConstraint {$/;"	c
Polygon	pilas-engine/declaraciones/phaser.d.ts	/^        class Polygon extends Phaser.GameObjects.Shape {$/;"	c
Polygon	pilas-engine/declaraciones/phaser.d.ts	/^        class Polygon {$/;"	c
Pose	pilas-engine/libs/spriter.ts	/^class Pose {$/;"	c
Position	pilas-engine/libs/spriter.ts	/^class Position extends Vector {$/;"	c
PostFXPipeline	pilas-engine/declaraciones/phaser.d.ts	/^                class PostFXPipeline extends Phaser.Renderer.WebGL.WebGLPipeline {$/;"	c
Pow2	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Pow2 {$/;"	c
Power	pilas-engine/declaraciones/phaser.d.ts	/^            function Power(x1: number, y1: number, x2: number, y2: number, pow: number): number;$/;"	f
ProcessQueue	pilas-engine/declaraciones/phaser.d.ts	/^        class ProcessQueue<T> extends Phaser.Events.EventEmitter {$/;"	c
ProcessTileCallbacks	pilas-engine/declaraciones/phaser.d.ts	/^                function ProcessTileCallbacks(tile: Phaser.Tilemaps.Tile, sprite: Phaser.GameObjects.Sprite): boolean;$/;"	f
ProcessTileSeparationX	pilas-engine/declaraciones/phaser.d.ts	/^                function ProcessTileSeparationX(body: Phaser.Physics.Arcade.Body, x: number): void;$/;"	f
ProcessTileSeparationY	pilas-engine/declaraciones/phaser.d.ts	/^                function ProcessTileSeparationY(body: Phaser.Physics.Arcade.Body, y: number): void;$/;"	f
PropertyValueInc	pilas-engine/declaraciones/phaser.d.ts	/^        function PropertyValueInc<G extends Phaser.GameObjects.GameObject[]>(items: G, key: string, value: number, step?: number, index?: number, direction?: number): G;$/;"	f
PropertyValueSet	pilas-engine/declaraciones/phaser.d.ts	/^        function PropertyValueSet<G extends Phaser.GameObjects.GameObject[]>(items: G, key: string, value: number, step?: number, index?: number, direction?: number): G;$/;"	f
Proyecto	pilas-engine/modos/modo_cargador.ts	/^          function Proyecto() {$/;"	f
Pushable	pilas-engine/declaraciones/phaser.d.ts	/^                interface Pushable {$/;"	i
PutTileAt	pilas-engine/declaraciones/phaser.d.ts	/^            function PutTileAt(tile: number | Phaser.Tilemaps.Tile, tileX: number, tileY: number, recalculateFaces: boolean, layer: Phaser.Tilemaps.LayerData): Phaser.Tilemaps.Tile;$/;"	f
PutTileAtWorldXY	pilas-engine/declaraciones/phaser.d.ts	/^            function PutTileAtWorldXY(tile: number | Phaser.Tilemaps.Tile, worldX: number, worldY: number, recalculateFaces: boolean, camera: Phaser.Cameras.Scene2D.Camera, layer: Phaser.Tilemaps.LayerData): Phaser.Tilemaps.Tile;$/;"	f
PutTilesAt	pilas-engine/declaraciones/phaser.d.ts	/^            function PutTilesAt(tile: number[] | number[][] | Phaser.Tilemaps.Tile[] | Phaser.Tilemaps.Tile[][], tileX: number, tileY: number, recalculateFaces: boolean, layer: Phaser.Tilemaps.LayerData): void;$/;"	f
Quadratic	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Quadratic {$/;"	c
QuadraticBezier	pilas-engine/declaraciones/phaser.d.ts	/^            function QuadraticBezier(t: number, p0: number, p1: number, p2: number): number;$/;"	f
QuadraticBezier	pilas-engine/declaraciones/phaser.d.ts	/^        class QuadraticBezier extends Phaser.Curves.Curve {$/;"	c
Quartic	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Quartic {$/;"	c
Quaternion	pilas-engine/declaraciones/phaser.d.ts	/^        class Quaternion {$/;"	c
QuickSelect	pilas-engine/declaraciones/phaser.d.ts	/^            function QuickSelect(arr: any[], k: number, left?: number, right?: number, compare?: Function): void;$/;"	f
QuickSet	pilas-engine/declaraciones/phaser.d.ts	/^                function QuickSet<G extends Phaser.GameObjects.GameObject>(child: G, alignIn: Phaser.GameObjects.GameObject, position: number, offsetX?: number, offsetY?: number): G;$/;"	f
QuickSet	pilas-engine/declaraciones/phaser.d.ts	/^                function QuickSet<G extends Phaser.GameObjects.GameObject>(child: G, alignTo: Phaser.GameObjects.GameObject, position: number, offsetX?: number, offsetY?: number): G;$/;"	f
Quintic	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Quintic {$/;"	c
R1	pilas-engine/declaraciones/phaser.d.ts	/^                R1: number;$/;"	m
R2	pilas-engine/declaraciones/phaser.d.ts	/^                R2: number;$/;"	m
RENDER_MASK	pilas-engine/declaraciones/phaser.d.ts	/^            static readonly RENDER_MASK: number;$/;"	m
RGB	pilas-engine/declaraciones/phaser.d.ts	/^        class RGB {$/;"	c
RGBStringToColor	pilas-engine/declaraciones/phaser.d.ts	/^            static RGBStringToColor(rgb: string): Phaser.Display.Color;$/;"	m
RGBToHSV	pilas-engine/declaraciones/phaser.d.ts	/^            static RGBToHSV(r: number, g: number, b: number, out?: Phaser.Types.Display.HSVColorObject | Phaser.Display.Color): Phaser.Types.Display.HSVColorObject | Phaser.Display.Color;$/;"	m
RGBToString	pilas-engine/declaraciones/phaser.d.ts	/^            static RGBToString(r: number, g: number, b: number, a?: number, prefix?: string): string;$/;"	m
RGBWithRGB	pilas-engine/declaraciones/phaser.d.ts	/^                function RGBWithRGB(r1: number, g1: number, b1: number, r2: number, g2: number, b2: number, length?: number, index?: number): Phaser.Types.Display.ColorObject;$/;"	f
RGTC	pilas-engine/declaraciones/phaser.d.ts	/^                    RGTC: object | undefined;$/;"	m
RIGHT	pilas-engine/declaraciones/phaser.d.ts	/^            static readonly RIGHT: Phaser.Math.Vector2;$/;"	m
RIGHT	pilas-engine/declaraciones/phaser.d.ts	/^            static readonly RIGHT: Phaser.Math.Vector3;$/;"	m
RTree	pilas-engine/declaraciones/phaser.d.ts	/^        class RTree {$/;"	c
RadToDeg	pilas-engine/declaraciones/phaser.d.ts	/^        function RadToDeg(radians: number): number;$/;"	f
Random	pilas-engine/declaraciones/phaser.d.ts	/^            function Random(): number;$/;"	f
RandomCircle	pilas-engine/declaraciones/phaser.d.ts	/^        function RandomCircle<G extends Phaser.GameObjects.GameObject[]>(items: G, circle: Phaser.Geom.Circle): G;$/;"	f
RandomDataGenerator	pilas-engine/declaraciones/phaser.d.ts	/^        class RandomDataGenerator {$/;"	c
RandomDegrees	pilas-engine/declaraciones/phaser.d.ts	/^            function RandomDegrees(): number;$/;"	f
RandomEllipse	pilas-engine/declaraciones/phaser.d.ts	/^        function RandomEllipse<G extends Phaser.GameObjects.GameObject[]>(items: G, ellipse: Phaser.Geom.Ellipse): G;$/;"	f
RandomLine	pilas-engine/declaraciones/phaser.d.ts	/^        function RandomLine<G extends Phaser.GameObjects.GameObject[]>(items: G, line: Phaser.Geom.Line): G;$/;"	f
RandomRGB	pilas-engine/declaraciones/phaser.d.ts	/^            static RandomRGB(min?: number, max?: number): Phaser.Display.Color;$/;"	m
RandomRectangle	pilas-engine/declaraciones/phaser.d.ts	/^        function RandomRectangle<G extends Phaser.GameObjects.GameObject[]>(items: G, rect: Phaser.Geom.Rectangle): G;$/;"	f
RandomTriangle	pilas-engine/declaraciones/phaser.d.ts	/^        function RandomTriangle<G extends Phaser.GameObjects.GameObject[]>(items: G, triangle: Phaser.Geom.Triangle): G;$/;"	f
RandomXY	pilas-engine/declaraciones/phaser.d.ts	/^        function RandomXY(vector: Phaser.Math.Vector2, scale?: number): Phaser.Math.Vector2;$/;"	f
RandomXYZ	pilas-engine/declaraciones/phaser.d.ts	/^        function RandomXYZ(vec3: Phaser.Math.Vector3, radius?: number): Phaser.Math.Vector3;$/;"	f
RandomXYZW	pilas-engine/declaraciones/phaser.d.ts	/^        function RandomXYZW(vec4: Phaser.Math.Vector4, scale?: number): Phaser.Math.Vector4;$/;"	f
RandomZone	pilas-engine/declaraciones/phaser.d.ts	/^                class RandomZone {$/;"	c
RandomZoneSource	pilas-engine/declaraciones/phaser.d.ts	/^                type RandomZoneSource = {$/;"	t
RandomZoneSourceCallback	pilas-engine/declaraciones/phaser.d.ts	/^                type RandomZoneSourceCallback = (point: Phaser.Types.Math.Vector2Like)=>void;$/;"	t
Randomize	pilas-engine/declaraciones/phaser.d.ts	/^            function Randomize(tileX: number, tileY: number, width: number, height: number, indexes: number[], layer: Phaser.Tilemaps.LayerData): void;$/;"	f
Range	pilas-engine/declaraciones/phaser.d.ts	/^            function Range(a: any[], b: any[], options?: object): any[];$/;"	f
Rectangle	pilas-engine/declaraciones/phaser.d.ts	/^        class Rectangle extends Phaser.GameObjects.Shape {$/;"	c
Rectangle	pilas-engine/declaraciones/phaser.d.ts	/^        class Rectangle {$/;"	c
RectangleToRectangle	pilas-engine/declaraciones/phaser.d.ts	/^            function RectangleToRectangle(rectA: Phaser.Geom.Rectangle, rectB: Phaser.Geom.Rectangle): boolean;$/;"	f
RectangleToTriangle	pilas-engine/declaraciones/phaser.d.ts	/^            function RectangleToTriangle(rect: Phaser.Geom.Rectangle, triangle: Phaser.Geom.Triangle): boolean;$/;"	f
RectangleToValues	pilas-engine/declaraciones/phaser.d.ts	/^            function RectangleToValues(rect: Phaser.Geom.Rectangle, left: number, right: number, top: number, bottom: number, tolerance?: number): boolean;$/;"	f
Ref	pilas-engine/libs/spriter.ts	/^class Ref extends Element {$/;"	c
ReflectAngle	pilas-engine/declaraciones/phaser.d.ts	/^            static ReflectAngle(lineA: Phaser.Geom.Line, lineB: Phaser.Geom.Line): number;$/;"	m
Remove	pilas-engine/declaraciones/phaser.d.ts	/^            function Remove(array: any[], item: any | any[], callback?: Function, context?: object): any | any[];$/;"	f
RemoveAt	pilas-engine/declaraciones/phaser.d.ts	/^            function RemoveAt(array: any[], index: number, callback?: Function, context?: object): any;$/;"	f
RemoveAt	pilas-engine/declaraciones/phaser.d.ts	/^            function RemoveAt(string: string, index: number): string;$/;"	f
RemoveBetween	pilas-engine/declaraciones/phaser.d.ts	/^            function RemoveBetween(array: any[], startIndex: number, endIndex: number, callback?: Function, context?: object): any[];$/;"	f
RemoveFromDOM	pilas-engine/declaraciones/phaser.d.ts	/^        function RemoveFromDOM(element: HTMLElement): void;$/;"	f
RemoveRandomElement	pilas-engine/declaraciones/phaser.d.ts	/^            function RemoveRandomElement(array: any[], start?: number, length?: number): object;$/;"	f
RemoveTileAt	pilas-engine/declaraciones/phaser.d.ts	/^            function RemoveTileAt(tileX: number, tileY: number, replaceWithNull: boolean, recalculateFaces: boolean, layer: Phaser.Tilemaps.LayerData): Phaser.Tilemaps.Tile;$/;"	f
RemoveTileAtWorldXY	pilas-engine/declaraciones/phaser.d.ts	/^            function RemoveTileAtWorldXY(worldX: number, worldY: number, replaceWithNull: boolean, recalculateFaces: boolean, camera: Phaser.Cameras.Scene2D.Camera, layer: Phaser.Tilemaps.LayerData): Phaser.Tilemaps.Tile;$/;"	f
RenderConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type RenderConfig = {$/;"	t
RenderDebug	pilas-engine/declaraciones/phaser.d.ts	/^            function RenderDebug(graphics: Phaser.GameObjects.Graphics, styleConfig: Phaser.Types.Tilemaps.DebugStyleOptions, layer: Phaser.Tilemaps.LayerData): void;$/;"	f
RenderTarget	pilas-engine/declaraciones/phaser.d.ts	/^            class RenderTarget {$/;"	c
RenderTargetConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type RenderTargetConfig = {$/;"	t
RenderTexture	pilas-engine/declaraciones/phaser.d.ts	/^            namespace RenderTexture {$/;"	c
RenderTexture	pilas-engine/declaraciones/phaser.d.ts	/^        class RenderTexture extends Phaser.GameObjects.GameObject implements Phaser.GameObjects.Components.Alpha, Phaser.GameObjects.Components.BlendMode, Phaser.GameObjects.Components.ComputedSize, Phaser.GameObjects.Components.Crop, Phaser.GameObjects.Components.Depth, Phaser.GameObjects.Components.Flip, Phaser.GameObjects.Components.GetBounds, Phaser.GameObjects.Components.Mask, Phaser.GameObjects.Components.Origin, Phaser.GameObjects.Components.Pipeline, Phaser.GameObjects.Components.ScrollFactor, Phaser.GameObjects.Components.Tint, Phaser.GameObjects.Components.Transform, Phaser.GameObjects.Components.Visible {$/;"	c
RenderTextureConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type RenderTextureConfig = {$/;"	t
Renderer	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Renderer {$/;"	c
Renderer	pilas-engine/declaraciones/phaser.d.ts	/^    namespace Renderer {$/;"	c
Replace	pilas-engine/declaraciones/phaser.d.ts	/^            function Replace(array: any[], oldChild: any, newChild: any): boolean;$/;"	f
ReplaceByIndex	pilas-engine/declaraciones/phaser.d.ts	/^            function ReplaceByIndex(findIndex: number, newIndex: number, tileX: number, tileY: number, width: number, height: number, layer: Phaser.Tilemaps.LayerData): void;$/;"	f
RequestAnimationFrame	pilas-engine/declaraciones/phaser.d.ts	/^        class RequestAnimationFrame {$/;"	c
RetroFont	pilas-engine/declaraciones/phaser.d.ts	/^        namespace RetroFont {$/;"	c
RetroFontConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type RetroFontConfig = {$/;"	t
Reverse	pilas-engine/declaraciones/phaser.d.ts	/^            function Reverse(angle: number): number;$/;"	f
Reverse	pilas-engine/declaraciones/phaser.d.ts	/^            function Reverse(string: string): string;$/;"	f
ReverseColumns	pilas-engine/declaraciones/phaser.d.ts	/^                function ReverseColumns<T>(matrix?: T[][]): T[][];$/;"	f
ReverseRows	pilas-engine/declaraciones/phaser.d.ts	/^                function ReverseRows<T>(matrix?: T[][]): T[][];$/;"	f
RightBottom	pilas-engine/declaraciones/phaser.d.ts	/^                function RightBottom<G extends Phaser.GameObjects.GameObject>(gameObject: G, alignTo: Phaser.GameObjects.GameObject, offsetX?: number, offsetY?: number): G;$/;"	f
RightCenter	pilas-engine/declaraciones/phaser.d.ts	/^                function RightCenter<G extends Phaser.GameObjects.GameObject>(gameObject: G, alignIn: Phaser.GameObjects.GameObject, offsetX?: number, offsetY?: number): G;$/;"	f
RightCenter	pilas-engine/declaraciones/phaser.d.ts	/^                function RightCenter<G extends Phaser.GameObjects.GameObject>(gameObject: G, alignTo: Phaser.GameObjects.GameObject, offsetX?: number, offsetY?: number): G;$/;"	f
RightTop	pilas-engine/declaraciones/phaser.d.ts	/^                function RightTop<G extends Phaser.GameObjects.GameObject>(gameObject: G, alignTo: Phaser.GameObjects.GameObject, offsetX?: number, offsetY?: number): G;$/;"	f
Rope	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Rope {$/;"	c
Rope	pilas-engine/declaraciones/phaser.d.ts	/^        class Rope extends Phaser.GameObjects.GameObject implements Phaser.GameObjects.Components.AlphaSingle, Phaser.GameObjects.Components.BlendMode, Phaser.GameObjects.Components.Depth, Phaser.GameObjects.Components.Flip, Phaser.GameObjects.Components.Mask, Phaser.GameObjects.Components.Pipeline, Phaser.GameObjects.Components.Size, Phaser.GameObjects.Components.Texture, Phaser.GameObjects.Components.Transform, Phaser.GameObjects.Components.Visible, Phaser.GameObjects.Components.ScrollFactor {$/;"	c
RopeConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type RopeConfig = Phaser.Types.GameObjects.GameObjectConfig & {$/;"	t
RopePipeline	pilas-engine/declaraciones/phaser.d.ts	/^                class RopePipeline extends Phaser.Renderer.WebGL.Pipelines.MultiPipeline {$/;"	c
RotarConstantemente	pilas-engine/habilidades/rotar-constantemente.ts	/^class RotarConstantemente extends Habilidad {$/;"	c
Rotate	pilas-engine/declaraciones/phaser.d.ts	/^        function Rotate(point: Phaser.Geom.Point | object, angle: number): Phaser.Geom.Point;$/;"	f
Rotate	pilas-engine/declaraciones/phaser.d.ts	/^        function Rotate<G extends Phaser.GameObjects.GameObject[]>(items: G, value: number, step?: number, index?: number, direction?: number): G;$/;"	f
Rotate180	pilas-engine/declaraciones/phaser.d.ts	/^                function Rotate180<T>(matrix?: T[][]): T[][];$/;"	f
RotateAround	pilas-engine/declaraciones/phaser.d.ts	/^        function RotateAround<G extends Phaser.GameObjects.GameObject[]>(items: G, point: object, angle: number): G;$/;"	f
RotateAround	pilas-engine/declaraciones/phaser.d.ts	/^        function RotateAround<T extends Phaser.Types.Math.Vector2Like>(point: T, x: number, y: number, angle: number): T;$/;"	f
RotateAroundDistance	pilas-engine/declaraciones/phaser.d.ts	/^        function RotateAroundDistance<G extends Phaser.GameObjects.GameObject[]>(items: G, point: object, angle: number, distance: number): G;$/;"	f
RotateAroundDistance	pilas-engine/declaraciones/phaser.d.ts	/^        function RotateAroundDistance<T extends Phaser.Types.Math.Vector2Like>(point: T, x: number, y: number, angle: number, distance: number): T;$/;"	f
RotateFace	pilas-engine/declaraciones/phaser.d.ts	/^            function RotateFace(face: Phaser.Geom.Mesh.Face, angle: number, cx?: number, cy?: number): void;$/;"	f
RotateLeft	pilas-engine/declaraciones/phaser.d.ts	/^                function RotateLeft<T>(matrix?: T[][]): T[][];$/;"	f
RotateLeft	pilas-engine/declaraciones/phaser.d.ts	/^            function RotateLeft(array: any[], total?: number): any;$/;"	f
RotateMatrix	pilas-engine/declaraciones/phaser.d.ts	/^                function RotateMatrix<T>(matrix?: T[][], direction?: number | string): T[][];$/;"	f
RotateRight	pilas-engine/declaraciones/phaser.d.ts	/^                function RotateRight<T>(matrix?: T[][]): T[][];$/;"	f
RotateRight	pilas-engine/declaraciones/phaser.d.ts	/^            function RotateRight(array: any[], total?: number): any;$/;"	f
RotateTo	pilas-engine/declaraciones/phaser.d.ts	/^                class RotateTo {$/;"	c
RotateTo	pilas-engine/declaraciones/phaser.d.ts	/^            function RotateTo(currentAngle: number, targetAngle: number, lerp?: number): number;$/;"	f
RotateTo	pilas-engine/declaraciones/phaser.d.ts	/^        function RotateTo<T extends Phaser.Types.Math.Vector2Like>(point: T, x: number, y: number, angle: number, distance: number): T;$/;"	f
RotateVec3	pilas-engine/declaraciones/phaser.d.ts	/^        function RotateVec3(vec: Phaser.Math.Vector3, axis: Phaser.Math.Vector3, radians: number): Phaser.Math.Vector3;$/;"	f
Rotation	pilas-engine/libs/spriter.ts	/^class Rotation extends Angle {$/;"	c
RoundAwayFromZero	pilas-engine/declaraciones/phaser.d.ts	/^        function RoundAwayFromZero(value: number): number;$/;"	f
RoundTo	pilas-engine/declaraciones/phaser.d.ts	/^        function RoundTo(value: number, place?: number, base?: number): number;$/;"	f
RoundedRectRadius	pilas-engine/declaraciones/phaser.d.ts	/^                type RoundedRectRadius = {$/;"	t
RunCull	pilas-engine/declaraciones/phaser.d.ts	/^            function RunCull(layer: Phaser.Tilemaps.LayerData, bounds: object, renderOrder: number, outputArray: any[]): Phaser.Tilemaps.Tile[];$/;"	f
S3TC	pilas-engine/declaraciones/phaser.d.ts	/^                    S3TC: object | undefined;$/;"	m
S3TCRGB	pilas-engine/declaraciones/phaser.d.ts	/^                    S3TCRGB: object | undefined;$/;"	m
SNES_USB	pilas-engine/declaraciones/phaser.d.ts	/^                namespace SNES_USB {$/;"	c
SVGFile	pilas-engine/declaraciones/phaser.d.ts	/^            class SVGFile extends Phaser.Loader.File {$/;"	c
SVGFileConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type SVGFileConfig = {$/;"	t
SVGSizeConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type SVGSizeConfig = {$/;"	t
SafeRange	pilas-engine/declaraciones/phaser.d.ts	/^            function SafeRange(array: any[], startIndex: number, endIndex: number, throwError?: boolean): boolean;$/;"	f
SameDimensions	pilas-engine/declaraciones/phaser.d.ts	/^            static SameDimensions(rect: Phaser.Geom.Rectangle, toCompare: Phaser.Geom.Rectangle): boolean;$/;"	m
SampleCurve	pilas-engine/libs/spriter.ts	/^  function SampleCurve(a, b, c, t) {$/;"	f
SampleCurveDerivativeX	pilas-engine/libs/spriter.ts	/^  function SampleCurveDerivativeX(ax, bx, cx, t) {$/;"	f
Scale	pilas-engine/declaraciones/phaser.d.ts	/^    namespace Scale {$/;"	c
Scale	pilas-engine/libs/spriter.ts	/^class Scale extends Vector {$/;"	c
ScaleConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type ScaleConfig = {$/;"	t
ScaleManager	pilas-engine/declaraciones/phaser.d.ts	/^        class ScaleManager extends Phaser.Events.EventEmitter {$/;"	c
ScaleModeType	pilas-engine/declaraciones/phaser.d.ts	/^        type ScaleModeType = Phaser.Scale.ScaleModes;$/;"	t
ScaleModes	pilas-engine/declaraciones/phaser.d.ts	/^        enum ScaleModes {$/;"	e
ScaleModes	pilas-engine/declaraciones/phaser.d.ts	/^    enum ScaleModes {$/;"	e
ScaleX	pilas-engine/declaraciones/phaser.d.ts	/^        function ScaleX<G extends Phaser.GameObjects.GameObject[]>(items: G, value: number, step?: number, index?: number, direction?: number): G;$/;"	f
ScaleXY	pilas-engine/declaraciones/phaser.d.ts	/^        function ScaleXY<G extends Phaser.GameObjects.GameObject[]>(items: G, scaleX: number, scaleY?: number, stepX?: number, stepY?: number, index?: number, direction?: number): G;$/;"	f
ScaleY	pilas-engine/declaraciones/phaser.d.ts	/^        function ScaleY<G extends Phaser.GameObjects.GameObject[]>(items: G, value: number, step?: number, index?: number, direction?: number): G;$/;"	f
Scene	pilas-engine/declaraciones/phaser.d.ts	/^    class Scene {$/;"	c
Scene2D	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Scene2D {$/;"	c
Scene2D	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Scene2D {$/;"	c
SceneCreateCallback	pilas-engine/declaraciones/phaser.d.ts	/^            type SceneCreateCallback = (this: Phaser.Scene, data: object)=>void;$/;"	t
SceneFile	pilas-engine/declaraciones/phaser.d.ts	/^            class SceneFile extends Phaser.Loader.File {$/;"	c
SceneFileConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type SceneFileConfig = {$/;"	t
SceneInitCallback	pilas-engine/declaraciones/phaser.d.ts	/^            type SceneInitCallback = (this: Phaser.Scene, data: object)=>void;$/;"	t
SceneManager	pilas-engine/declaraciones/phaser.d.ts	/^        class SceneManager {$/;"	c
ScenePlugin	pilas-engine/declaraciones/phaser.d.ts	/^        class ScenePlugin extends Phaser.Plugins.BasePlugin {$/;"	c
ScenePlugin	pilas-engine/declaraciones/phaser.d.ts	/^        class ScenePlugin {$/;"	c
ScenePluginFile	pilas-engine/declaraciones/phaser.d.ts	/^            class ScenePluginFile extends Phaser.Loader.File {$/;"	c
ScenePluginFileConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type ScenePluginFileConfig = {$/;"	t
ScenePreloadCallback	pilas-engine/declaraciones/phaser.d.ts	/^            type ScenePreloadCallback = (this: Phaser.Scene)=>void;$/;"	t
SceneTransitionConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type SceneTransitionConfig = {$/;"	t
SceneUpdateCallback	pilas-engine/declaraciones/phaser.d.ts	/^            type SceneUpdateCallback = (this: Phaser.Scene)=>void;$/;"	t
Scenes	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Scenes {$/;"	c
Scenes	pilas-engine/declaraciones/phaser.d.ts	/^    namespace Scenes {$/;"	c
ScriptFile	pilas-engine/declaraciones/phaser.d.ts	/^            class ScriptFile extends Phaser.Loader.File {$/;"	c
ScriptFileConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type ScriptFileConfig = {$/;"	t
ScrollFactor	pilas-engine/declaraciones/phaser.d.ts	/^            interface ScrollFactor {$/;"	i
SeguirAlMouse	pilas-engine/habilidades/seguir-al-mouse.ts	/^class SeguirAlMouse extends Habilidad {$/;"	c
SeguirAlMouseLentamente	pilas-engine/habilidades/seguir-al-mouse-lentamente.ts	/^class SeguirAlMouseLentamente extends Habilidad {$/;"	c
SendToBack	pilas-engine/declaraciones/phaser.d.ts	/^            function SendToBack(array: any[], item: any): any;$/;"	f
Sensor	pilas-engine/declaraciones/phaser.d.ts	/^                interface Sensor {$/;"	i
Sensor	pilas-engine/sensor.ts	/^class Sensor {$/;"	c
SeparateTile	pilas-engine/declaraciones/phaser.d.ts	/^                function SeparateTile(i: number, body: Phaser.Physics.Arcade.Body, tile: Phaser.Tilemaps.Tile, tileWorldRect: Phaser.Geom.Rectangle, tilemapLayer: Phaser.Tilemaps.TilemapLayer, tileBias: number, isLayer: boolean): boolean;$/;"	f
SeparateX	pilas-engine/declaraciones/phaser.d.ts	/^            function SeparateX(body1: Phaser.Physics.Arcade.Body, body2: Phaser.Physics.Arcade.Body, overlapOnly: boolean, bias: number): boolean;$/;"	f
SeparateY	pilas-engine/declaraciones/phaser.d.ts	/^            function SeparateY(body1: Phaser.Physics.Arcade.Body, body2: Phaser.Physics.Arcade.Body, overlapOnly: boolean, bias: number): boolean;$/;"	f
Set	pilas-engine/declaraciones/phaser.d.ts	/^        class Set<T> {$/;"	c
SetAll	pilas-engine/declaraciones/phaser.d.ts	/^            function SetAll(array: any[], property: string, value: any, startIndex?: number, endIndex?: number): any[];$/;"	f
SetAlpha	pilas-engine/declaraciones/phaser.d.ts	/^        function SetAlpha<G extends Phaser.GameObjects.GameObject[]>(items: G, value: number, step?: number, index?: number, direction?: number): G;$/;"	f
SetBlendMode	pilas-engine/declaraciones/phaser.d.ts	/^        function SetBlendMode<G extends Phaser.GameObjects.GameObject[]>(items: G, value: number, index?: number, direction?: number): G;$/;"	f
SetBody	pilas-engine/declaraciones/phaser.d.ts	/^                interface SetBody {$/;"	i
SetBottom	pilas-engine/declaraciones/phaser.d.ts	/^            function SetBottom<G extends Phaser.GameObjects.GameObject>(gameObject: G, value: number): G;$/;"	f
SetCenterX	pilas-engine/declaraciones/phaser.d.ts	/^            function SetCenterX<G extends Phaser.GameObjects.GameObject>(gameObject: G, x: number): G;$/;"	f
SetCenterY	pilas-engine/declaraciones/phaser.d.ts	/^            function SetCenterY<G extends Phaser.GameObjects.GameObject>(gameObject: G, y: number): G;$/;"	f
SetCollision	pilas-engine/declaraciones/phaser.d.ts	/^            function SetCollision(indexes: number | any[], collides: boolean, recalculateFaces: boolean, layer: Phaser.Tilemaps.LayerData, updateLayer?: boolean): void;$/;"	f
SetCollisionBetween	pilas-engine/declaraciones/phaser.d.ts	/^            function SetCollisionBetween(start: number, stop: number, collides: boolean, recalculateFaces: boolean, layer: Phaser.Tilemaps.LayerData, updateLayer?: boolean): void;$/;"	f
SetCollisionByExclusion	pilas-engine/declaraciones/phaser.d.ts	/^            function SetCollisionByExclusion(indexes: number[], collides: boolean, recalculateFaces: boolean, layer: Phaser.Tilemaps.LayerData): void;$/;"	f
SetCollisionByProperty	pilas-engine/declaraciones/phaser.d.ts	/^            function SetCollisionByProperty(properties: object, collides: boolean, recalculateFaces: boolean, layer: Phaser.Tilemaps.LayerData): void;$/;"	f
SetCollisionFromCollisionGroup	pilas-engine/declaraciones/phaser.d.ts	/^            function SetCollisionFromCollisionGroup(collides: boolean, recalculateFaces: boolean, layer: Phaser.Tilemaps.LayerData): void;$/;"	f
SetDepth	pilas-engine/declaraciones/phaser.d.ts	/^        function SetDepth<G extends Phaser.GameObjects.GameObject[]>(items: G, value: number, step?: number, index?: number, direction?: number): G;$/;"	f
SetHitArea	pilas-engine/declaraciones/phaser.d.ts	/^        function SetHitArea<G extends Phaser.GameObjects.GameObject[]>(items: G, hitArea: any, hitAreaCallback: Phaser.Types.Input.HitAreaCallback): G;$/;"	f
SetLayerCollisionIndex	pilas-engine/declaraciones/phaser.d.ts	/^            function SetLayerCollisionIndex(tileIndex: number, collides: boolean, layer: Phaser.Tilemaps.LayerData): void;$/;"	f
SetLeft	pilas-engine/declaraciones/phaser.d.ts	/^            function SetLeft<G extends Phaser.GameObjects.GameObject>(gameObject: G, value: number): G;$/;"	f
SetOrigin	pilas-engine/declaraciones/phaser.d.ts	/^        function SetOrigin<G extends Phaser.GameObjects.GameObject[]>(items: G, originX: number, originY?: number, stepX?: number, stepY?: number, index?: number, direction?: number): G;$/;"	f
SetRight	pilas-engine/declaraciones/phaser.d.ts	/^            function SetRight<G extends Phaser.GameObjects.GameObject>(gameObject: G, value: number): G;$/;"	f
SetRotation	pilas-engine/declaraciones/phaser.d.ts	/^        function SetRotation<G extends Phaser.GameObjects.GameObject[]>(items: G, value: number, step?: number, index?: number, direction?: number): G;$/;"	f
SetScale	pilas-engine/declaraciones/phaser.d.ts	/^        function SetScale<G extends Phaser.GameObjects.GameObject[]>(items: G, scaleX: number, scaleY?: number, stepX?: number, stepY?: number, index?: number, direction?: number): G;$/;"	f
SetScaleX	pilas-engine/declaraciones/phaser.d.ts	/^        function SetScaleX<G extends Phaser.GameObjects.GameObject[]>(items: G, value: number, step?: number, index?: number, direction?: number): G;$/;"	f
SetScaleY	pilas-engine/declaraciones/phaser.d.ts	/^        function SetScaleY<G extends Phaser.GameObjects.GameObject[]>(items: G, value: number, step?: number, index?: number, direction?: number): G;$/;"	f
SetScrollFactor	pilas-engine/declaraciones/phaser.d.ts	/^        function SetScrollFactor<G extends Phaser.GameObjects.GameObject[]>(items: G, scrollFactorX: number, scrollFactorY?: number, stepX?: number, stepY?: number, index?: number, direction?: number): G;$/;"	f
SetScrollFactorX	pilas-engine/declaraciones/phaser.d.ts	/^        function SetScrollFactorX<G extends Phaser.GameObjects.GameObject[]>(items: G, value: number, step?: number, index?: number, direction?: number): G;$/;"	f
SetScrollFactorY	pilas-engine/declaraciones/phaser.d.ts	/^        function SetScrollFactorY<G extends Phaser.GameObjects.GameObject[]>(items: G, value: number, step?: number, index?: number, direction?: number): G;$/;"	f
SetTileCollision	pilas-engine/declaraciones/phaser.d.ts	/^            function SetTileCollision(tile: Phaser.Tilemaps.Tile, collides?: boolean): void;$/;"	f
SetTileIndexCallback	pilas-engine/declaraciones/phaser.d.ts	/^            function SetTileIndexCallback(indexes: number | any[], callback: Function, callbackContext: object, layer: Phaser.Tilemaps.LayerData): void;$/;"	f
SetTileLocationCallback	pilas-engine/declaraciones/phaser.d.ts	/^            function SetTileLocationCallback(tileX: number, tileY: number, width: number, height: number, callback: Function, callbackContext: object, layer: Phaser.Tilemaps.LayerData): void;$/;"	f
SetTint	pilas-engine/declaraciones/phaser.d.ts	/^        function SetTint<G extends Phaser.GameObjects.GameObject[]>(items: G, topLeft: number, topRight?: number, bottomLeft?: number, bottomRight?: number): G;$/;"	f
SetTop	pilas-engine/declaraciones/phaser.d.ts	/^            function SetTop<G extends Phaser.GameObjects.GameObject>(gameObject: G, value: number): G;$/;"	f
SetTransform	pilas-engine/declaraciones/phaser.d.ts	/^            function SetTransform(renderer: Phaser.Renderer.Canvas.CanvasRenderer, ctx: CanvasRenderingContext2D, src: Phaser.GameObjects.GameObject, camera: Phaser.Cameras.Scene2D.Camera, parentMatrix?: Phaser.GameObjects.Components.TransformMatrix): boolean;$/;"	f
SetValue	pilas-engine/declaraciones/phaser.d.ts	/^            function SetValue(source: object, key: string, value: any): boolean;$/;"	f
SetVisible	pilas-engine/declaraciones/phaser.d.ts	/^        function SetVisible<G extends Phaser.GameObjects.GameObject[]>(items: G, value: boolean, index?: number, direction?: number): G;$/;"	f
SetX	pilas-engine/declaraciones/phaser.d.ts	/^        function SetX<G extends Phaser.GameObjects.GameObject[]>(items: G, value: number, step?: number, index?: number, direction?: number): G;$/;"	f
SetXY	pilas-engine/declaraciones/phaser.d.ts	/^        function SetXY<G extends Phaser.GameObjects.GameObject[]>(items: G, x: number, y?: number, stepX?: number, stepY?: number, index?: number, direction?: number): G;$/;"	f
SetY	pilas-engine/declaraciones/phaser.d.ts	/^        function SetY<G extends Phaser.GameObjects.GameObject[]>(items: G, value: number, step?: number, index?: number, direction?: number): G;$/;"	f
Settings	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Settings {$/;"	c
SettingsConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type SettingsConfig = {$/;"	t
SettingsObject	pilas-engine/declaraciones/phaser.d.ts	/^            type SettingsObject = {$/;"	t
Shader	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Shader {$/;"	c
Shader	pilas-engine/declaraciones/phaser.d.ts	/^        class Shader extends Phaser.GameObjects.GameObject implements Phaser.GameObjects.Components.ComputedSize, Phaser.GameObjects.Components.Depth, Phaser.GameObjects.Components.GetBounds, Phaser.GameObjects.Components.Mask, Phaser.GameObjects.Components.Origin, Phaser.GameObjects.Components.ScrollFactor, Phaser.GameObjects.Components.Transform, Phaser.GameObjects.Components.Visible {$/;"	c
ShaderConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type ShaderConfig = Phaser.Types.GameObjects.GameObjectConfig & {$/;"	t
Shake	pilas-engine/declaraciones/phaser.d.ts	/^                class Shake {$/;"	c
Shape	pilas-engine/declaraciones/phaser.d.ts	/^        class Shape extends Phaser.GameObjects.GameObject implements Phaser.GameObjects.Components.AlphaSingle, Phaser.GameObjects.Components.BlendMode, Phaser.GameObjects.Components.Depth, Phaser.GameObjects.Components.GetBounds, Phaser.GameObjects.Components.Mask, Phaser.GameObjects.Components.Origin, Phaser.GameObjects.Components.Pipeline, Phaser.GameObjects.Components.ScrollFactor, Phaser.GameObjects.Components.Transform, Phaser.GameObjects.Components.Visible {$/;"	c
Shift	pilas-engine/utilidades.ts	/^      Shift: "shift",$/;"	m
ShiftPosition	pilas-engine/declaraciones/phaser.d.ts	/^        function ShiftPosition<G extends Phaser.GameObjects.GameObject[], O extends Phaser.Math.Vector2>(items: G, x: number, y: number, direction?: number, output?: O): O;$/;"	f
ShortestBetween	pilas-engine/declaraciones/phaser.d.ts	/^            function ShortestBetween(angle1: number, angle2: number): number;$/;"	f
Shuffle	pilas-engine/declaraciones/phaser.d.ts	/^            function Shuffle(tileX: number, tileY: number, width: number, height: number, layer: Phaser.Tilemaps.LayerData): void;$/;"	f
Shuffle	pilas-engine/declaraciones/phaser.d.ts	/^            function Shuffle<T>(array: T[]): T[];$/;"	f
Shuffle	pilas-engine/declaraciones/phaser.d.ts	/^        function Shuffle<G extends Phaser.GameObjects.GameObject[]>(items: G): G;$/;"	f
SinCosTable	pilas-engine/declaraciones/phaser.d.ts	/^            type SinCosTable = {$/;"	t
SinCosTableGenerator	pilas-engine/declaraciones/phaser.d.ts	/^        function SinCosTableGenerator(length: number, sinAmp?: number, cosAmp?: number, frequency?: number): Phaser.Types.Math.SinCosTable;$/;"	f
Sine	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Sine {$/;"	c
SinglePipeline	pilas-engine/declaraciones/phaser.d.ts	/^                class SinglePipeline extends Phaser.Renderer.WebGL.Pipelines.MultiPipeline {$/;"	c
Size	pilas-engine/declaraciones/phaser.d.ts	/^                interface Size {$/;"	i
Size	pilas-engine/declaraciones/phaser.d.ts	/^            interface Size {$/;"	i
Size	pilas-engine/declaraciones/phaser.d.ts	/^        class Size {$/;"	c
Sleep	pilas-engine/declaraciones/phaser.d.ts	/^                interface Sleep {$/;"	i
SleepEndEvent	pilas-engine/declaraciones/phaser.d.ts	/^                type SleepEndEvent = {$/;"	t
SleepStartEvent	pilas-engine/declaraciones/phaser.d.ts	/^                type SleepStartEvent = {$/;"	t
Slope	pilas-engine/declaraciones/phaser.d.ts	/^            static Slope(line: Phaser.Geom.Line): number;$/;"	m
SmoothStep	pilas-engine/declaraciones/phaser.d.ts	/^            function SmoothStep(t: number, min: number, max: number): number;$/;"	f
SmoothStep	pilas-engine/declaraciones/phaser.d.ts	/^        function SmoothStep(x: number, min: number, max: number): number;$/;"	f
SmoothStep	pilas-engine/declaraciones/phaser.d.ts	/^        function SmoothStep<G extends Phaser.GameObjects.GameObject[]>(items: G, property: string, min: number, max: number, inc?: boolean): G;$/;"	f
SmoothedKeyControl	pilas-engine/declaraciones/phaser.d.ts	/^            class SmoothedKeyControl {$/;"	c
SmoothedKeyControlConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type SmoothedKeyControlConfig = {$/;"	t
SmootherStep	pilas-engine/declaraciones/phaser.d.ts	/^            function SmootherStep(t: number, min: number, max: number): number;$/;"	f
SmootherStep	pilas-engine/declaraciones/phaser.d.ts	/^        function SmootherStep(x: number, min: number, max: number): number;$/;"	f
SmootherStep	pilas-engine/declaraciones/phaser.d.ts	/^        function SmootherStep<G extends Phaser.GameObjects.GameObject[]>(items: G, property: string, min: number, max: number, inc?: boolean): G;$/;"	f
Smoothing	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Smoothing {$/;"	c
Snake	pilas-engine/declaraciones/phaser.d.ts	/^            function Snake(x1: number, y1: number, x2: number, y2: number): number;$/;"	f
Snap	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Snap {$/;"	c
Snapshot	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Snapshot {$/;"	c
Snapshot	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Snapshot {$/;"	c
SnapshotCallback	pilas-engine/declaraciones/phaser.d.ts	/^                type SnapshotCallback = (snapshot: Phaser.Display.Color | HTMLImageElement)=>void;$/;"	t
SnapshotState	pilas-engine/declaraciones/phaser.d.ts	/^                type SnapshotState = {$/;"	t
Solve	pilas-engine/libs/spriter.ts	/^  function Solve(ax, bx, cx, ay, by, cy, x, epsilon) {$/;"	f
SolveCurveX	pilas-engine/libs/spriter.ts	/^  function SolveCurveX(ax, bx, cx, x, epsilon) {$/;"	f
SolveEpsilon	pilas-engine/libs/spriter.ts	/^  function SolveEpsilon(duration) {$/;"	f
Sonidos	pilas-engine/sonidos.ts	/^class Sonidos {$/;"	c
SortByDigits	pilas-engine/declaraciones/phaser.d.ts	/^            function SortByDigits(array: string[]): string[];$/;"	f
Sound	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Sound {$/;"	c
Sound	pilas-engine/declaraciones/phaser.d.ts	/^    namespace Sound {$/;"	c
SoundConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type SoundConfig = {$/;"	t
SoundFile	pilas-engine/libs/spriter.ts	/^class SoundFile extends File {$/;"	c
SoundManagerCreator	pilas-engine/declaraciones/phaser.d.ts	/^        function SoundManagerCreator(game: Phaser.Game): Phaser.Sound.HTML5AudioSoundManager | Phaser.Sound.WebAudioSoundManager | Phaser.Sound.NoAudioSoundManager;$/;"	f
SoundMarker	pilas-engine/declaraciones/phaser.d.ts	/^            type SoundMarker = {$/;"	t
SoundObject	pilas-engine/libs/spriter.ts	/^class SoundObject extends BaseObject {$/;"	c
SoundTimelineKeyframe	pilas-engine/libs/spriter.ts	/^class SoundTimelineKeyframe extends TimelineKeyframe {$/;"	c
Soundline	pilas-engine/libs/spriter.ts	/^class Soundline extends Element {$/;"	c
SoundlineKeyframe	pilas-engine/libs/spriter.ts	/^class SoundlineKeyframe extends Keyframe {$/;"	c
Space	pilas-engine/libs/spriter.ts	/^class Space {$/;"	c
SpliceOne	pilas-engine/declaraciones/phaser.d.ts	/^            function SpliceOne(array: any[], index: number): any;$/;"	f
Spline	pilas-engine/declaraciones/phaser.d.ts	/^        class Spline extends Phaser.Curves.Curve {$/;"	c
Spread	pilas-engine/declaraciones/phaser.d.ts	/^        function Spread<G extends Phaser.GameObjects.GameObject[]>(items: G, property: string, min: number, max: number, inc?: boolean): G;$/;"	f
Sprite	pilas-engine/declaraciones/phaser.d.ts	/^            class Sprite extends Phaser.GameObjects.Sprite implements Phaser.Physics.Arcade.Components.Acceleration, Phaser.Physics.Arcade.Components.Angular, Phaser.Physics.Arcade.Components.Bounce, Phaser.Physics.Arcade.Components.Debug, Phaser.Physics.Arcade.Components.Drag, Phaser.Physics.Arcade.Components.Enable, Phaser.Physics.Arcade.Components.Friction, Phaser.Physics.Arcade.Components.Gravity, Phaser.Physics.Arcade.Components.Immovable, Phaser.Physics.Arcade.Components.Mass, Phaser.Physics.Arcade.Components.Pushable, Phaser.Physics.Arcade.Components.Size, Phaser.Physics.Arcade.Components.Velocity, Phaser.GameObjects.Components.Alpha, Phaser.GameObjects.Components.BlendMode, Phaser.GameObjects.Components.Depth, Phaser.GameObjects.Components.Flip, Phaser.GameObjects.Components.GetBounds, Phaser.GameObjects.Components.Origin, Phaser.GameObjects.Components.Pipeline, Phaser.GameObjects.Components.ScrollFactor, Phaser.GameObjects.Components.Size, Phaser.GameObjects.Components.Texture, Phaser.GameObjects.Components.Tint, Phaser.GameObjects.Components.Transform, Phaser.GameObjects.Components.Visible {$/;"	c
Sprite	pilas-engine/declaraciones/phaser.d.ts	/^            class Sprite extends Phaser.GameObjects.Sprite implements Phaser.Physics.Matter.Components.Bounce, Phaser.Physics.Matter.Components.Collision, Phaser.Physics.Matter.Components.Force, Phaser.Physics.Matter.Components.Friction, Phaser.Physics.Matter.Components.Gravity, Phaser.Physics.Matter.Components.Mass, Phaser.Physics.Matter.Components.Sensor, Phaser.Physics.Matter.Components.SetBody, Phaser.Physics.Matter.Components.Sleep, Phaser.Physics.Matter.Components.Static, Phaser.Physics.Matter.Components.Transform, Phaser.Physics.Matter.Components.Velocity, Phaser.GameObjects.Components.Alpha, Phaser.GameObjects.Components.BlendMode, Phaser.GameObjects.Components.Depth, Phaser.GameObjects.Components.Flip, Phaser.GameObjects.Components.GetBounds, Phaser.GameObjects.Components.Origin, Phaser.GameObjects.Components.Pipeline, Phaser.GameObjects.Components.ScrollFactor, Phaser.GameObjects.Components.Size, Phaser.GameObjects.Components.Texture, Phaser.GameObjects.Components.Tint, Phaser.GameObjects.Components.Transform, Phaser.GameObjects.Components.Visible {$/;"	c
Sprite	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Sprite {$/;"	c
Sprite	pilas-engine/declaraciones/phaser.d.ts	/^        class Sprite extends Phaser.GameObjects.GameObject implements Phaser.GameObjects.Components.Alpha, Phaser.GameObjects.Components.BlendMode, Phaser.GameObjects.Components.Depth, Phaser.GameObjects.Components.Flip, Phaser.GameObjects.Components.GetBounds, Phaser.GameObjects.Components.Mask, Phaser.GameObjects.Components.Origin, Phaser.GameObjects.Components.Pipeline, Phaser.GameObjects.Components.ScrollFactor, Phaser.GameObjects.Components.Size, Phaser.GameObjects.Components.TextureCrop, Phaser.GameObjects.Components.Tint, Phaser.GameObjects.Components.Transform, Phaser.GameObjects.Components.Visible {$/;"	c
SpriteConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type SpriteConfig = Phaser.Types.GameObjects.GameObjectConfig & {$/;"	t
SpriteFrame	pilas-engine/libs/spriter.ts	/^class SpriteFrame {$/;"	c
SpriteObjInfo	pilas-engine/libs/spriter.ts	/^class SpriteObjInfo extends ObjInfo {$/;"	c
SpriteObject	pilas-engine/libs/spriter.ts	/^class SpriteObject extends BaseObject {$/;"	c
SpriteSheetConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type SpriteSheetConfig = {$/;"	t
SpriteSheetFile	pilas-engine/declaraciones/phaser.d.ts	/^            class SpriteSheetFile extends Phaser.Loader.File {$/;"	c
SpriteSheetFileConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type SpriteSheetFileConfig = {$/;"	t
SpriteSheetFromAtlasConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type SpriteSheetFromAtlasConfig = {$/;"	t
SpriteTimelineKeyframe	pilas-engine/libs/spriter.ts	/^class SpriteTimelineKeyframe extends TimelineKeyframe {$/;"	c
SpriteWithDynamicBody	pilas-engine/declaraciones/phaser.d.ts	/^                type SpriteWithDynamicBody = Phaser.Physics.Arcade.Sprite & {$/;"	t
SpriteWithStaticBody	pilas-engine/declaraciones/phaser.d.ts	/^                type SpriteWithStaticBody = Phaser.Physics.Arcade.Sprite & {$/;"	t
Squared	pilas-engine/declaraciones/phaser.d.ts	/^            function Squared(x1: number, y1: number, x2: number, y2: number): number;$/;"	f
StableSort	pilas-engine/declaraciones/phaser.d.ts	/^            function StableSort(array: any[], compare?: Function): any[];$/;"	f
StaggerBuilder	pilas-engine/declaraciones/phaser.d.ts	/^            function StaggerBuilder(value: number | number[], config?: Phaser.Types.Tweens.StaggerConfig): Function;$/;"	f
StaggerConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type StaggerConfig = {$/;"	t
StaggeredCullBounds	pilas-engine/declaraciones/phaser.d.ts	/^            function StaggeredCullBounds(layer: Phaser.Tilemaps.LayerData, camera: Phaser.Cameras.Scene2D.Camera): object;$/;"	f
StaggeredCullTiles	pilas-engine/declaraciones/phaser.d.ts	/^            function StaggeredCullTiles(layer: Phaser.Tilemaps.LayerData, camera: Phaser.Cameras.Scene2D.Camera, outputArray?: any[], renderOrder?: number): Phaser.Tilemaps.Tile[];$/;"	f
StaggeredTileToWorldXY	pilas-engine/declaraciones/phaser.d.ts	/^            function StaggeredTileToWorldXY(tileX: number, tileY: number, point: Phaser.Math.Vector2, camera: Phaser.Cameras.Scene2D.Camera, layer: Phaser.Tilemaps.LayerData): Phaser.Math.Vector2;$/;"	f
StaggeredTileToWorldY	pilas-engine/declaraciones/phaser.d.ts	/^            function StaggeredTileToWorldY(tileY: number, camera: Phaser.Cameras.Scene2D.Camera, layer: Phaser.Tilemaps.LayerData): number;$/;"	f
StaggeredWorldToTileXY	pilas-engine/declaraciones/phaser.d.ts	/^            function StaggeredWorldToTileXY(worldX: number, worldY: number, snapToFloor: boolean, point: Phaser.Math.Vector2, camera: Phaser.Cameras.Scene2D.Camera, layer: Phaser.Tilemaps.LayerData): Phaser.Math.Vector2;$/;"	f
StaggeredWorldToTileY	pilas-engine/declaraciones/phaser.d.ts	/^            function StaggeredWorldToTileY(worldY: number, snapToFloor: boolean, camera: Phaser.Cameras.Scene2D.Camera, layer: Phaser.Tilemaps.LayerData): number;$/;"	f
Star	pilas-engine/declaraciones/phaser.d.ts	/^        class Star extends Phaser.GameObjects.Shape {$/;"	c
Static	pilas-engine/declaraciones/phaser.d.ts	/^                interface Static {$/;"	i
StaticBody	pilas-engine/declaraciones/phaser.d.ts	/^            class StaticBody {$/;"	c
StaticGroup	pilas-engine/declaraciones/phaser.d.ts	/^            class StaticGroup extends Phaser.GameObjects.Group {$/;"	c
Stepped	pilas-engine/declaraciones/phaser.d.ts	/^            function Stepped(v: number, steps?: number): number;$/;"	f
Stepped	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Stepped {$/;"	c
String	pilas-engine/declaraciones/phaser.d.ts	/^        namespace String {$/;"	c
Structs	pilas-engine/declaraciones/phaser.d.ts	/^    namespace Structs {$/;"	c
StyleConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type StyleConfig = {$/;"	t
Styles	pilas-engine/declaraciones/phaser.d.ts	/^                type Styles = {$/;"	t
Swap	pilas-engine/declaraciones/phaser.d.ts	/^            function Swap(array: any[], item1: any, item2: any): any[];$/;"	f
SwapByIndex	pilas-engine/declaraciones/phaser.d.ts	/^            function SwapByIndex(tileA: number, tileB: number, tileX: number, tileY: number, width: number, height: number, layer: Phaser.Tilemaps.LayerData): void;$/;"	f
Systems	pilas-engine/declaraciones/phaser.d.ts	/^        class Systems {$/;"	c
TILE_BIAS	pilas-engine/declaraciones/phaser.d.ts	/^                TILE_BIAS: number;$/;"	m
Tab	pilas-engine/utilidades.ts	/^      Tab: "tab",$/;"	m
Tag	pilas-engine/libs/spriter.ts	/^class Tag extends Element {$/;"	c
TagDef	pilas-engine/libs/spriter.ts	/^class TagDef extends Element {$/;"	c
Tagline	pilas-engine/libs/spriter.ts	/^class Tagline extends Element {$/;"	c
TaglineKeyframe	pilas-engine/libs/spriter.ts	/^class TaglineKeyframe extends Keyframe {$/;"	c
TargetCamera	pilas-engine/declaraciones/phaser.d.ts	/^            static TargetCamera: Phaser.Cameras.Scene2D.Camera;$/;"	m
Text	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Text {$/;"	c
Text	pilas-engine/declaraciones/phaser.d.ts	/^        class Text extends Phaser.GameObjects.GameObject implements Phaser.GameObjects.Components.Alpha, Phaser.GameObjects.Components.BlendMode, Phaser.GameObjects.Components.ComputedSize, Phaser.GameObjects.Components.Crop, Phaser.GameObjects.Components.Depth, Phaser.GameObjects.Components.Flip, Phaser.GameObjects.Components.GetBounds, Phaser.GameObjects.Components.Mask, Phaser.GameObjects.Components.Origin, Phaser.GameObjects.Components.Pipeline, Phaser.GameObjects.Components.ScrollFactor, Phaser.GameObjects.Components.Tint, Phaser.GameObjects.Components.Transform, Phaser.GameObjects.Components.Visible {$/;"	c
TextConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type TextConfig = Phaser.Types.GameObjects.GameObjectConfig & {$/;"	t
TextFile	pilas-engine/declaraciones/phaser.d.ts	/^            class TextFile extends Phaser.Loader.File {$/;"	c
TextFileConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type TextFileConfig = {$/;"	t
TextMetrics	pilas-engine/declaraciones/phaser.d.ts	/^                type TextMetrics = {$/;"	t
TextPadding	pilas-engine/declaraciones/phaser.d.ts	/^                type TextPadding = {$/;"	t
TextShadow	pilas-engine/declaraciones/phaser.d.ts	/^                type TextShadow = {$/;"	t
TextStyle	pilas-engine/declaraciones/phaser.d.ts	/^                type TextStyle = {$/;"	t
TextStyle	pilas-engine/declaraciones/phaser.d.ts	/^        class TextStyle {$/;"	c
TextWordWrap	pilas-engine/declaraciones/phaser.d.ts	/^                type TextWordWrap = {$/;"	t
Texture	pilas-engine/declaraciones/phaser.d.ts	/^            interface Texture {$/;"	i
Texture	pilas-engine/declaraciones/phaser.d.ts	/^        class Texture {$/;"	c
TextureCrop	pilas-engine/declaraciones/phaser.d.ts	/^            interface TextureCrop {$/;"	i
TextureManager	pilas-engine/declaraciones/phaser.d.ts	/^        class TextureManager extends Phaser.Events.EventEmitter {$/;"	c
TextureSource	pilas-engine/declaraciones/phaser.d.ts	/^        class TextureSource {$/;"	c
Textures	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Textures {$/;"	c
Textures	pilas-engine/declaraciones/phaser.d.ts	/^    namespace Textures {$/;"	c
Tile	pilas-engine/declaraciones/phaser.d.ts	/^        class Tile implements Phaser.GameObjects.Components.Alpha, Phaser.GameObjects.Components.Flip, Phaser.GameObjects.Components.Visible {$/;"	c
TileBody	pilas-engine/declaraciones/phaser.d.ts	/^            class TileBody extends Phaser.Events.EventEmitter implements Phaser.Physics.Matter.Components.Bounce, Phaser.Physics.Matter.Components.Collision, Phaser.Physics.Matter.Components.Friction, Phaser.Physics.Matter.Components.Gravity, Phaser.Physics.Matter.Components.Mass, Phaser.Physics.Matter.Components.Sensor, Phaser.Physics.Matter.Components.Sleep, Phaser.Physics.Matter.Components.Static {$/;"	c
TileCheckX	pilas-engine/declaraciones/phaser.d.ts	/^                function TileCheckX(body: Phaser.Physics.Arcade.Body, tile: Phaser.Tilemaps.Tile, tileLeft: number, tileRight: number, tileBias: number, isLayer: boolean): number;$/;"	f
TileCheckY	pilas-engine/declaraciones/phaser.d.ts	/^                function TileCheckY(body: Phaser.Physics.Arcade.Body, tile: Phaser.Tilemaps.Tile, tileTop: number, tileBottom: number, tileBias: number, isLayer: boolean): number;$/;"	f
TileIntersectsBody	pilas-engine/declaraciones/phaser.d.ts	/^                function TileIntersectsBody(tileWorldRect: Object, body: Phaser.Physics.Arcade.Body): boolean;$/;"	f
TileSprite	pilas-engine/declaraciones/phaser.d.ts	/^            namespace TileSprite {$/;"	c
TileSprite	pilas-engine/declaraciones/phaser.d.ts	/^        class TileSprite extends Phaser.GameObjects.GameObject implements Phaser.GameObjects.Components.Alpha, Phaser.GameObjects.Components.BlendMode, Phaser.GameObjects.Components.ComputedSize, Phaser.GameObjects.Components.Crop, Phaser.GameObjects.Components.Depth, Phaser.GameObjects.Components.Flip, Phaser.GameObjects.Components.GetBounds, Phaser.GameObjects.Components.Mask, Phaser.GameObjects.Components.Origin, Phaser.GameObjects.Components.Pipeline, Phaser.GameObjects.Components.ScrollFactor, Phaser.GameObjects.Components.Tint, Phaser.GameObjects.Components.Transform, Phaser.GameObjects.Components.Visible {$/;"	c
TileSpriteConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type TileSpriteConfig = Phaser.Types.GameObjects.GameObjectConfig & {$/;"	t
TileToWorldX	pilas-engine/declaraciones/phaser.d.ts	/^            function TileToWorldX(tileX: number, camera: Phaser.Cameras.Scene2D.Camera, layer: Phaser.Tilemaps.LayerData): number;$/;"	f
TileToWorldXY	pilas-engine/declaraciones/phaser.d.ts	/^            function TileToWorldXY(tileX: number, tileY: number, point: Phaser.Math.Vector2, camera: Phaser.Cameras.Scene2D.Camera, layer: Phaser.Tilemaps.LayerData): Phaser.Math.Vector2;$/;"	f
TileToWorldY	pilas-engine/declaraciones/phaser.d.ts	/^            function TileToWorldY(tileY: number, camera: Phaser.Cameras.Scene2D.Camera, layer: Phaser.Tilemaps.LayerData): number;$/;"	f
Tiled	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Tiled {$/;"	c
TiledObject	pilas-engine/declaraciones/phaser.d.ts	/^            type TiledObject = {$/;"	t
Tilemap	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Tilemap {$/;"	c
Tilemap	pilas-engine/declaraciones/phaser.d.ts	/^        class Tilemap {$/;"	c
TilemapCSVFile	pilas-engine/declaraciones/phaser.d.ts	/^            class TilemapCSVFile extends Phaser.Loader.File {$/;"	c
TilemapCSVFileConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type TilemapCSVFileConfig = {$/;"	t
TilemapConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type TilemapConfig = {$/;"	t
TilemapImpactFile	pilas-engine/declaraciones/phaser.d.ts	/^            class TilemapImpactFile extends Phaser.Loader.File {$/;"	c
TilemapImpactFileConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type TilemapImpactFileConfig = {$/;"	t
TilemapJSONFile	pilas-engine/declaraciones/phaser.d.ts	/^            class TilemapJSONFile extends Phaser.Loader.File {$/;"	c
TilemapJSONFileConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type TilemapJSONFileConfig = {$/;"	t
TilemapLayer	pilas-engine/declaraciones/phaser.d.ts	/^        class TilemapLayer extends Phaser.GameObjects.GameObject implements Phaser.GameObjects.Components.Alpha, Phaser.GameObjects.Components.BlendMode, Phaser.GameObjects.Components.ComputedSize, Phaser.GameObjects.Components.Depth, Phaser.GameObjects.Components.Flip, Phaser.GameObjects.Components.GetBounds, Phaser.GameObjects.Components.Origin, Phaser.GameObjects.Components.Pipeline, Phaser.GameObjects.Components.ScrollFactor, Phaser.GameObjects.Components.Transform, Phaser.GameObjects.Components.Visible {$/;"	c
Tilemaps	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Tilemaps {$/;"	c
Tilemaps	pilas-engine/declaraciones/phaser.d.ts	/^    namespace Tilemaps {$/;"	c
Tileset	pilas-engine/declaraciones/phaser.d.ts	/^        class Tileset {$/;"	c
Time	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Time {$/;"	c
Time	pilas-engine/declaraciones/phaser.d.ts	/^    namespace Time {$/;"	c
TimeStep	pilas-engine/declaraciones/phaser.d.ts	/^        class TimeStep {$/;"	c
TimeStepCallback	pilas-engine/declaraciones/phaser.d.ts	/^            type TimeStepCallback = (time: number, average: number, interpolation: number)=>void;$/;"	t
Timeline	pilas-engine/declaraciones/phaser.d.ts	/^        class Timeline extends Phaser.Events.EventEmitter {$/;"	c
Timeline	pilas-engine/libs/spriter.ts	/^class Timeline extends Element {$/;"	c
TimelineBuilder	pilas-engine/declaraciones/phaser.d.ts	/^            function TimelineBuilder(manager: Phaser.Tweens.TweenManager, config: Phaser.Types.Tweens.TimelineBuilderConfig): Phaser.Tweens.Timeline;$/;"	f
TimelineBuilderConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type TimelineBuilderConfig = {$/;"	t
TimelineKeyframe	pilas-engine/libs/spriter.ts	/^class TimelineKeyframe extends Keyframe {$/;"	c
TimelineOnCompleteCallback	pilas-engine/declaraciones/phaser.d.ts	/^            type TimelineOnCompleteCallback = (timeline: Phaser.Tweens.Timeline, ...param: any[])=>void;$/;"	t
TimelineOnLoopCallback	pilas-engine/declaraciones/phaser.d.ts	/^            type TimelineOnLoopCallback = (timeline: Phaser.Tweens.Timeline, ...param: any[])=>void;$/;"	t
TimelineOnStartCallback	pilas-engine/declaraciones/phaser.d.ts	/^            type TimelineOnStartCallback = (timeline: Phaser.Tweens.Timeline, ...param: any[])=>void;$/;"	t
TimelineOnUpdateCallback	pilas-engine/declaraciones/phaser.d.ts	/^            type TimelineOnUpdateCallback = (timeline: Phaser.Tweens.Timeline, ...param: any[])=>void;$/;"	t
TimelineOnYoyoCallback	pilas-engine/declaraciones/phaser.d.ts	/^            type TimelineOnYoyoCallback = (timeline: Phaser.Tweens.Timeline, ...param: any[])=>void;$/;"	t
TimerEvent	pilas-engine/declaraciones/phaser.d.ts	/^        class TimerEvent {$/;"	c
TimerEventConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type TimerEventConfig = {$/;"	t
Tint	pilas-engine/declaraciones/phaser.d.ts	/^            interface Tint {$/;"	i
TintConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type TintConfig = {$/;"	t
Tipo	pilas-engine/animacion_de_propiedad.ts	/^enum Tipo {$/;"	e
To	pilas-engine/declaraciones/phaser.d.ts	/^            function To(value: number, gap: number, start?: number, divide?: boolean): number;$/;"	f
To	pilas-engine/declaraciones/phaser.d.ts	/^            namespace To {$/;"	c
ToJSON	pilas-engine/declaraciones/phaser.d.ts	/^            interface ToJSON {$/;"	i
ToXY	pilas-engine/declaraciones/phaser.d.ts	/^        function ToXY(index: number, width: number, height: number, out?: Phaser.Math.Vector2): Phaser.Math.Vector2;$/;"	f
ToggleVisible	pilas-engine/declaraciones/phaser.d.ts	/^        function ToggleVisible<G extends Phaser.GameObjects.GameObject[]>(items: G): G;$/;"	f
TopCenter	pilas-engine/declaraciones/phaser.d.ts	/^                function TopCenter<G extends Phaser.GameObjects.GameObject>(gameObject: G, alignIn: Phaser.GameObjects.GameObject, offsetX?: number, offsetY?: number): G;$/;"	f
TopCenter	pilas-engine/declaraciones/phaser.d.ts	/^                function TopCenter<G extends Phaser.GameObjects.GameObject>(gameObject: G, alignTo: Phaser.GameObjects.GameObject, offsetX?: number, offsetY?: number): G;$/;"	f
TopLeft	pilas-engine/declaraciones/phaser.d.ts	/^                function TopLeft<G extends Phaser.GameObjects.GameObject>(gameObject: G, alignIn: Phaser.GameObjects.GameObject, offsetX?: number, offsetY?: number): G;$/;"	f
TopLeft	pilas-engine/declaraciones/phaser.d.ts	/^                function TopLeft<G extends Phaser.GameObjects.GameObject>(gameObject: G, alignTo: Phaser.GameObjects.GameObject, offsetX?: number, offsetY?: number): G;$/;"	f
TopRight	pilas-engine/declaraciones/phaser.d.ts	/^                function TopRight<G extends Phaser.GameObjects.GameObject>(gameObject: G, alignIn: Phaser.GameObjects.GameObject, offsetX?: number, offsetY?: number): G;$/;"	f
TopRight	pilas-engine/declaraciones/phaser.d.ts	/^                function TopRight<G extends Phaser.GameObjects.GameObject>(gameObject: G, alignTo: Phaser.GameObjects.GameObject, offsetX?: number, offsetY?: number): G;$/;"	f
Touch	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Touch {$/;"	c
TouchAction	pilas-engine/declaraciones/phaser.d.ts	/^            function TouchAction(canvas: HTMLCanvasElement, value?: string): HTMLCanvasElement;$/;"	f
TouchInputConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type TouchInputConfig = {$/;"	t
TouchManager	pilas-engine/declaraciones/phaser.d.ts	/^            class TouchManager {$/;"	c
Transform	pilas-engine/declaraciones/phaser.d.ts	/^                interface Transform {$/;"	i
Transform	pilas-engine/declaraciones/phaser.d.ts	/^            interface Transform {$/;"	i
TransformMatrix	pilas-engine/declaraciones/phaser.d.ts	/^            class TransformMatrix {$/;"	c
TransformXY	pilas-engine/declaraciones/phaser.d.ts	/^        function TransformXY(x: number, y: number, positionX: number, positionY: number, rotation: number, scaleX: number, scaleY: number, output?: Phaser.Math.Vector2 | Phaser.Geom.Point | object): Phaser.Math.Vector2 | Phaser.Geom.Point | object;$/;"	f
Translate	pilas-engine/declaraciones/phaser.d.ts	/^                function Translate<T>(matrix?: T[][], x?: number, y?: number): T[][];$/;"	f
TransposeMatrix	pilas-engine/declaraciones/phaser.d.ts	/^                function TransposeMatrix<T>(array?: T[][]): T[][];$/;"	f
Triangle	pilas-engine/declaraciones/phaser.d.ts	/^        class Triangle extends Phaser.GameObjects.Shape {$/;"	c
Triangle	pilas-engine/declaraciones/phaser.d.ts	/^        class Triangle {$/;"	c
TriangleToCircle	pilas-engine/declaraciones/phaser.d.ts	/^            function TriangleToCircle(triangle: Phaser.Geom.Triangle, circle: Phaser.Geom.Circle): boolean;$/;"	f
TriangleToLine	pilas-engine/declaraciones/phaser.d.ts	/^            function TriangleToLine(triangle: Phaser.Geom.Triangle, line: Phaser.Geom.Line): boolean;$/;"	f
TriangleToTriangle	pilas-engine/declaraciones/phaser.d.ts	/^            function TriangleToTriangle(triangleA: Phaser.Geom.Triangle, triangleB: Phaser.Geom.Triangle): boolean;$/;"	f
Tween	pilas-engine/declaraciones/phaser.d.ts	/^        class Tween extends Phaser.Events.EventEmitter {$/;"	c
TweenBuilder	pilas-engine/declaraciones/phaser.d.ts	/^            function TweenBuilder(parent: Phaser.Tweens.TweenManager | Phaser.Tweens.Timeline, config: Phaser.Types.Tweens.TweenBuilderConfig | object, defaults: Phaser.Types.Tweens.TweenConfigDefaults): Phaser.Tweens.Tween;$/;"	f
TweenBuilderConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type TweenBuilderConfig = {$/;"	t
TweenConfigDefaults	pilas-engine/declaraciones/phaser.d.ts	/^            type TweenConfigDefaults = {$/;"	t
TweenData	pilas-engine/declaraciones/phaser.d.ts	/^        function TweenData(target: any, index: number, key: string, getEnd: Function, getStart: Function, getActive: Function, ease: Function, delay: number, duration: number, yoyo: boolean, hold: number, repeat: number, repeatDelay: number, flipX: boolean, flipY: boolean): Phaser.Types.Tweens.TweenDataConfig;$/;"	f
TweenDataConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type TweenDataConfig = {$/;"	t
TweenDataGenConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type TweenDataGenConfig = {$/;"	t
TweenManager	pilas-engine/declaraciones/phaser.d.ts	/^        class TweenManager {$/;"	c
TweenOnActiveCallback	pilas-engine/declaraciones/phaser.d.ts	/^            type TweenOnActiveCallback = (tween: Phaser.Tweens.Tween, target: any, ...param: any[])=>void;$/;"	t
TweenOnCompleteCallback	pilas-engine/declaraciones/phaser.d.ts	/^            type TweenOnCompleteCallback = (tween: Phaser.Tweens.Tween, targets: any[], ...param: any[])=>void;$/;"	t
TweenOnLoopCallback	pilas-engine/declaraciones/phaser.d.ts	/^            type TweenOnLoopCallback = (tween: Phaser.Tweens.Tween, targets: any[], ...param: any[])=>void;$/;"	t
TweenOnRepeatCallback	pilas-engine/declaraciones/phaser.d.ts	/^            type TweenOnRepeatCallback = (tween: Phaser.Tweens.Tween, target: any, ...param: any[])=>void;$/;"	t
TweenOnStartCallback	pilas-engine/declaraciones/phaser.d.ts	/^            type TweenOnStartCallback = (tween: Phaser.Tweens.Tween, targets: any[], ...param: any[])=>void;$/;"	t
TweenOnStopCallback	pilas-engine/declaraciones/phaser.d.ts	/^            type TweenOnStopCallback = (tween: Phaser.Tweens.Tween, targets: any[], ...param: any[])=>void;$/;"	t
TweenOnUpdateCallback	pilas-engine/declaraciones/phaser.d.ts	/^            type TweenOnUpdateCallback = (tween: Phaser.Tweens.Tween, target: any, ...param: any[])=>void;$/;"	t
TweenOnYoyoCallback	pilas-engine/declaraciones/phaser.d.ts	/^            type TweenOnYoyoCallback = (tween: Phaser.Tweens.Tween, target: any, ...param: any[])=>void;$/;"	t
TweenPropConfig	pilas-engine/declaraciones/phaser.d.ts	/^            type TweenPropConfig = {$/;"	t
Tweens	pilas-engine/declaraciones/phaser.d.ts	/^        namespace Tweens {$/;"	c
Tweens	pilas-engine/declaraciones/phaser.d.ts	/^    namespace Tweens {$/;"	c
Types	pilas-engine/declaraciones/phaser.d.ts	/^    namespace Types {$/;"	c
UP	pilas-engine/declaraciones/phaser.d.ts	/^            static readonly UP: Phaser.Math.Vector2;$/;"	m
UP	pilas-engine/declaraciones/phaser.d.ts	/^            static readonly UP: Phaser.Math.Vector3;$/;"	m
UTILITY_PIPELINE	pilas-engine/declaraciones/phaser.d.ts	/^                UTILITY_PIPELINE: Phaser.Renderer.WebGL.Pipelines.UtilityPipeline;$/;"	m
UUID	pilas-engine/declaraciones/phaser.d.ts	/^            function UUID(): string;$/;"	f
UV	pilas-engine/declaraciones/phaser.d.ts	/^                type UV = {$/;"	t
UnityAtlasFile	pilas-engine/declaraciones/phaser.d.ts	/^            class UnityAtlasFile extends Phaser.Loader.MultiFile {$/;"	c
UnityAtlasFileConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type UnityAtlasFileConfig = {$/;"	t
UpDuration	pilas-engine/declaraciones/phaser.d.ts	/^            function UpDuration(key: Phaser.Input.Keyboard.Key, duration?: number): boolean;$/;"	f
UpdateList	pilas-engine/declaraciones/phaser.d.ts	/^        class UpdateList extends Phaser.Structs.ProcessQueue<Phaser.GameObjects.GameObject> {$/;"	c
UppercaseFirst	pilas-engine/declaraciones/phaser.d.ts	/^            function UppercaseFirst(str: string): string;$/;"	f
UserSelect	pilas-engine/declaraciones/phaser.d.ts	/^            function UserSelect(canvas: HTMLCanvasElement, value?: string): HTMLCanvasElement;$/;"	f
Utilidades	pilas-engine/utilidades.ts	/^class Utilidades {$/;"	c
UtilityPipeline	pilas-engine/declaraciones/phaser.d.ts	/^                class UtilityPipeline extends Phaser.Renderer.WebGL.WebGLPipeline {$/;"	c
Utils	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Utils {$/;"	c
Utils	pilas-engine/declaraciones/phaser.d.ts	/^    namespace Utils {$/;"	c
ValueToColor	pilas-engine/declaraciones/phaser.d.ts	/^            static ValueToColor(input: string | number | Phaser.Types.Display.InputColorObject): Phaser.Display.Color;$/;"	m
VarDef	pilas-engine/libs/spriter.ts	/^class VarDef extends Element {$/;"	c
VarDefs	pilas-engine/libs/spriter.ts	/^class VarDefs extends Element {$/;"	c
VariableObject	pilas-engine/libs/spriter.ts	/^class VariableObject extends BaseObject {$/;"	c
VariableTimelineKeyframe	pilas-engine/libs/spriter.ts	/^class VariableTimelineKeyframe extends TimelineKeyframe {$/;"	c
Varline	pilas-engine/libs/spriter.ts	/^class Varline extends Element {$/;"	c
VarlineKeyframe	pilas-engine/libs/spriter.ts	/^class VarlineKeyframe extends Keyframe {$/;"	c
Vector	pilas-engine/libs/spriter.ts	/^class Vector {$/;"	c
Vector2	pilas-engine/declaraciones/phaser.d.ts	/^        class Vector2 {$/;"	c
Vector2Like	pilas-engine/declaraciones/phaser.d.ts	/^            type Vector2Like = {$/;"	t
Vector3	pilas-engine/declaraciones/phaser.d.ts	/^        class Vector3 {$/;"	c
Vector3Like	pilas-engine/declaraciones/phaser.d.ts	/^            type Vector3Like = {$/;"	t
Vector4	pilas-engine/declaraciones/phaser.d.ts	/^        class Vector4 {$/;"	c
Vector4Like	pilas-engine/declaraciones/phaser.d.ts	/^            type Vector4Like = {$/;"	t
Velocity	pilas-engine/declaraciones/phaser.d.ts	/^                interface Velocity {$/;"	i
Vertex	pilas-engine/declaraciones/phaser.d.ts	/^            class Vertex extends Phaser.Math.Vector3 {$/;"	c
Vertex	pilas-engine/declaraciones/phaser.d.ts	/^            type Vertex = {$/;"	t
Video	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Video {$/;"	c
Video	pilas-engine/declaraciones/phaser.d.ts	/^        class Video extends Phaser.GameObjects.GameObject implements Phaser.GameObjects.Components.Alpha, Phaser.GameObjects.Components.BlendMode, Phaser.GameObjects.Components.Depth, Phaser.GameObjects.Components.Flip, Phaser.GameObjects.Components.GetBounds, Phaser.GameObjects.Components.Mask, Phaser.GameObjects.Components.Origin, Phaser.GameObjects.Components.Pipeline, Phaser.GameObjects.Components.ScrollFactor, Phaser.GameObjects.Components.Size, Phaser.GameObjects.Components.TextureCrop, Phaser.GameObjects.Components.Tint, Phaser.GameObjects.Components.Transform, Phaser.GameObjects.Components.Visible {$/;"	c
Video	pilas-engine/declaraciones/phaser.d.ts	/^        type Video = {$/;"	t
VideoConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type VideoConfig = Phaser.Types.GameObjects.GameObjectConfig & {$/;"	t
VideoFile	pilas-engine/declaraciones/phaser.d.ts	/^            class VideoFile extends Phaser.Loader.File {$/;"	c
VideoFileConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type VideoFileConfig = {$/;"	t
VisibilityHandler	pilas-engine/declaraciones/phaser.d.ts	/^        function VisibilityHandler(game: Phaser.Game): void;$/;"	f
Visible	pilas-engine/declaraciones/phaser.d.ts	/^            interface Visible {$/;"	i
WIDTH_CONTROLS_HEIGHT	pilas-engine/declaraciones/phaser.d.ts	/^            static readonly WIDTH_CONTROLS_HEIGHT: number;$/;"	m
WebAudioSound	pilas-engine/declaraciones/phaser.d.ts	/^        class WebAudioSound extends Phaser.Sound.BaseSound {$/;"	c
WebAudioSoundManager	pilas-engine/declaraciones/phaser.d.ts	/^        class WebAudioSoundManager extends Phaser.Sound.BaseSoundManager {$/;"	c
WebGL	pilas-engine/declaraciones/phaser.d.ts	/^            function WebGL(sourceCanvas: HTMLCanvasElement, config: Phaser.Types.Renderer.Snapshot.SnapshotState): void;$/;"	f
WebGL	pilas-engine/declaraciones/phaser.d.ts	/^            namespace WebGL {$/;"	c
WebGL	pilas-engine/declaraciones/phaser.d.ts	/^        namespace WebGL {$/;"	c
WebGLConst	pilas-engine/declaraciones/phaser.d.ts	/^                type WebGLConst = {$/;"	t
WebGLPipeline	pilas-engine/declaraciones/phaser.d.ts	/^            class WebGLPipeline extends Phaser.Events.EventEmitter {$/;"	c
WebGLPipelineAttribute	pilas-engine/declaraciones/phaser.d.ts	/^                type WebGLPipelineAttribute = {$/;"	t
WebGLPipelineAttributeConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type WebGLPipelineAttributeConfig = {$/;"	t
WebGLPipelineConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type WebGLPipelineConfig = {$/;"	t
WebGLPipelineShaderConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type WebGLPipelineShaderConfig = {$/;"	t
WebGLPipelineUniformsConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type WebGLPipelineUniformsConfig = {$/;"	t
WebGLRenderer	pilas-engine/declaraciones/phaser.d.ts	/^            class WebGLRenderer extends Phaser.Events.EventEmitter {$/;"	c
WebGLShader	pilas-engine/declaraciones/phaser.d.ts	/^            class WebGLShader {$/;"	c
WebGLTextureCompression	pilas-engine/declaraciones/phaser.d.ts	/^                type WebGLTextureCompression = {$/;"	t
WeightedRandomize	pilas-engine/declaraciones/phaser.d.ts	/^            function WeightedRandomize(tileX: number, tileY: number, width: number, height: number, weightedIndexes: object[], layer: Phaser.Tilemaps.LayerData): void;$/;"	f
Width	pilas-engine/declaraciones/phaser.d.ts	/^            static Width(line: Phaser.Geom.Line): number;$/;"	m
WidthHeight	pilas-engine/declaraciones/phaser.d.ts	/^            type WidthHeight = {$/;"	t
Within	pilas-engine/declaraciones/phaser.d.ts	/^        function Within(a: number, b: number, tolerance: number): boolean;$/;"	f
World	pilas-engine/declaraciones/phaser.d.ts	/^            class World extends Phaser.Events.EventEmitter {$/;"	c
WorldToTileX	pilas-engine/declaraciones/phaser.d.ts	/^            function WorldToTileX(worldX: number, snapToFloor: boolean, camera: Phaser.Cameras.Scene2D.Camera, layer: Phaser.Tilemaps.LayerData): number;$/;"	f
WorldToTileXY	pilas-engine/declaraciones/phaser.d.ts	/^            function WorldToTileXY(worldX: number, worldY: number, snapToFloor: boolean, point: Phaser.Math.Vector2, camera: Phaser.Cameras.Scene2D.Camera, layer: Phaser.Tilemaps.LayerData): Phaser.Math.Vector2;$/;"	f
WorldToTileY	pilas-engine/declaraciones/phaser.d.ts	/^            function WorldToTileY(worldY: number, snapToFloor: boolean, camera: Phaser.Cameras.Scene2D.Camera, layer: Phaser.Tilemaps.LayerData): number;$/;"	f
Wrap	pilas-engine/declaraciones/phaser.d.ts	/^            function Wrap(angle: number): number;$/;"	f
Wrap	pilas-engine/declaraciones/phaser.d.ts	/^        function Wrap(value: number, min: number, max: number): number;$/;"	f
WrapDegrees	pilas-engine/declaraciones/phaser.d.ts	/^            function WrapDegrees(angle: number): number;$/;"	f
WrapInRectangle	pilas-engine/declaraciones/phaser.d.ts	/^        function WrapInRectangle<G extends Phaser.GameObjects.GameObject[]>(items: G, rect: Phaser.Geom.Rectangle, padding?: number): G;$/;"	f
X	pilas-engine/declaraciones/phaser.d.ts	/^                X: boolean;$/;"	m
XBOX_360	pilas-engine/declaraciones/phaser.d.ts	/^                namespace XBOX_360 {$/;"	c
XHRLoader	pilas-engine/declaraciones/phaser.d.ts	/^        function XHRLoader(file: Phaser.Loader.File, globalXHRSettings: Phaser.Types.Loader.XHRSettingsObject): XMLHttpRequest;$/;"	f
XHRSettings	pilas-engine/declaraciones/phaser.d.ts	/^        function XHRSettings(responseType?: XMLHttpRequestResponseType, async?: boolean, user?: string, password?: string, timeout?: number, withCredentials?: boolean): Phaser.Types.Loader.XHRSettingsObject;$/;"	f
XHRSettingsObject	pilas-engine/declaraciones/phaser.d.ts	/^            type XHRSettingsObject = {$/;"	t
XMLFile	pilas-engine/declaraciones/phaser.d.ts	/^            class XMLFile extends Phaser.Loader.File {$/;"	c
XMLFileConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type XMLFileConfig = {$/;"	t
Y	pilas-engine/declaraciones/phaser.d.ts	/^                Y: boolean;$/;"	m
ZERO	pilas-engine/declaraciones/phaser.d.ts	/^            static readonly ZERO: Phaser.Math.Vector2;$/;"	m
ZERO	pilas-engine/declaraciones/phaser.d.ts	/^            static readonly ZERO: Phaser.Math.Vector3;$/;"	m
Zone	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Zone {$/;"	c
Zone	pilas-engine/declaraciones/phaser.d.ts	/^        class Zone extends Phaser.GameObjects.GameObject implements Phaser.GameObjects.Components.Depth, Phaser.GameObjects.Components.GetBounds, Phaser.GameObjects.Components.Origin, Phaser.GameObjects.Components.Transform, Phaser.GameObjects.Components.ScrollFactor, Phaser.GameObjects.Components.Visible {$/;"	c
ZoneConfig	pilas-engine/declaraciones/phaser.d.ts	/^                type ZoneConfig = Phaser.Types.GameObjects.GameObjectConfig & {$/;"	t
Zones	pilas-engine/declaraciones/phaser.d.ts	/^            namespace Zones {$/;"	c
Zoom	pilas-engine/declaraciones/phaser.d.ts	/^                class Zoom {$/;"	c
Zoom	pilas-engine/declaraciones/phaser.d.ts	/^        enum Zoom {$/;"	e
ZoomType	pilas-engine/declaraciones/phaser.d.ts	/^        type ZoomType = Phaser.Scale.Zoom;$/;"	t
__	pilas-engine/modos/modo_cargador.ts	/^              function __() { this.constructor = d; }$/;"	f
__deprecated_ModoEditor	pilas-engine/modos/modo_deprecated.ts	/^class __deprecated_ModoEditor extends Modo {$/;"	c
__extends	pilas-engine/modos/modo_cargador.ts	/^          __extends(principal, _super);$/;"	m
_abajo	pilas-engine/control.ts	/^  private _abajo: any;$/;"	m
_actor_visor_observables	pilas-engine/escenas/-escena-base.ts	/^  private _actor_visor_observables: any;$/;"	m
_adoptar_siguiente_comportamiento	pilas-engine/actores/-actor-base.ts	/^  private _adoptar_siguiente_comportamiento() {$/;"	m
_alto	pilas-engine/pilas.ts	/^  _alto: number;$/;"	m
_ancho	pilas-engine/pilas.ts	/^  _ancho: number;$/;"	m
_animacion_en_curso	pilas-engine/actores/-actor-base.ts	/^  private _animacion_en_curso: string = "";$/;"	m
_anterior_valor_del_modo_posicion_activado	pilas-engine/modos/modo_pausa.ts	/^  _anterior_valor_del_modo_posicion_activado: boolean;$/;"	m
_arriba	pilas-engine/control.ts	/^  private _arriba: any;$/;"	m
_bloques_actualizar	pilas-engine/actores/-actor-base.ts	/^  _bloques_actualizar() {}$/;"	m
_bloques_al_actualizar	pilas-engine/escenas/-escena-base.ts	/^  _bloques_al_actualizar() {}$/;"	m
_bloques_cada_segundo	pilas-engine/actores/-actor-base.ts	/^  _bloques_cada_segundo(segundos_transcurridos: number) {}$/;"	m
_bloques_cada_segundo	pilas-engine/escenas/-escena-base.ts	/^  _bloques_cada_segundo(segundos: number) {}$/;"	m
_bloques_cuando_hace_click	pilas-engine/actores/-actor-base.ts	/^  _bloques_cuando_hace_click(x: number, y: number, evento: any) {}$/;"	m
_bloques_cuando_hace_click_en_la_pantalla	pilas-engine/actores/-actor-base.ts	/^  _bloques_cuando_hace_click_en_la_pantalla(x: number, y: number, evento: any) {}$/;"	m
_bloques_iniciar	pilas-engine/actores/-actor-base.ts	/^  _bloques_iniciar() {}$/;"	m
_canvas	pilas-engine/actores/-pizarra-base.ts	/^  _canvas: any;$/;"	m
_color_de_texto	pilas-engine/actores/-actor-base.ts	/^  _color_de_texto: string = "white";$/;"	m
_comportamiento_actual	pilas-engine/actores/-actor-base.ts	/^  _comportamiento_actual: Comportamiento = null;$/;"	m
_comportamientos	pilas-engine/actores/-actor-base.ts	/^  _comportamientos: { nombre_del_comportamiento: string; argumentos: any }[];$/;"	m
_comportamientos	pilas-engine/comportamientos.ts	/^  _comportamientos: any[];$/;"	m
_delta	pilas-engine/modos/modo_ejecucion.ts	/^  _delta: number;$/;"	m
_derecha	pilas-engine/control.ts	/^  private _derecha: any;$/;"	m
_dialogo	pilas-engine/actores/-actor-base.ts	/^  _dialogo: any = null;$/;"	m
_es_texto	pilas-engine/actores/-actor-base.ts	/^  private _es_texto: boolean = false;$/;"	m
_escena_en_ejecucion	pilas-engine/modos/modo_ejecucion.ts	/^  _escena_en_ejecucion: any = null;$/;"	m
_espacio	pilas-engine/control.ts	/^  private _espacio: any;$/;"	m
_estado	pilas-engine/automata.ts	/^  _estado: string;$/;"	m
_etiqueta	pilas-engine/actores/-actor-base.ts	/^  private _etiqueta: string = null;$/;"	m
_figura_alto	pilas-engine/actores/-actor-base.ts	/^  private _figura_alto: number;$/;"	m
_figura_ancho	pilas-engine/actores/-actor-base.ts	/^  private _figura_ancho: number;$/;"	m
_figura_radio	pilas-engine/actores/-actor-base.ts	/^  private _figura_radio: number;$/;"	m
_fondo	pilas-engine/actores/-actor-base.ts	/^  _fondo: any = null;$/;"	m
_fondo_imagen	pilas-engine/actores/-actor-base.ts	/^  _fondo_imagen: string = "";$/;"	m
_fuente	pilas-engine/actores/-actor-base.ts	/^  _fuente: string = "color-blanco-con-sombra";$/;"	m
_gravedad_x	pilas-engine/escenas/-escena-base.ts	/^  private _gravedad_x: number = 0;$/;"	m
_gravedad_y	pilas-engine/escenas/-escena-base.ts	/^  private _gravedad_y: number = 1;$/;"	m
_habilidades	pilas-engine/actores/-actor-base.ts	/^  _habilidades: any[];$/;"	m
_habilidades	pilas-engine/habilidades.ts	/^  _habilidades: any[];$/;"	m
_id	pilas-engine/actores/-actor-base.ts	/^  private _id: any;$/;"	m
_izquierda	pilas-engine/control.ts	/^  private _izquierda: any;$/;"	m
_keyStr	pilas-engine/modos/modo_cargador.ts	/^      _keyStr: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+\/=",$/;"	m
_laser_entre_entidades	pilas-engine/modos/modo.ts	/^  _laser_entre_entidades(x1, y1, x2, y2, actor: Actor): Intersecci√≥n[] {$/;"	m
_lista_de_colores	pilas-engine/colores.ts	/^  _lista_de_colores: Color[];$/;"	m
_nombre	pilas-engine/actores/-actor-base.ts	/^  private _nombre: any;$/;"	m
_nombre_del_fondo	pilas-engine/modos/modo.ts	/^  _nombre_del_fondo: string = "";$/;"	m
_observables	pilas-engine/escenas/-escena-base.ts	/^  private _observables: any;$/;"	m
_obtener_cuerpos_desde_clave	pilas-engine/modos/modo_ejecucion.ts	/^  _obtener_cuerpos_desde_clave(clave, cuerpos_estaticos) {$/;"	m
_reportar_colision_activa_entre_figuras	pilas-engine/modos/modo_ejecucion.ts	/^  private _reportar_colision_activa_entre_figuras(figura_1, figura_2) {$/;"	m
_reportar_colision_entre_figuras	pilas-engine/modos/modo_ejecucion.ts	/^  private _reportar_colision_entre_figuras(figura_1, figura_2, colision=null) {$/;"	m
_reportar_fin_de_colision_entre_figuras	pilas-engine/modos/modo_ejecucion.ts	/^  private _reportar_fin_de_colision_entre_figuras(figura_1, figura_2) {$/;"	m
_resetZoom	pilas-engine/declaraciones/phaser.d.ts	/^            readonly _resetZoom: boolean;$/;"	m
_simulaciones	pilas-engine/control.ts	/^  private _simulaciones: any;$/;"	m
_sonidos	pilas-engine/sonidos.ts	/^  _sonidos: [string?];$/;"	m
_sonidos_en_reproduccion	pilas-engine/escenas/-escena-base.ts	/^  private _sonidos_en_reproduccion: any;$/;"	m
_sonidos_para_reproducir	pilas-engine/escenas/-escena-base.ts	/^  private _sonidos_para_reproducir: any[];$/;"	m
_sortKey	pilas-engine/declaraciones/phaser.d.ts	/^            _sortKey: string;$/;"	m
_texto	pilas-engine/actores/-actor-base.ts	/^  _texto: any;$/;"	m
_texto_con_borde	pilas-engine/actores/-actor-base.ts	/^  _texto_con_borde: boolean = false;$/;"	m
_time	pilas-engine/modos/modo_ejecucion.ts	/^  _time: number;$/;"	m
_vivo	pilas-engine/actores/-actor-base.ts	/^  _vivo: boolean = true;$/;"	m
a	pilas-engine/declaraciones/phaser.d.ts	/^                a: number;$/;"	m
abajo	pilas-engine/actores/-actor-base.ts	/^      abajo: 1,$/;"	m
abajo	pilas-engine/control.ts	/^      abajo: false,$/;"	m
abajo	pilas-engine/control.ts	/^  get abajo() {$/;"	m
abajo	pilas-engine/control.ts	/^  get abajo(): boolean {$/;"	m
accelX	pilas-engine/declaraciones/phaser.d.ts	/^                accelX: number;$/;"	m
accelY	pilas-engine/declaraciones/phaser.d.ts	/^                accelY: number;$/;"	m
accelerateTo	pilas-engine/declaraciones/phaser.d.ts	/^                accelerateTo(gameObject: Phaser.GameObjects.GameObject, x: number, y: number, speed?: number, xSpeedMax?: number, ySpeedMax?: number): number;$/;"	m
accelerateToObject	pilas-engine/declaraciones/phaser.d.ts	/^                accelerateToObject(gameObject: Phaser.GameObjects.GameObject, destination: Phaser.GameObjects.GameObject, speed?: number, xSpeedMax?: number, ySpeedMax?: number): number;$/;"	m
acceleration	pilas-engine/declaraciones/phaser.d.ts	/^                acceleration: Phaser.Math.Vector2;$/;"	m
acceleration	pilas-engine/declaraciones/phaser.d.ts	/^                acceleration: boolean;$/;"	m
accelerationX	pilas-engine/declaraciones/phaser.d.ts	/^                accelerationX: Phaser.GameObjects.Particles.EmitterOp;$/;"	m
accelerationX	pilas-engine/declaraciones/phaser.d.ts	/^                accelerationX: number;$/;"	m
accelerationY	pilas-engine/declaraciones/phaser.d.ts	/^                accelerationY: Phaser.GameObjects.Particles.EmitterOp;$/;"	m
accelerationY	pilas-engine/declaraciones/phaser.d.ts	/^                accelerationY: number;$/;"	m
acceso_incorrecto	pilas-engine/utilidades.ts	/^  acceso_incorrecto(v) {$/;"	m
accumulator	pilas-engine/declaraciones/phaser.d.ts	/^            accumulator: number;$/;"	m
aceituna	pilas-engine/actores.ts	/^  aceituna() {$/;"	m
aceituna	pilas-engine/actores/aceituna.ts	/^class aceituna extends Actor {$/;"	c
activar	pilas-engine/actores/boton_activable.ts	/^  activar() {$/;"	m
activar_clicks	pilas-engine/actores/-actor-base.ts	/^  activar_clicks() {$/;"	m
active	pilas-engine/declaraciones/phaser.d.ts	/^                active: boolean;$/;"	m
active	pilas-engine/declaraciones/phaser.d.ts	/^            active: boolean;$/;"	m
activeContacts	pilas-engine/declaraciones/phaser.d.ts	/^                    activeContacts: MatterJS.Vector[];$/;"	m
activePointer	pilas-engine/declaraciones/phaser.d.ts	/^            activePointer: Phaser.Input.Pointer;$/;"	m
activePointer	pilas-engine/declaraciones/phaser.d.ts	/^            readonly activePointer: Phaser.Input.Pointer;$/;"	m
activePointers	pilas-engine/pilas.ts	/^        activePointers: 6,$/;"	m
actor	pilas-engine/actores.ts	/^  actor() {$/;"	m
actor	pilas-engine/actores/actor.ts	/^class actor extends Actor {$/;"	c
actor	pilas-engine/animacion_de_propiedad.ts	/^  actor: Actor;$/;"	m
actor	pilas-engine/automata.ts	/^  actor: Actor;$/;"	m
actor	pilas-engine/comportamientos/-comportamiento.ts	/^  actor: Actor;$/;"	m
actor	pilas-engine/habilidades/-habilidad.ts	/^  actor: Actor;$/;"	m
actor	pilas-engine/laser.ts	/^  actor: Actor;$/;"	m
actor	pilas-engine/modos/modo.ts	/^          actor: null,$/;"	m
actor	pilas-engine/pilas.ts	/^          actor: col.body.gameObject.actor,$/;"	m
actor_basico	pilas-engine/actores.ts	/^  actor_basico(imagen: string) {$/;"	m
actor_seleccionado	pilas-engine/modos/modo.ts	/^  actor_seleccionado: any;$/;"	m
actor_seleccionado	pilas-engine/modos/modo_deprecated.ts	/^  actor_seleccionado: any;$/;"	m
actor_seleccionado	pilas-engine/modos/modo_editor.ts	/^  actor_seleccionado: any;$/;"	m
actores	pilas-engine/escenas/-escena-base.ts	/^  actores: Actor[];$/;"	m
actores	pilas-engine/historia.ts	/^      actores: escena_actual.actores.filter(a => a.esta_vivo()).map(e => e.serializar()),$/;"	m
actores	pilas-engine/modos/modo.ts	/^  actores: any;$/;"	m
actores	pilas-engine/modos/modo_cargador.ts	/^              actores: [],$/;"	m
actores	pilas-engine/modos/modo_cargador.ts	/^            actores: []$/;"	m
actores	pilas-engine/pilas.ts	/^  actores: Actores;$/;"	m
actualFps	pilas-engine/declaraciones/phaser.d.ts	/^            readonly actualFps: number;$/;"	m
actualizar	pilas-engine/actores/-actor-base.ts	/^  actualizar() {}$/;"	m
actualizar	pilas-engine/actores/-actor-texto-base.ts	/^  actualizar() {}$/;"	m
actualizar	pilas-engine/actores/-actor.ts	/^  actualizar() {}$/;"	m
actualizar	pilas-engine/actores/-pizarra-base.ts	/^  actualizar() {}$/;"	m
actualizar	pilas-engine/actores/actor.ts	/^  actualizar() {}$/;"	m
actualizar	pilas-engine/actores/barra_de_energia.ts	/^  actualizar() {$/;"	m
actualizar	pilas-engine/actores/boton_abajo.ts	/^  actualizar() {$/;"	m
actualizar	pilas-engine/actores/boton_arriba.ts	/^  actualizar() {$/;"	m
actualizar	pilas-engine/actores/boton_derecha.ts	/^  actualizar() {$/;"	m
actualizar	pilas-engine/actores/boton_espacio.ts	/^  actualizar() {$/;"	m
actualizar	pilas-engine/actores/boton_izquierda.ts	/^  actualizar() {$/;"	m
actualizar	pilas-engine/actores/chispa.ts	/^  actualizar() {}$/;"	m
actualizar	pilas-engine/actores/conejo.ts	/^  actualizar() {$/;"	m
actualizar	pilas-engine/actores/deslizador.ts	/^  actualizar() {$/;"	m
actualizar	pilas-engine/actores/explosion.ts	/^  actualizar() {}$/;"	m
actualizar	pilas-engine/actores/gallina.ts	/^  actualizar() {}$/;"	m
actualizar	pilas-engine/actores/golpe.ts	/^  actualizar() {}$/;"	m
actualizar	pilas-engine/actores/humo.ts	/^  actualizar() {$/;"	m
actualizar	pilas-engine/actores/interruptor_de_gravedad.ts	/^  actualizar() {}$/;"	m
actualizar	pilas-engine/actores/laser.ts	/^  actualizar() {$/;"	m
actualizar	pilas-engine/actores/nave.ts	/^  actualizar() {$/;"	m
actualizar	pilas-engine/actores/nube_animada.ts	/^  actualizar() {$/;"	m
actualizar	pilas-engine/actores/pizarra.ts	/^  actualizar() {}$/;"	m
actualizar	pilas-engine/actores/robot.ts	/^  actualizar() {$/;"	m
actualizar	pilas-engine/automata.ts	/^  actualizar() {$/;"	m
actualizar	pilas-engine/comportamientos/-comportamiento.ts	/^  actualizar(): boolean {$/;"	m
actualizar	pilas-engine/comportamientos/aparecer.ts	/^  actualizar() {$/;"	m
actualizar	pilas-engine/comportamientos/desaparecer.ts	/^  actualizar() {$/;"	m
actualizar	pilas-engine/comportamientos/eliminar.ts	/^  actualizar() {$/;"	m
actualizar	pilas-engine/comportamientos/mover.ts	/^  actualizar() {$/;"	m
actualizar	pilas-engine/escenas/-escena-base.ts	/^  actualizar() {}$/;"	m
actualizar	pilas-engine/escenas/normal.ts	/^  actualizar() {}$/;"	m
actualizar	pilas-engine/habilidades/-habilidad.ts	/^  actualizar() {}$/;"	m
actualizar	pilas-engine/habilidades/arrastrable.ts	/^  actualizar() {}$/;"	m
actualizar	pilas-engine/habilidades/mover-con-el-teclado.ts	/^  actualizar() {$/;"	m
actualizar	pilas-engine/habilidades/oscilar-rotacion.ts	/^  actualizar() {$/;"	m
actualizar	pilas-engine/habilidades/oscilar-transparencia.ts	/^  actualizar() {$/;"	m
actualizar	pilas-engine/habilidades/oscilar-verticalmente.ts	/^  actualizar() {$/;"	m
actualizar	pilas-engine/habilidades/rotar-constantemente.ts	/^  actualizar() {$/;"	m
actualizar	pilas-engine/habilidades/seguir-al-mouse-lentamente.ts	/^  actualizar() {$/;"	m
actualizar	pilas-engine/habilidades/seguir-al-mouse.ts	/^  actualizar() {$/;"	m
actualizar	pilas-engine/modos/modo_cargador.ts	/^                    actualizar() {$/;"	m
actualizar_actor	pilas-engine/escenas/-escena-base.ts	/^  actualizar_actor(actor) {$/;"	m
actualizar_actores	pilas-engine/escenas/-escena-base.ts	/^  actualizar_actores() {$/;"	m
actualizar_animacion	pilas-engine/actores/-actor-base.ts	/^  actualizar_animacion(velocidad = 1) {$/;"	m
actualizar_animacion	pilas-engine/huesos.ts	/^  actualizar_animacion(dt: any) {$/;"	m
actualizar_canvas_fisica	pilas-engine/modos/modo.ts	/^  actualizar_canvas_fisica() {$/;"	m
actualizar_comportamientos	pilas-engine/actores/-actor-base.ts	/^  actualizar_comportamientos() {$/;"	m
actualizar_datos	pilas-engine/modos/actor_en_modo_edicion.ts	/^  actualizar_datos(entidad: any) {$/;"	m
actualizar_datos_de_la_figura	pilas-engine/modos/actor_en_modo_edicion.ts	/^  actualizar_datos_de_la_figura(entidad) {$/;"	m
actualizar_gravedad	pilas-engine/escenas/-escena-base.ts	/^  private actualizar_gravedad() {$/;"	m
actualizar_habilidades	pilas-engine/actores/-actor-base.ts	/^  actualizar_habilidades() {$/;"	m
actualizar_lasers_del_actor	pilas-engine/modos/modo.ts	/^  private actualizar_lasers_del_actor(actor, sprite) {$/;"	m
actualizar_posicion	pilas-engine/huesos.ts	/^  actualizar_posicion(pose) {$/;"	m
actualizar_posicion	pilas-engine/modos/modo.ts	/^  actualizar_posicion(_posicion: any = null) {$/;"	m
actualizar_posicion	pilas-engine/modos/modo_pausa.ts	/^  actualizar_posicion(posicion) {$/;"	m
actualizar_posicion_del_minimap_y_el_borde_de_camara	pilas-engine/modos/modo_deprecated.ts	/^  actualizar_posicion_del_minimap_y_el_borde_de_camara(emitir_evento = true) {$/;"	m
actualizar_sensores	pilas-engine/actores/-actor-base.ts	/^  actualizar_sensores() {$/;"	m
actualizar_sensores_del_actor	pilas-engine/modos/modo.ts	/^  private actualizar_sensores_del_actor(actor, sprite) {$/;"	m
actualizar_sprite_desde_datos	pilas-engine/modos/modo_editor.ts	/^  actualizar_sprite_desde_datos(sprite, actor) {$/;"	m
actualizar_tamano_del_fondo	pilas-engine/actores/-actor-texto-base.ts	/^  private actualizar_tamano_del_fondo() {$/;"	m
actualizar_texto	pilas-engine/actores/puntaje.ts	/^  actualizar_texto() {$/;"	m
add	pilas-engine/declaraciones/phaser.d.ts	/^                add(body: Phaser.Physics.Arcade.Body | Phaser.Physics.Arcade.StaticBody): Phaser.Physics.Arcade.Body | Phaser.Physics.Arcade.StaticBody;$/;"	m
add	pilas-engine/declaraciones/phaser.d.ts	/^                add(name: string, pipeline: Phaser.Renderer.WebGL.WebGLPipeline): Phaser.Renderer.WebGL.WebGLPipeline;$/;"	m
add	pilas-engine/declaraciones/phaser.d.ts	/^                add(object: object | object[]): this;$/;"	m
add	pilas-engine/declaraciones/phaser.d.ts	/^                add(x?: number, y?: number, width?: number, height?: number, makeMain?: boolean, name?: string): Phaser.Cameras.Scene2D.Camera;$/;"	m
add	pilas-engine/declaraciones/phaser.d.ts	/^                add: Phaser.Physics.Arcade.Factory;$/;"	m
add	pilas-engine/declaraciones/phaser.d.ts	/^                add: Phaser.Physics.Matter.Factory;$/;"	m
add	pilas-engine/declaraciones/phaser.d.ts	/^            add(child: Phaser.GameObjects.GameObject | Phaser.GameObjects.GameObject[]): this;$/;"	m
add	pilas-engine/declaraciones/phaser.d.ts	/^            add(child: Phaser.GameObjects.GameObject, addToScene?: boolean): this;$/;"	m
add	pilas-engine/declaraciones/phaser.d.ts	/^            add(child: T, skipCallback?: boolean): T;$/;"	m
add	pilas-engine/declaraciones/phaser.d.ts	/^            add(config: Phaser.Types.Tweens.TweenBuilderConfig | object): Phaser.Tweens.Tween;$/;"	m
add	pilas-engine/declaraciones/phaser.d.ts	/^            add(config: Phaser.Types.Tweens.TweenBuilderConfig | object): this;$/;"	m
add	pilas-engine/declaraciones/phaser.d.ts	/^            add(curve: Phaser.Curves.Curve): this;$/;"	m
add	pilas-engine/declaraciones/phaser.d.ts	/^            add(item: T): Phaser.Structs.ProcessQueue<T>;$/;"	m
add	pilas-engine/declaraciones/phaser.d.ts	/^            add(key: string, animation: Phaser.Animations.Animation): this;$/;"	m
add	pilas-engine/declaraciones/phaser.d.ts	/^            add(key: string, config?: Phaser.Types.Sound.SoundConfig): Phaser.Sound.BaseSound;$/;"	m
add	pilas-engine/declaraciones/phaser.d.ts	/^            add(key: string, config?: Phaser.Types.Sound.SoundConfig): Phaser.Sound.HTML5AudioSound;$/;"	m
add	pilas-engine/declaraciones/phaser.d.ts	/^            add(key: string, config?: Phaser.Types.Sound.SoundConfig): Phaser.Sound.WebAudioSound;$/;"	m
add	pilas-engine/declaraciones/phaser.d.ts	/^            add(key: string, data: any): this;$/;"	m
add	pilas-engine/declaraciones/phaser.d.ts	/^            add(key: string, sceneConfig: Phaser.Scene | Phaser.Types.Scenes.SettingsConfig | Phaser.Types.Scenes.CreateSceneFromObjectConfig | Function, autoStart?: boolean, data?: object): Phaser.Scene;$/;"	m
add	pilas-engine/declaraciones/phaser.d.ts	/^            add(name: number | string, sourceIndex: number, x: number, y: number, width: number, height: number): Phaser.Textures.Frame;$/;"	m
add	pilas-engine/declaraciones/phaser.d.ts	/^            add(src: Phaser.Types.Math.Vector2Like): Phaser.Math.Vector2;$/;"	m
add	pilas-engine/declaraciones/phaser.d.ts	/^            add(v: Phaser.Math.Quaternion | Phaser.Math.Vector4): Phaser.Math.Quaternion;$/;"	m
add	pilas-engine/declaraciones/phaser.d.ts	/^            add(v: Phaser.Math.Vector2 | Phaser.Math.Vector3 | Phaser.Math.Vector4): Phaser.Math.Vector4;$/;"	m
add	pilas-engine/declaraciones/phaser.d.ts	/^            add(v: Phaser.Math.Vector2 | Phaser.Math.Vector3): Phaser.Math.Vector3;$/;"	m
add	pilas-engine/declaraciones/phaser.d.ts	/^            add: Phaser.GameObjects.GameObjectFactory;$/;"	m
add	pilas-engine/declaraciones/phaser.d.ts	/^        add: Phaser.GameObjects.GameObjectFactory;$/;"	m
add	pilas-engine/libs/spriter.ts	/^  add(other: Angle, out: Angle = new Angle()): Angle {$/;"	m
add	pilas-engine/libs/spriter.ts	/^  public add(other: Vector, out: Vector = new Vector()): Vector {$/;"	m
add	pilas-engine/libs/spriter.ts	/^  public static add(a: Vector, b: Vector, out: Vector = new Vector()): Vector {$/;"	m
add	pilas-engine/libs/spriter.ts	/^  static add(a: Angle, b: Angle, out: Angle = new Angle()): Angle {$/;"	m
addAt	pilas-engine/declaraciones/phaser.d.ts	/^            addAt(child: Phaser.GameObjects.GameObject | Phaser.GameObjects.GameObject[], index?: number): this;$/;"	m
addAt	pilas-engine/declaraciones/phaser.d.ts	/^            addAt(child: T, index?: number, skipCallback?: boolean): T;$/;"	m
addAtlas	pilas-engine/declaraciones/phaser.d.ts	/^            addAtlas(key: string, source: HTMLImageElement, data: object, dataSource?: HTMLImageElement | HTMLCanvasElement | HTMLImageElement[] | HTMLCanvasElement[]): Phaser.Textures.Texture;$/;"	m
addAtlasJSONArray	pilas-engine/declaraciones/phaser.d.ts	/^            addAtlasJSONArray(key: string, source: HTMLImageElement | HTMLImageElement[], data: object | object[], dataSource?: HTMLImageElement | HTMLCanvasElement | HTMLImageElement[] | HTMLCanvasElement[]): Phaser.Textures.Texture;$/;"	m
addAtlasJSONHash	pilas-engine/declaraciones/phaser.d.ts	/^            addAtlasJSONHash(key: string, source: HTMLImageElement, data: object, dataSource?: HTMLImageElement | HTMLCanvasElement | HTMLImageElement[] | HTMLCanvasElement[]): Phaser.Textures.Texture;$/;"	m
addAtlasXML	pilas-engine/declaraciones/phaser.d.ts	/^            addAtlasXML(key: string, source: HTMLImageElement, data: object, dataSource?: HTMLImageElement | HTMLCanvasElement | HTMLImageElement[] | HTMLCanvasElement[]): Phaser.Textures.Texture;$/;"	m
addAudioSprite	pilas-engine/declaraciones/phaser.d.ts	/^            addAudioSprite(key: string, config?: Phaser.Types.Sound.SoundConfig): Phaser.Sound.HTML5AudioSound | Phaser.Sound.WebAudioSound;$/;"	m
addBase64	pilas-engine/declaraciones/phaser.d.ts	/^            addBase64(key: string, data: any): this;$/;"	m
addBlendMode	pilas-engine/declaraciones/phaser.d.ts	/^                addBlendMode(func: GLenum[], equation: GLenum): number;$/;"	m
addCallback	pilas-engine/declaraciones/phaser.d.ts	/^            addCallback: Function;$/;"	m
addCanvas	pilas-engine/declaraciones/phaser.d.ts	/^            addCanvas(key: string, source: HTMLCanvasElement, skipCache?: boolean): Phaser.Textures.CanvasTexture;$/;"	m
addCapture	pilas-engine/declaraciones/phaser.d.ts	/^                addCapture(keycode: string | number | number[] | any[]): this;$/;"	m
addCapture	pilas-engine/declaraciones/phaser.d.ts	/^                addCapture(keycode: string | number | number[] | any[]): void;$/;"	m
addCollider	pilas-engine/declaraciones/phaser.d.ts	/^                addCollider(object1: Phaser.Types.Physics.Arcade.ArcadeColliderType, object2: Phaser.Types.Physics.Arcade.ArcadeColliderType, collideCallback?: ArcadePhysicsCallback, processCallback?: ArcadePhysicsCallback, callbackContext?: any): Phaser.Physics.Arcade.Collider;$/;"	m
addCompressedTexture	pilas-engine/declaraciones/phaser.d.ts	/^            addCompressedTexture(key: string, textureData: Phaser.Types.Textures.CompressedTextureData, atlasData?: object): Phaser.Textures.Texture;$/;"	m
addCounter	pilas-engine/declaraciones/phaser.d.ts	/^            addCounter(config: Phaser.Types.Tweens.NumberTweenBuilderConfig): Phaser.Tweens.Tween;$/;"	m
addCustom	pilas-engine/declaraciones/phaser.d.ts	/^            addCustom(key: string): Phaser.Cache.BaseCache;$/;"	m
addEmitter	pilas-engine/declaraciones/phaser.d.ts	/^                addEmitter(emitter: Phaser.GameObjects.Particles.ParticleEmitter): Phaser.GameObjects.Particles.ParticleEmitter;$/;"	m
addEvent	pilas-engine/declaraciones/phaser.d.ts	/^            addEvent(config: Phaser.Time.TimerEvent | Phaser.Types.Time.TimerEventConfig): Phaser.Time.TimerEvent;$/;"	m
addExisting	pilas-engine/declaraciones/phaser.d.ts	/^                addExisting(camera: Phaser.Cameras.Scene2D.Camera, makeMain?: boolean): Phaser.Cameras.Scene2D.Camera;$/;"	m
addFace	pilas-engine/declaraciones/phaser.d.ts	/^            addFace(vertex1: Phaser.Geom.Mesh.Vertex, vertex2: Phaser.Geom.Mesh.Vertex, vertex3: Phaser.Geom.Mesh.Vertex): this;$/;"	m
addFile	pilas-engine/declaraciones/phaser.d.ts	/^            addFile(file: Phaser.Loader.File | Phaser.Loader.File[]): void;$/;"	m
addFrame	pilas-engine/declaraciones/phaser.d.ts	/^            addFrame(config: string | Phaser.Types.Animations.AnimationFrame[]): this;$/;"	m
addFrameAt	pilas-engine/declaraciones/phaser.d.ts	/^            addFrameAt(index: number, config: string | Phaser.Types.Animations.AnimationFrame[]): this;$/;"	m
addGLTexture	pilas-engine/declaraciones/phaser.d.ts	/^            addGLTexture(key: string, glTexture: WebGLTexture, width?: number, height?: number): Phaser.Textures.Texture;$/;"	m
addGravityWell	pilas-engine/declaraciones/phaser.d.ts	/^                addGravityWell(well: Phaser.GameObjects.Particles.GravityWell): Phaser.GameObjects.Particles.GravityWell;$/;"	m
addImage	pilas-engine/declaraciones/phaser.d.ts	/^            addImage(gid: number, image: string): Phaser.Tilemaps.ImageCollection;$/;"	m
addImage	pilas-engine/declaraciones/phaser.d.ts	/^            addImage(key: string, source: HTMLImageElement, dataSource?: HTMLImageElement | HTMLCanvasElement): Phaser.Textures.Texture;$/;"	m
addKey	pilas-engine/declaraciones/phaser.d.ts	/^                addKey(key: Phaser.Input.Keyboard.Key | string | number, enableCapture?: boolean, emitOnRepeat?: boolean): Phaser.Input.Keyboard.Key;$/;"	m
addKeys	pilas-engine/declaraciones/phaser.d.ts	/^                addKeys(keys: object | string, enableCapture?: boolean, emitOnRepeat?: boolean): object;$/;"	m
addLight	pilas-engine/declaraciones/phaser.d.ts	/^            addLight(x?: number, y?: number, radius?: number, rgb?: number, intensity?: number): Phaser.GameObjects.Light;$/;"	m
addListener	pilas-engine/declaraciones/phaser.d.ts	/^            addListener(event: string | symbol, fn: Function, context?: any): this;$/;"	m
addListener	pilas-engine/declaraciones/phaser.d.ts	/^            addListener(events: string): this;$/;"	m
addMarker	pilas-engine/declaraciones/phaser.d.ts	/^            addMarker(key: string, markerIn: number, markerOut: number): this;$/;"	m
addMarker	pilas-engine/declaraciones/phaser.d.ts	/^            addMarker(marker: Phaser.Types.Sound.SoundMarker): boolean;$/;"	m
addMix	pilas-engine/declaraciones/phaser.d.ts	/^            addMix(animA: string | Phaser.Animations.Animation, animB: string | Phaser.Animations.Animation, delay: number): this;$/;"	m
addMultiple	pilas-engine/declaraciones/phaser.d.ts	/^            addMultiple(children: Phaser.GameObjects.GameObject[], addToScene?: boolean): this;$/;"	m
addOverlap	pilas-engine/declaraciones/phaser.d.ts	/^                addOverlap(object1: Phaser.Types.Physics.Arcade.ArcadeColliderType, object2: Phaser.Types.Physics.Arcade.ArcadeColliderType, collideCallback?: ArcadePhysicsCallback, processCallback?: ArcadePhysicsCallback, callbackContext?: any): Phaser.Physics.Arcade.Collider;$/;"	m
addPack	pilas-engine/declaraciones/phaser.d.ts	/^            addPack(pack: any, packKey?: string): boolean;$/;"	m
addPoint	pilas-engine/declaraciones/phaser.d.ts	/^            addPoint(x: number, y: number): Phaser.Math.Vector2;$/;"	m
addPointLight	pilas-engine/declaraciones/phaser.d.ts	/^            addPointLight(x: number, y: number, color?: number, radius?: number, intensity?: number, attenuation?: number): Phaser.GameObjects.PointLight;$/;"	m
addPointer	pilas-engine/declaraciones/phaser.d.ts	/^            addPointer(quantity?: number): Phaser.Input.Pointer[];$/;"	m
addPoints	pilas-engine/declaraciones/phaser.d.ts	/^            addPoints(points: Phaser.Math.Vector2[] | number[] | number[][]): this;$/;"	m
addPostPipeline	pilas-engine/declaraciones/phaser.d.ts	/^                addPostPipeline(name: string, pipeline: Function): this;$/;"	m
addRenderTexture	pilas-engine/declaraciones/phaser.d.ts	/^            addRenderTexture(key: string, renderTexture: Phaser.GameObjects.RenderTexture): Phaser.Textures.Texture;$/;"	m
addScalar	pilas-engine/declaraciones/phaser.d.ts	/^            addScalar(s: number): Phaser.Math.Vector3;$/;"	m
addScale	pilas-engine/declaraciones/phaser.d.ts	/^            addScale(v: Phaser.Math.Vector2 | Phaser.Math.Vector3, scale: number): Phaser.Math.Vector3;$/;"	m
addShader	pilas-engine/declaraciones/phaser.d.ts	/^                    addShader: Phaser.Renderer.WebGL.WebGLShader;$/;"	m
addSpriteSheet	pilas-engine/declaraciones/phaser.d.ts	/^            addSpriteSheet(key: string, source: HTMLImageElement, config: Phaser.Types.Textures.SpriteSheetConfig): Phaser.Textures.Texture;$/;"	m
addSpriteSheetFromAtlas	pilas-engine/declaraciones/phaser.d.ts	/^            addSpriteSheetFromAtlas(key: string, config: Phaser.Types.Textures.SpriteSheetFromAtlasConfig): Phaser.Textures.Texture;$/;"	m
addTilesetImage	pilas-engine/declaraciones/phaser.d.ts	/^            addTilesetImage(tilesetName: string, key?: string, tileWidth?: number, tileHeight?: number, tileMargin?: number, tileSpacing?: number, gid?: number): Phaser.Tilemaps.Tileset;$/;"	m
addToCache	pilas-engine/declaraciones/phaser.d.ts	/^                addToCache(): void;$/;"	m
addToCache	pilas-engine/declaraciones/phaser.d.ts	/^            addToCache(): void;$/;"	m
addToDisplayList	pilas-engine/declaraciones/phaser.d.ts	/^            addToDisplayList(displayList?: Phaser.GameObjects.DisplayList | Phaser.GameObjects.Layer): this;$/;"	m
addToMultiFile	pilas-engine/declaraciones/phaser.d.ts	/^            addToMultiFile(files: Phaser.Loader.File): Phaser.Loader.MultiFile;$/;"	m
addToRenderList	pilas-engine/declaraciones/phaser.d.ts	/^                addToRenderList(child: Phaser.GameObjects.GameObject): void;$/;"	m
addToScene	pilas-engine/declaraciones/phaser.d.ts	/^            protected addToScene(sys: Phaser.Scenes.Systems, globalPlugins: any[], scenePlugins: any[]): void;$/;"	m
addToUpdateList	pilas-engine/declaraciones/phaser.d.ts	/^            addToUpdateList(): this;$/;"	m
addUnityAtlas	pilas-engine/declaraciones/phaser.d.ts	/^            addUnityAtlas(key: string, source: HTMLImageElement, data: object, dataSource?: HTMLImageElement | HTMLCanvasElement | HTMLImageElement[] | HTMLCanvasElement[]): Phaser.Textures.Texture;$/;"	m
addVectors	pilas-engine/declaraciones/phaser.d.ts	/^            addVectors(a: Phaser.Math.Vector3, b: Phaser.Math.Vector3): Phaser.Math.Vector3;$/;"	m
addVertex	pilas-engine/declaraciones/phaser.d.ts	/^            addVertex(x: number, y: number, z: number, u: number, v: number, color?: number, alpha?: number): this;$/;"	m
addVertices	pilas-engine/declaraciones/phaser.d.ts	/^            addVertices(vertices: number[], uvs: number[], indicies?: number[], containsZ?: boolean, normals?: number[], colors?: number | number[], alphas?: number | number[]): this;$/;"	m
addVerticesFromObj	pilas-engine/declaraciones/phaser.d.ts	/^            addVerticesFromObj(key: string, scale?: number, x?: number, y?: number, z?: number, rotateX?: number, rotateY?: number, rotateZ?: number, zIsUp?: boolean): this;$/;"	m
add_event	pilas-engine/libs/spriter.ts	/^                add_event(event_keyframe);$/;"	m
add_event	pilas-engine/libs/spriter.ts	/^        function add_event(event_keyframe: EventlineKeyframe) {$/;"	f
add_sound	pilas-engine/libs/spriter.ts	/^                add_sound(sound_keyframe);$/;"	m
add_sound	pilas-engine/libs/spriter.ts	/^        function add_sound(sound_keyframe: SoundlineKeyframe): void {$/;"	f
add_tag	pilas-engine/libs/spriter.ts	/^                  add_tag(tag_keyframe);$/;"	m
addedToScene	pilas-engine/declaraciones/phaser.d.ts	/^            addedToScene(): void;$/;"	m
adjoint	pilas-engine/declaraciones/phaser.d.ts	/^            adjoint(): Phaser.Math.Matrix3;$/;"	m
adjoint	pilas-engine/declaraciones/phaser.d.ts	/^            adjoint(): this;$/;"	m
adjustViewport	pilas-engine/declaraciones/phaser.d.ts	/^                adjustViewport(): void;$/;"	m
ads	pilas-engine/declaraciones/phaser.d.ts	/^        ads: AdInstance[];$/;"	m
advancedWordWrap	pilas-engine/declaraciones/phaser.d.ts	/^            advancedWordWrap(text: string, context: CanvasRenderingContext2D, wordWrapWidth: number): string;$/;"	m
agregar	pilas-engine/animacion_de_propiedad.ts	/^  private agregar(datos: any) {$/;"	m
agregar_actor	pilas-engine/escenas/-escena-base.ts	/^  agregar_actor(actor: Actor) {$/;"	m
agregar_manejador_de_eventos	pilas-engine/mensajes.ts	/^  private agregar_manejador_de_eventos() {$/;"	m
agregar_sensor	pilas-engine/actores/-actor-base.ts	/^  agregar_sensor(ancho, alto, x, y, nombre = "sin nombre") {$/;"	m
agregar_sensores_desde_lista	pilas-engine/actores/-actor-base.ts	/^  agregar_sensores_desde_lista(lista_de_sensores) {$/;"	m
agregar_sonido	pilas-engine/sonidos.ts	/^  agregar_sonido(nombre: string) {$/;"	m
ajustar	pilas-engine/pilas.ts	/^  ajustar(numero: number, grilla: number) {$/;"	m
ajustar_figura	pilas-engine/modos/modo_deprecated.ts	/^  ajustar_figura(gameObject: any) {$/;"	m
ajustar_marca	pilas-engine/actores/deslizador.ts	/^  private ajustar_marca(x) {$/;"	m
ajustar_posicion_a_la_grilla	pilas-engine/modos/modo_deprecated.ts	/^  ajustar_posicion_a_la_grilla(gameObject: Phaser.GameObjects.Sprite) {$/;"	m
ajustar_sensores	pilas-engine/modos/modo_deprecated.ts	/^  ajustar_sensores(sprite: any) {$/;"	m
align	pilas-engine/declaraciones/phaser.d.ts	/^                    align: number;$/;"	m
align	pilas-engine/declaraciones/phaser.d.ts	/^            align: number;$/;"	m
align	pilas-engine/declaraciones/phaser.d.ts	/^            align: string;$/;"	m
alignBody	pilas-engine/declaraciones/phaser.d.ts	/^                alignBody(body: Phaser.Types.Physics.Matter.MatterBody, x: number, y: number, align: number): this;$/;"	m
alinear	pilas-engine/pilas.ts	/^  alinear(numero: number, grilla: number) {$/;"	m
allowDrag	pilas-engine/declaraciones/phaser.d.ts	/^                allowDrag: boolean;$/;"	m
allowGravity	pilas-engine/declaraciones/phaser.d.ts	/^                allowGravity: boolean;$/;"	m
allowGravity	pilas-engine/declaraciones/phaser.d.ts	/^                readonly allowGravity: boolean;$/;"	m
allowRotation	pilas-engine/declaraciones/phaser.d.ts	/^                allowRotation: boolean;$/;"	m
alpha	pilas-engine/declaraciones/phaser.d.ts	/^                    alpha: number;$/;"	m
alpha	pilas-engine/declaraciones/phaser.d.ts	/^                alpha: Phaser.GameObjects.Particles.EmitterOp;$/;"	m
alpha	pilas-engine/declaraciones/phaser.d.ts	/^                alpha: number;$/;"	m
alpha	pilas-engine/declaraciones/phaser.d.ts	/^            alpha: number;$/;"	m
alpha	pilas-engine/libs/spriter.ts	/^  alpha: number = 1.0;$/;"	m
alphaBottomLeft	pilas-engine/declaraciones/phaser.d.ts	/^                alphaBottomLeft: number;$/;"	m
alphaBottomLeft	pilas-engine/declaraciones/phaser.d.ts	/^            alphaBottomLeft: number;$/;"	m
alphaBottomRight	pilas-engine/declaraciones/phaser.d.ts	/^                alphaBottomRight: number;$/;"	m
alphaBottomRight	pilas-engine/declaraciones/phaser.d.ts	/^            alphaBottomRight: number;$/;"	m
alphaGL	pilas-engine/declaraciones/phaser.d.ts	/^            alphaGL: number;$/;"	m
alphaTopLeft	pilas-engine/declaraciones/phaser.d.ts	/^                alphaTopLeft: number;$/;"	m
alphaTopLeft	pilas-engine/declaraciones/phaser.d.ts	/^            alphaTopLeft: number;$/;"	m
alphaTopRight	pilas-engine/declaraciones/phaser.d.ts	/^                alphaTopRight: number;$/;"	m
alphaTopRight	pilas-engine/declaraciones/phaser.d.ts	/^            alphaTopRight: number;$/;"	m
alphas	pilas-engine/declaraciones/phaser.d.ts	/^            alphas: Float32Array;$/;"	m
altFillAlpha	pilas-engine/declaraciones/phaser.d.ts	/^            altFillAlpha: number;$/;"	m
altFillColor	pilas-engine/declaraciones/phaser.d.ts	/^            altFillColor: number;$/;"	m
altKey	pilas-engine/declaraciones/phaser.d.ts	/^                altKey: boolean;$/;"	m
alternar_modo_pantalla_completa	pilas-engine/pilas.ts	/^  alternar_modo_pantalla_completa() {$/;"	m
alto	pilas-engine/actores/-actor-base.ts	/^  get alto() {$/;"	m
alto	pilas-engine/actores/-actor-base.ts	/^  set alto(a: number) {$/;"	m
alto	pilas-engine/actores/conejo.ts	/^        alto: 10,$/;"	m
alto	pilas-engine/escenas/-escena-base.ts	/^      alto: this.alto,$/;"	m
alto	pilas-engine/escenas/-escena-base.ts	/^  alto: number;$/;"	m
alto	pilas-engine/modos/modo.ts	/^  alto: number;$/;"	m
alto	pilas-engine/modos/modo_cargador.ts	/^              alto: this.pilas._alto,$/;"	m
alto	pilas-engine/modos/modo_cargador.ts	/^          alto: this.pilas._alto,$/;"	m
alto	pilas-engine/modos/modo_ejecucion.ts	/^  alto: number;$/;"	m
alwaysEnabled	pilas-engine/declaraciones/phaser.d.ts	/^                alwaysEnabled: boolean;$/;"	m
ambientColor	pilas-engine/declaraciones/phaser.d.ts	/^            ambientColor: Phaser.Display.RGB;$/;"	m
analogico_derecho_x	pilas-engine/control.ts	/^  get analogico_derecho_x() {$/;"	m
analogico_derecho_y	pilas-engine/control.ts	/^  get analogico_derecho_y() {$/;"	m
analogico_izquierdo_x	pilas-engine/control.ts	/^  get analogico_izquierdo_x() {$/;"	m
analogico_izquierdo_y	pilas-engine/control.ts	/^  get analogico_izquierdo_y() {$/;"	m
ancho	pilas-engine/actores/-actor-base.ts	/^  get ancho() {$/;"	m
ancho	pilas-engine/actores/-actor-base.ts	/^  set ancho(a: number) {$/;"	m
ancho	pilas-engine/actores/conejo.ts	/^        ancho: 64,$/;"	m
ancho	pilas-engine/escenas/-escena-base.ts	/^      ancho: this.ancho,$/;"	m
ancho	pilas-engine/escenas/-escena-base.ts	/^  ancho: number;$/;"	m
ancho	pilas-engine/modos/modo.ts	/^  ancho: number;$/;"	m
ancho	pilas-engine/modos/modo_cargador.ts	/^              ancho: this.pilas._ancho,$/;"	m
ancho	pilas-engine/modos/modo_cargador.ts	/^          ancho: this.pilas._ancho,$/;"	m
ancho	pilas-engine/modos/modo_ejecucion.ts	/^  ancho: number;$/;"	m
android	pilas-engine/declaraciones/phaser.d.ts	/^            android: boolean;$/;"	m
angle	pilas-engine/declaraciones/phaser.d.ts	/^                    angle: number;$/;"	m
angle	pilas-engine/declaraciones/phaser.d.ts	/^                angle: Phaser.GameObjects.Particles.EmitterOp;$/;"	m
angle	pilas-engine/declaraciones/phaser.d.ts	/^                angle: number;$/;"	m
angle	pilas-engine/declaraciones/phaser.d.ts	/^            angle(): number;$/;"	m
angle	pilas-engine/declaraciones/phaser.d.ts	/^            angle(value: number, step?: number): this;$/;"	m
angle	pilas-engine/declaraciones/phaser.d.ts	/^            angle: number;$/;"	m
angle	pilas-engine/declaraciones/phaser.d.ts	/^            readonly angle: number;$/;"	m
angle	pilas-engine/modos/modo.ts	/^          angle: angulo \/\/$/;"	m
angle	pilas-engine/modos/modo.ts	/^          angle: angulo$/;"	m
angularAcceleration	pilas-engine/declaraciones/phaser.d.ts	/^                angularAcceleration: number;$/;"	m
angularDrag	pilas-engine/declaraciones/phaser.d.ts	/^                angularDrag: number;$/;"	m
angularVelocity	pilas-engine/declaraciones/phaser.d.ts	/^                angularVelocity: number;$/;"	m
anim_key	pilas-engine/libs/spriter.ts	/^  anim_key: string = "";$/;"	m
animacion	pilas-engine/actores/-actor-base.ts	/^  get animacion() {$/;"	m
animacion	pilas-engine/actores/-actor-base.ts	/^  set animacion(nombre) {$/;"	m
animacion_actual	pilas-engine/huesos.ts	/^  animacion_actual: string;$/;"	m
animacion_pausada	pilas-engine/actores/-actor-base.ts	/^  animacion_pausada: boolean = false;$/;"	m
animaciones	pilas-engine/pilas.ts	/^  animaciones: Animaciones;$/;"	m
animaciones_en_ejecucion	pilas-engine/escenas/-escena-base.ts	/^  private animaciones_en_ejecucion: [AnimacionDePropiedad?];$/;"	m
animaciones_pendientes_de_ejecucion	pilas-engine/escenas/-escena-base.ts	/^  private animaciones_pendientes_de_ejecucion: [AnimacionDePropiedad?];$/;"	m
animar	pilas-engine/actores/-actor-base.ts	/^  animar(tipo_de_animacion: Tipo = Tipo.suave, veces: number = 1, duraci√≥n: number = 1): AnimacionDePropiedad {$/;"	m
animar	pilas-engine/pilas.ts	/^  animar(actor, propiedad: string, valor, duracion: number = 0.5) {$/;"	m
animation	pilas-engine/declaraciones/phaser.d.ts	/^            animation(key: string | Phaser.Types.Loader.FileTypes.JSONFileConfig | Phaser.Types.Loader.FileTypes.JSONFileConfig[], url?: string, dataKey?: string, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject): this;$/;"	m
animationManager	pilas-engine/declaraciones/phaser.d.ts	/^            animationManager: Phaser.Animations.AnimationManager;$/;"	m
animation_index	pilas-engine/libs/spriter.ts	/^  animation_index: number = -1;$/;"	m
animation_keys	pilas-engine/libs/spriter.ts	/^  animation_keys: string[];$/;"	m
animation_map	pilas-engine/libs/spriter.ts	/^  animation_map: { [key: string]: Animation };$/;"	m
animation_time	pilas-engine/libs/spriter.ts	/^  animation_time: number = 0.0;$/;"	m
anims	pilas-engine/declaraciones/phaser.d.ts	/^                anims: Phaser.Types.Animations.JSONAnimation[];$/;"	m
anims	pilas-engine/declaraciones/phaser.d.ts	/^            anims: Phaser.Animations.AnimationManager;$/;"	m
anims	pilas-engine/declaraciones/phaser.d.ts	/^            anims: Phaser.Animations.AnimationState;$/;"	m
anims	pilas-engine/declaraciones/phaser.d.ts	/^            protected anims: Phaser.Structs.Map<string, Phaser.Animations.Animation>;$/;"	m
anims	pilas-engine/declaraciones/phaser.d.ts	/^        anims: Phaser.Animations.AnimationManager;$/;"	m
antialias	pilas-engine/declaraciones/phaser.d.ts	/^                antialias: boolean;$/;"	m
antialias	pilas-engine/declaraciones/phaser.d.ts	/^            readonly antialias: boolean;$/;"	m
antialiasGL	pilas-engine/declaraciones/phaser.d.ts	/^            readonly antialiasGL: boolean;$/;"	m
anticlockwise	pilas-engine/declaraciones/phaser.d.ts	/^            anticlockwise: boolean;$/;"	m
aplicar_atributos_de_actor_a_sprite	pilas-engine/modos/modo_deprecated.ts	/^  aplicar_atributos_de_actor_a_sprite(actor: Actor, sprite) {$/;"	m
aplicar_atributos_de_actor_a_sprite	pilas-engine/modos/modo_editor.ts	/^  aplicar_atributos_de_actor_a_sprite(actor: Actor, sprite) {$/;"	m
aplicar_limites_a_la_camara	pilas-engine/modos/modo_deprecated.ts	/^  aplicar_limites_a_la_camara(escena) {$/;"	m
applyConfig	pilas-engine/declaraciones/phaser.d.ts	/^            protected applyConfig(): void;$/;"	m
applyForce	pilas-engine/declaraciones/phaser.d.ts	/^                    applyForce(force: Phaser.Math.Vector2): Phaser.GameObjects.GameObject;$/;"	m
applyForce	pilas-engine/declaraciones/phaser.d.ts	/^                applyForce(bodies: Phaser.Types.Physics.Matter.MatterBody | Phaser.Types.Physics.Matter.MatterBody[], force: Phaser.Types.Math.Vector2Like): this;$/;"	m
applyForce	pilas-engine/declaraciones/phaser.d.ts	/^                applyForce(force: Phaser.Math.Vector2): Phaser.GameObjects.GameObject;$/;"	m
applyForceFrom	pilas-engine/declaraciones/phaser.d.ts	/^                    applyForceFrom(position: Phaser.Math.Vector2, force: Phaser.Math.Vector2): Phaser.GameObjects.GameObject;$/;"	m
applyForceFrom	pilas-engine/declaraciones/phaser.d.ts	/^                applyForceFrom(position: Phaser.Math.Vector2, force: Phaser.Math.Vector2): Phaser.GameObjects.GameObject;$/;"	m
applyForceFromAngle	pilas-engine/declaraciones/phaser.d.ts	/^                applyForceFromAngle(bodies: Phaser.Types.Physics.Matter.MatterBody | Phaser.Types.Physics.Matter.MatterBody[], speed: number, angle?: number): this;$/;"	m
applyForceFromPosition	pilas-engine/declaraciones/phaser.d.ts	/^                applyForceFromPosition(bodies: Phaser.Types.Physics.Matter.MatterBody | Phaser.Types.Physics.Matter.MatterBody[], position: Phaser.Types.Math.Vector2Like, speed: number, angle?: number): this;$/;"	m
applyITRS	pilas-engine/declaraciones/phaser.d.ts	/^                applyITRS(x: number, y: number, rotation: number, scaleX: number, scaleY: number): this;$/;"	m
applyInverse	pilas-engine/declaraciones/phaser.d.ts	/^                applyInverse(x: number, y: number, output?: Phaser.Math.Vector2): Phaser.Math.Vector2;$/;"	m
applyMatrix3	pilas-engine/declaraciones/phaser.d.ts	/^            applyMatrix3(mat3: Phaser.Math.Matrix3): Phaser.Math.Vector3;$/;"	m
applyMatrix4	pilas-engine/declaraciones/phaser.d.ts	/^            applyMatrix4(mat4: Phaser.Math.Matrix4): Phaser.Math.Vector3;$/;"	m
applyStencil	pilas-engine/declaraciones/phaser.d.ts	/^                applyStencil(renderer: Phaser.Renderer.WebGL.WebGLRenderer, camera: Phaser.Cameras.Scene2D.Camera, inc: boolean): void;$/;"	m
aprender	pilas-engine/actores/-actor-base.ts	/^  aprender(habilidad: string) {$/;"	m
arc	pilas-engine/declaraciones/phaser.d.ts	/^            arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, anticlockwise?: boolean, overshoot?: number): this;$/;"	m
arc	pilas-engine/declaraciones/phaser.d.ts	/^            arc(x?: number, y?: number, radius?: number, startAngle?: number, endAngle?: number, anticlockwise?: boolean, fillColor?: number, fillAlpha?: number): Phaser.GameObjects.Arc;$/;"	m
arcLengthDivisions	pilas-engine/declaraciones/phaser.d.ts	/^            arcLengthDivisions: number;$/;"	m
area	pilas-engine/declaraciones/phaser.d.ts	/^            area: number;$/;"	m
area_de_interactividad	pilas-engine/actores/-actor-base.ts	/^  get area_de_interactividad() {$/;"	m
area_de_interactividad	pilas-engine/actores/-actor-base.ts	/^  set area_de_interactividad(v: any) {$/;"	m
args	pilas-engine/declaraciones/phaser.d.ts	/^            args: any[];$/;"	m
arriba	pilas-engine/actores/-actor-base.ts	/^      arriba: 0,$/;"	m
arriba	pilas-engine/control.ts	/^      arriba: false,$/;"	m
arriba	pilas-engine/control.ts	/^  get arriba() {$/;"	m
arriba	pilas-engine/control.ts	/^  get arriba(): boolean {$/;"	m
ascent	pilas-engine/declaraciones/phaser.d.ts	/^                    ascent: number;$/;"	m
aseprite	pilas-engine/declaraciones/phaser.d.ts	/^            aseprite(key: string | Phaser.Types.Loader.FileTypes.AsepriteFileConfig | Phaser.Types.Loader.FileTypes.AsepriteFileConfig[], textureURL?: string | string[], atlasURL?: object | string, textureXhrSettings?: Phaser.Types.Loader.XHRSettingsObject, atlasXhrSettings?: Phaser.Types.Loader.XHRSettingsObject): this;$/;"	m
aspectMode	pilas-engine/declaraciones/phaser.d.ts	/^            readonly aspectMode: number;$/;"	m
aspectRatio	pilas-engine/declaraciones/phaser.d.ts	/^            readonly aspectRatio: number;$/;"	m
atLimit	pilas-engine/declaraciones/phaser.d.ts	/^                atLimit(): boolean;$/;"	m
atender_mensaje	pilas-engine/mensajes.ts	/^  atender_mensaje(e: any) {$/;"	m
atender_mensaje_actualizar_actor_desde_el_editor	pilas-engine/mensajes.ts	/^  atender_mensaje_actualizar_actor_desde_el_editor(datos) {$/;"	m
atender_mensaje_actualizar_escena_desde_el_editor	pilas-engine/mensajes.ts	/^  atender_mensaje_actualizar_escena_desde_el_editor(datos) {$/;"	m
atender_mensaje_cambiar_posicion	pilas-engine/mensajes.ts	/^  atender_mensaje_cambiar_posicion(datos) {$/;"	m
atender_mensaje_cambiar_zoom	pilas-engine/mensajes.ts	/^  atender_mensaje_cambiar_zoom(datos) {$/;"	m
atender_mensaje_capturar_pantalla	pilas-engine/mensajes.ts	/^  atender_mensaje_capturar_pantalla(datos) {$/;"	m
atender_mensaje_cuando_cambia_grilla_desde_el_selector_manual	pilas-engine/mensajes.ts	/^  atender_mensaje_cuando_cambia_grilla_desde_el_selector_manual(datos) {$/;"	m
atender_mensaje_define_escena	pilas-engine/mensajes.ts	/^  atender_mensaje_define_escena(datos) {$/;"	m
atender_mensaje_definir_estados_de_depuracion	pilas-engine/mensajes.ts	/^  atender_mensaje_definir_estados_de_depuracion(datos) {$/;"	m
atender_mensaje_definir_zoom_inicial_para_el_modo_editor	pilas-engine/mensajes.ts	/^  atender_mensaje_definir_zoom_inicial_para_el_modo_editor(datos) {$/;"	m
atender_mensaje_ejecutar_proyecto	pilas-engine/mensajes.ts	/^  atender_mensaje_ejecutar_proyecto(datos) {$/;"	m
atender_mensaje_eliminar_actor_desde_el_editor	pilas-engine/mensajes.ts	/^  atender_mensaje_eliminar_actor_desde_el_editor(datos) {$/;"	m
atender_mensaje_iniciar_pilas	pilas-engine/mensajes.ts	/^  atender_mensaje_iniciar_pilas(datos) {$/;"	m
atender_mensaje_pausar_escena	pilas-engine/mensajes.ts	/^  atender_mensaje_pausar_escena() {$/;"	m
atender_mensaje_selecciona_actor_desde_el_editor	pilas-engine/mensajes.ts	/^  atender_mensaje_selecciona_actor_desde_el_editor(datos) {$/;"	m
atender_mensaje_selecciona_un_actor_en_modo_pausa	pilas-engine/mensajes.ts	/^  atender_mensaje_selecciona_un_actor_en_modo_pausa(datos) {$/;"	m
atender_mensaje_termina_de_reproducir_sonido	pilas-engine/mensajes.ts	/^  atender_mensaje_termina_de_reproducir_sonido(\/*datos*\/) {}$/;"	m
atender_mensaje_ubicar_camara_en_el_actor	pilas-engine/mensajes.ts	/^  atender_mensaje_ubicar_camara_en_el_actor(data: any) {$/;"	m
atlas	pilas-engine/declaraciones/phaser.d.ts	/^                atlas: string;$/;"	m
atlas	pilas-engine/declaraciones/phaser.d.ts	/^            atlas(key: string | Phaser.Types.Loader.FileTypes.AtlasJSONFileConfig | Phaser.Types.Loader.FileTypes.AtlasJSONFileConfig[], textureURL?: string | string[], atlasURL?: object | string, textureXhrSettings?: Phaser.Types.Loader.XHRSettingsObject, atlasXhrSettings?: Phaser.Types.Loader.XHRSettingsObject): this;$/;"	m
atlas	pilas-engine/huesos.ts	/^  atlas: string;$/;"	m
atlasXML	pilas-engine/declaraciones/phaser.d.ts	/^            atlasXML(key: string | Phaser.Types.Loader.FileTypes.AtlasXMLFileConfig | Phaser.Types.Loader.FileTypes.AtlasXMLFileConfig[], textureURL?: string | string[], atlasURL?: string, textureXhrSettings?: Phaser.Types.Loader.XHRSettingsObject, atlasXhrSettings?: Phaser.Types.Loader.XHRSettingsObject): this;$/;"	m
attenuation	pilas-engine/declaraciones/phaser.d.ts	/^            attenuation: number;$/;"	m
attributes	pilas-engine/declaraciones/phaser.d.ts	/^                attributes: Phaser.Types.Renderer.WebGL.WebGLPipelineAttribute[];$/;"	m
audio	pilas-engine/declaraciones/phaser.d.ts	/^            audio(key: string | Phaser.Types.Loader.FileTypes.AudioFileConfig | Phaser.Types.Loader.FileTypes.AudioFileConfig[], urls?: string | string[], config?: any, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject): this;$/;"	m
audio	pilas-engine/declaraciones/phaser.d.ts	/^            audio: Phaser.Cache.BaseCache;$/;"	m
audio	pilas-engine/declaraciones/phaser.d.ts	/^            readonly audio: Phaser.Types.Core.AudioConfig;$/;"	m
audio	pilas-engine/declaraciones/phaser.d.ts	/^        audio: Phaser.Device.Audio;$/;"	m
audioBuffer	pilas-engine/declaraciones/phaser.d.ts	/^            audioBuffer: AudioBuffer;$/;"	m
audioData	pilas-engine/declaraciones/phaser.d.ts	/^            audioData: boolean;$/;"	m
audioPlayDelay	pilas-engine/declaraciones/phaser.d.ts	/^            audioPlayDelay: number;$/;"	m
audioSprite	pilas-engine/declaraciones/phaser.d.ts	/^            audioSprite(key: string | Phaser.Types.Loader.FileTypes.AudioSpriteFileConfig | Phaser.Types.Loader.FileTypes.AudioSpriteFileConfig[], jsonURL: string, audioURL?: string | string[], audioConfig?: any, audioXhrSettings?: Phaser.Types.Loader.XHRSettingsObject, jsonXhrSettings?: Phaser.Types.Loader.XHRSettingsObject): this;$/;"	m
aumentar	pilas-engine/actores/-actor-base.ts	/^  aumentar(cantidad: number = 1) {}$/;"	m
aumentar	pilas-engine/actores/puntaje.ts	/^  aumentar(cantidad: number = 1) {$/;"	m
autoCenter	pilas-engine/declaraciones/phaser.d.ts	/^            autoCenter: Phaser.Scale.CenterType;$/;"	m
autoCenter	pilas-engine/declaraciones/phaser.d.ts	/^            readonly autoCenter: Phaser.Scale.CenterType;$/;"	m
autoCenter	pilas-engine/pilas.ts	/^      autoCenter: Phaser.Scale.CENTER_BOTH,$/;"	m
autoClear	pilas-engine/declaraciones/phaser.d.ts	/^                autoClear: boolean;$/;"	m
autoClose	pilas-engine/declaraciones/phaser.d.ts	/^                autoClose: boolean;$/;"	m
autoClose	pilas-engine/declaraciones/phaser.d.ts	/^            autoClose: boolean;$/;"	m
autoFocus	pilas-engine/declaraciones/phaser.d.ts	/^            readonly autoFocus: boolean;$/;"	m
autoResize	pilas-engine/declaraciones/phaser.d.ts	/^                readonly autoResize: boolean;$/;"	m
autoRound	pilas-engine/declaraciones/phaser.d.ts	/^            autoRound: boolean;$/;"	m
autoRound	pilas-engine/declaraciones/phaser.d.ts	/^            autoRound: number;$/;"	m
autoRound	pilas-engine/declaraciones/phaser.d.ts	/^            readonly autoRound: boolean;$/;"	m
autoRound	pilas-engine/pilas.ts	/^      autoRound: false,$/;"	m
autoUpdate	pilas-engine/declaraciones/phaser.d.ts	/^                autoUpdate: boolean;$/;"	m
automata	pilas-engine/actores/-actor-base.ts	/^  automata: Automata;$/;"	m
autostart	pilas-engine/pilas.ts	/^      autostart: false,$/;"	m
available	pilas-engine/declaraciones/phaser.d.ts	/^            available: boolean;$/;"	m
avanzar	pilas-engine/actores/-actor-base.ts	/^  avanzar(rotacion: number = null, velocidad: number = 1) {$/;"	m
avanzar_posicion	pilas-engine/modos/modo_pausa.ts	/^  avanzar_posicion() {$/;"	m
avisar_click_en_la_pantalla_a_los_actores	pilas-engine/escenas/-escena-base.ts	/^  avisar_click_en_la_pantalla_a_los_actores(x: number, y: number, evento_original: any) {$/;"	m
avisar_cuando_mueve_a_todos_los_actores	pilas-engine/escenas/-escena-base.ts	/^  avisar_cuando_mueve_a_todos_los_actores(x: number, y: number, evento_original: any) {$/;"	m
avisar_cuando_pulsa_tecla_a_los_actores	pilas-engine/escenas/-escena-base.ts	/^  avisar_cuando_pulsa_tecla_a_los_actores(tecla: string, evento_original: any) {$/;"	m
avisar_cuando_suelta_tecla_a_los_actores	pilas-engine/escenas/-escena-base.ts	/^  avisar_cuando_suelta_tecla_a_los_actores(tecla: string, evento_original: any) {$/;"	m
avisar_cuando_termina_de_hacer_click_en_la_pantalla_a_los_actores	pilas-engine/escenas/-escena-base.ts	/^  avisar_cuando_termina_de_hacer_click_en_la_pantalla_a_los_actores(x: number, y:number, evento_original: any) {$/;"	m
axes	pilas-engine/declaraciones/phaser.d.ts	/^                axes: MatterJS.AxesFactory;$/;"	m
axes	pilas-engine/declaraciones/phaser.d.ts	/^                axes: Phaser.Input.Gamepad.Axis[];$/;"	m
axisBody	pilas-engine/declaraciones/phaser.d.ts	/^                    axisBody: MatterJS.BodyType;$/;"	m
axisNumber	pilas-engine/declaraciones/phaser.d.ts	/^                    axisNumber: number;$/;"	m
azar	pilas-engine/pilas.ts	/^  azar(desde: number, hasta: number) {$/;"	m
azar_desde_lista	pilas-engine/pilas.ts	/^  azar_desde_lista(lista) {$/;"	m
azar_excluyendo_un_valor	pilas-engine/pilas.ts	/^  azar_excluyendo_un_valor(desde: number, hasta: number, valor_a_excluir: number) {$/;"	m
b	pilas-engine/declaraciones/phaser.d.ts	/^                    b: number;$/;"	m
b	pilas-engine/declaraciones/phaser.d.ts	/^                b: number;$/;"	m
b	pilas-engine/declaraciones/phaser.d.ts	/^            b: number;$/;"	m
backButtonDown	pilas-engine/declaraciones/phaser.d.ts	/^            backButtonDown(): boolean;$/;"	m
backButtonReleased	pilas-engine/declaraciones/phaser.d.ts	/^            backButtonReleased(): boolean;$/;"	m
backgroundColor	pilas-engine/declaraciones/phaser.d.ts	/^                    backgroundColor: string;$/;"	m
backgroundColor	pilas-engine/declaraciones/phaser.d.ts	/^                backgroundColor: Phaser.Display.Color;$/;"	m
backgroundColor	pilas-engine/declaraciones/phaser.d.ts	/^            backgroundColor: string;$/;"	m
backgroundColor	pilas-engine/declaraciones/phaser.d.ts	/^            readonly backgroundColor: Phaser.Display.Color;$/;"	m
backgroundColor	pilas-engine/pilas.ts	/^      backgroundColor: color_de_fondo,$/;"	m
bannerBackgroundColor	pilas-engine/declaraciones/phaser.d.ts	/^            readonly bannerBackgroundColor: string[];$/;"	m
bannerTextColor	pilas-engine/declaraciones/phaser.d.ts	/^            readonly bannerTextColor: string;$/;"	m
barra_alto	pilas-engine/actores/barra_de_energia.ts	/^  barra_alto: number = 15;$/;"	m
barra_de_energia	pilas-engine/actores.ts	/^  barra_de_energia() {$/;"	m
barra_de_energia	pilas-engine/actores/barra_de_energia.ts	/^class barra_de_energia extends PizarraBase {$/;"	c
barra_de_progreso	pilas-engine/modos/modo_cargador.ts	/^  barra_de_progreso: any;$/;"	m
barra_largo	pilas-engine/actores/barra_de_energia.ts	/^  barra_largo: number = 200;$/;"	m
baseHeight	pilas-engine/declaraciones/phaser.d.ts	/^            baseHeight: number;$/;"	m
baseSize	pilas-engine/declaraciones/phaser.d.ts	/^            baseSize: Phaser.Structs.Size;$/;"	m
baseTileHeight	pilas-engine/declaraciones/phaser.d.ts	/^            baseTileHeight: number;$/;"	m
baseTileWidth	pilas-engine/declaraciones/phaser.d.ts	/^            baseTileWidth: number;$/;"	m
baseURL	pilas-engine/declaraciones/phaser.d.ts	/^            baseURL: string;$/;"	m
baseWidth	pilas-engine/declaraciones/phaser.d.ts	/^            baseWidth: number;$/;"	m
baselineX	pilas-engine/declaraciones/phaser.d.ts	/^            baselineX: number;$/;"	m
baselineY	pilas-engine/declaraciones/phaser.d.ts	/^            baselineY: number;$/;"	m
basicWordWrap	pilas-engine/declaraciones/phaser.d.ts	/^            basicWordWrap(text: string, context: CanvasRenderingContext2D, wordWrapWidth: number): string;$/;"	m
batchDraw	pilas-engine/declaraciones/phaser.d.ts	/^            batchDraw(entries: any, x?: number, y?: number, alpha?: number, tint?: number): this;$/;"	m
batchDrawFrame	pilas-engine/declaraciones/phaser.d.ts	/^            batchDrawFrame(key: string, frame?: string | number, x?: number, y?: number, alpha?: number, tint?: number): this;$/;"	m
batchFillPath	pilas-engine/declaraciones/phaser.d.ts	/^                    batchFillPath(path: Phaser.Types.Math.Vector2Like[], currentMatrix: Phaser.GameObjects.Components.TransformMatrix, parentMatrix: Phaser.GameObjects.Components.TransformMatrix): void;$/;"	m
batchFillRect	pilas-engine/declaraciones/phaser.d.ts	/^                    batchFillRect(x: number, y: number, width: number, height: number, currentMatrix: Phaser.GameObjects.Components.TransformMatrix, parentMatrix: Phaser.GameObjects.Components.TransformMatrix): void;$/;"	m
batchFillTriangle	pilas-engine/declaraciones/phaser.d.ts	/^                    batchFillTriangle(x0: number, y0: number, x1: number, y1: number, x2: number, y2: number, currentMatrix: Phaser.GameObjects.Components.TransformMatrix, parentMatrix: Phaser.GameObjects.Components.TransformMatrix): void;$/;"	m
batchLightVert	pilas-engine/declaraciones/phaser.d.ts	/^                    batchLightVert(x: number, y: number, lightX: number, lightY: number, radius: number, attenuation: number, r: number, g: number, b: number, a: number): void;$/;"	m
batchLine	pilas-engine/declaraciones/phaser.d.ts	/^                    batchLine(ax: number, ay: number, bx: number, by: number, aLineWidth: number, bLineWidth: number, index: number, closePath: boolean, currentMatrix: Phaser.GameObjects.Components.TransformMatrix, parentMatrix: Phaser.GameObjects.Components.TransformMatrix): void;$/;"	m
batchPointLight	pilas-engine/declaraciones/phaser.d.ts	/^                    batchPointLight(light: Phaser.GameObjects.PointLight, camera: Phaser.Cameras.Scene2D.Camera, x0: number, y0: number, x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, lightX: number, lightY: number): void;$/;"	m
batchQuad	pilas-engine/declaraciones/phaser.d.ts	/^                batchQuad(gameObject: Phaser.GameObjects.GameObject | null, x0: number, y0: number, x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, u0: number, v0: number, u1: number, v1: number, tintTL: number, tintTR: number, tintBL: number, tintBR: number, tintEffect: number | boolean, texture?: WebGLTexture, unit?: number): boolean;$/;"	m
batchSize	pilas-engine/declaraciones/phaser.d.ts	/^            readonly batchSize: number;$/;"	m
batchSprite	pilas-engine/declaraciones/phaser.d.ts	/^                    batchSprite(gameObject: Phaser.GameObjects.Image | Phaser.GameObjects.Sprite, camera: Phaser.Cameras.Scene2D.Camera, parentTransformMatrix?: Phaser.GameObjects.Components.TransformMatrix): void;$/;"	m
batchSprite	pilas-engine/declaraciones/phaser.d.ts	/^                batchSprite(sprite: Phaser.GameObjects.GameObject, frame: Phaser.Textures.Frame, camera: Phaser.Cameras.Scene2D.Camera, parentTransformMatrix?: Phaser.GameObjects.Components.TransformMatrix): void;$/;"	m
batchStrokePath	pilas-engine/declaraciones/phaser.d.ts	/^                    batchStrokePath(path: Phaser.Types.Math.Vector2Like[], lineWidth: number, pathOpen: boolean, currentMatrix: Phaser.GameObjects.Components.TransformMatrix, parentMatrix: Phaser.GameObjects.Components.TransformMatrix): void;$/;"	m
batchStrokeTriangle	pilas-engine/declaraciones/phaser.d.ts	/^                    batchStrokeTriangle(x0: number, y0: number, x1: number, y1: number, x2: number, y2: number, lineWidth: number, currentMatrix: Phaser.GameObjects.Components.TransformMatrix, parentMatrix: Phaser.GameObjects.Components.TransformMatrix): void;$/;"	m
batchTexture	pilas-engine/declaraciones/phaser.d.ts	/^                    batchTexture(gameObject: Phaser.GameObjects.GameObject, texture: WebGLTexture, textureWidth: number, textureHeight: number, srcX: number, srcY: number, srcWidth: number, srcHeight: number, scaleX: number, scaleY: number, rotation: number, flipX: boolean, flipY: boolean, scrollFactorX: number, scrollFactorY: number, displayOriginX: number, displayOriginY: number, frameX: number, frameY: number, frameWidth: number, frameHeight: number, tintTL: number, tintTR: number, tintBL: number, tintBR: number, tintEffect: number, uOffset: number, vOffset: number, camera: Phaser.Cameras.Scene2D.Camera, parentTransformMatrix: Phaser.GameObjects.Components.TransformMatrix, skipFlip?: boolean, textureUnit?: number): void;$/;"	m
batchTextureFrame	pilas-engine/declaraciones/phaser.d.ts	/^                    batchTextureFrame(frame: Phaser.Textures.Frame, x: number, y: number, tint: number, alpha: number, transformMatrix: Phaser.GameObjects.Components.TransformMatrix, parentTransformMatrix?: Phaser.GameObjects.Components.TransformMatrix): void;$/;"	m
batchTri	pilas-engine/declaraciones/phaser.d.ts	/^                batchTri(gameObject: Phaser.GameObjects.GameObject | null, x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, u0: number, v0: number, u1: number, v1: number, tintTL: number, tintTR: number, tintBL: number, tintEffect: number | boolean, texture?: WebGLTexture, unit?: number): boolean;$/;"	m
batchVert	pilas-engine/declaraciones/phaser.d.ts	/^                    batchVert(x: number, y: number, tint: number): void;$/;"	m
batchVert	pilas-engine/declaraciones/phaser.d.ts	/^                batchVert(x: number, y: number, u: number, v: number, unit: number, tintEffect: number | boolean, tint: number): void;$/;"	m
beginCapture	pilas-engine/declaraciones/phaser.d.ts	/^                beginCapture(width?: number, height?: number): void;$/;"	m
beginDraw	pilas-engine/declaraciones/phaser.d.ts	/^            beginDraw(): this;$/;"	m
beginMask	pilas-engine/declaraciones/phaser.d.ts	/^                    beginMask(mask: Phaser.GameObjects.GameObject, maskedObject: Phaser.GameObjects.GameObject, camera: Phaser.Cameras.Scene2D.Camera): void;$/;"	m
beginPath	pilas-engine/declaraciones/phaser.d.ts	/^            beginPath(): this;$/;"	m
between	pilas-engine/declaraciones/phaser.d.ts	/^            between(min: number, max: number): number;$/;"	m
binary	pilas-engine/declaraciones/phaser.d.ts	/^            binary(key: string | Phaser.Types.Loader.FileTypes.BinaryFileConfig | Phaser.Types.Loader.FileTypes.BinaryFileConfig[], url?: string, dataType?: any, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject): this;$/;"	m
binary	pilas-engine/declaraciones/phaser.d.ts	/^            binary: Phaser.Cache.BaseCache;$/;"	m
bind	pilas-engine/declaraciones/phaser.d.ts	/^                    bind(): this;$/;"	m
bind	pilas-engine/declaraciones/phaser.d.ts	/^                bind(adjustViewport?: boolean, width?: number, height?: number): void;$/;"	m
bind	pilas-engine/declaraciones/phaser.d.ts	/^                bind(currentShader?: Phaser.Renderer.WebGL.WebGLShader): this;$/;"	m
bind	pilas-engine/declaraciones/phaser.d.ts	/^                bind(setAttributes?: boolean, flush?: boolean): this;$/;"	m
bindAndDraw	pilas-engine/declaraciones/phaser.d.ts	/^                    bindAndDraw(source: Phaser.Renderer.WebGL.RenderTarget, target?: Phaser.Renderer.WebGL.RenderTarget, clear?: boolean, clearAlpha?: boolean, currentShader?: Phaser.Renderer.WebGL.WebGLShader): void;$/;"	m
bindRenderTarget	pilas-engine/declaraciones/phaser.d.ts	/^                bindRenderTarget(target?: Phaser.Renderer.WebGL.RenderTarget, unit?: number): this;$/;"	m
bindTexture	pilas-engine/declaraciones/phaser.d.ts	/^                bindTexture(target?: WebGLTexture, unit?: number): this;$/;"	m
bitmapFont	pilas-engine/declaraciones/phaser.d.ts	/^            bitmapFont(key: string | Phaser.Types.Loader.FileTypes.BitmapFontFileConfig | Phaser.Types.Loader.FileTypes.BitmapFontFileConfig[], textureURL?: string | string[], fontDataURL?: string, textureXhrSettings?: Phaser.Types.Loader.XHRSettingsObject, fontDataXhrSettings?: Phaser.Types.Loader.XHRSettingsObject): this;$/;"	m
bitmapFont	pilas-engine/declaraciones/phaser.d.ts	/^            bitmapFont: Phaser.Cache.BaseCache;$/;"	m
bitmapMask	pilas-engine/declaraciones/phaser.d.ts	/^                bitmapMask: Phaser.GameObjects.GameObject;$/;"	m
bitmapText	pilas-engine/declaraciones/phaser.d.ts	/^            bitmapText(config: Phaser.Types.GameObjects.BitmapText.BitmapTextConfig, addToScene?: boolean): Phaser.GameObjects.BitmapText;$/;"	m
bitmapText	pilas-engine/declaraciones/phaser.d.ts	/^            bitmapText(x: number, y: number, font: string, text?: string | string[], size?: number, align?: number): Phaser.GameObjects.BitmapText;$/;"	m
blackWhite	pilas-engine/declaraciones/phaser.d.ts	/^            blackWhite(multiply?: boolean): this;$/;"	m
blankTexture	pilas-engine/declaraciones/phaser.d.ts	/^                readonly blankTexture: WebGLTexture;$/;"	m
blendFrames	pilas-engine/declaraciones/phaser.d.ts	/^                    blendFrames(source1: Phaser.Renderer.WebGL.RenderTarget, source2: Phaser.Renderer.WebGL.RenderTarget, target?: Phaser.Renderer.WebGL.RenderTarget, strength?: number, clearAlpha?: boolean): void;$/;"	m
blendFrames	pilas-engine/declaraciones/phaser.d.ts	/^                    blendFrames(source1: Phaser.Renderer.WebGL.RenderTarget, source2: Phaser.Renderer.WebGL.RenderTarget, target?: Phaser.Renderer.WebGL.RenderTarget, strength?: number, clearAlpha?: boolean, blendShader?: Phaser.Renderer.WebGL.WebGLShader): void;$/;"	m
blendFrames	pilas-engine/declaraciones/phaser.d.ts	/^                blendFrames(source1: Phaser.Renderer.WebGL.RenderTarget, source2: Phaser.Renderer.WebGL.RenderTarget, target?: Phaser.Renderer.WebGL.RenderTarget, strength?: number, clearAlpha?: boolean): this;$/;"	m
blendFramesAdditive	pilas-engine/declaraciones/phaser.d.ts	/^                    blendFramesAdditive(source1: Phaser.Renderer.WebGL.RenderTarget, source2: Phaser.Renderer.WebGL.RenderTarget, target?: Phaser.Renderer.WebGL.RenderTarget, strength?: number, clearAlpha?: boolean): void;$/;"	m
blendFramesAdditive	pilas-engine/declaraciones/phaser.d.ts	/^                blendFramesAdditive(source1: Phaser.Renderer.WebGL.RenderTarget, source2: Phaser.Renderer.WebGL.RenderTarget, target?: Phaser.Renderer.WebGL.RenderTarget, strength?: number, clearAlpha?: boolean): this;$/;"	m
blendMode	pilas-engine/declaraciones/phaser.d.ts	/^                blendMode: Phaser.BlendModes | string;$/;"	m
blendMode	pilas-engine/declaraciones/phaser.d.ts	/^                blendMode: number | string;$/;"	m
blendMode	pilas-engine/declaraciones/phaser.d.ts	/^                blendMode: number;$/;"	m
blendMode	pilas-engine/declaraciones/phaser.d.ts	/^            blendMode: Phaser.BlendModes | string;$/;"	m
blendMode	pilas-engine/declaraciones/phaser.d.ts	/^            blendMode: number;$/;"	m
blendModes	pilas-engine/declaraciones/phaser.d.ts	/^                blendModes: any[];$/;"	m
blitFrame	pilas-engine/declaraciones/phaser.d.ts	/^                    blitFrame(source: Phaser.Renderer.WebGL.RenderTarget, target: Phaser.Renderer.WebGL.RenderTarget, brightness?: number, clear?: boolean, clearAlpha?: boolean, eraseMode?: boolean): void;$/;"	m
blitFrame	pilas-engine/declaraciones/phaser.d.ts	/^                blitFrame(source: Phaser.Renderer.WebGL.RenderTarget, target: Phaser.Renderer.WebGL.RenderTarget, brightness?: number, clear?: boolean, clearAlpha?: boolean, eraseMode?: boolean): this;$/;"	m
blitter	pilas-engine/declaraciones/phaser.d.ts	/^            blitter(config: Phaser.Types.GameObjects.Sprite.SpriteConfig, addToScene?: boolean): Phaser.GameObjects.Blitter;$/;"	m
blitter	pilas-engine/declaraciones/phaser.d.ts	/^            blitter(x: number, y: number, key: string, frame?: string | number): Phaser.GameObjects.Blitter;$/;"	m
blocked	pilas-engine/declaraciones/phaser.d.ts	/^                blocked: Phaser.Types.Physics.Arcade.ArcadeBodyCollision;$/;"	m
bloques	pilas-engine/modos/modo_ejecucion.ts	/^  bloques: any;$/;"	m
blue	pilas-engine/declaraciones/phaser.d.ts	/^            blue: number;$/;"	m
blueGL	pilas-engine/declaraciones/phaser.d.ts	/^            blueGL: number;$/;"	m
blur	pilas-engine/declaraciones/phaser.d.ts	/^            blur(): void;$/;"	m
bodies	pilas-engine/declaraciones/phaser.d.ts	/^                bodies: MatterJS.BodiesFactory;$/;"	m
bodies	pilas-engine/declaraciones/phaser.d.ts	/^                bodies: Phaser.Structs.Set<Phaser.Physics.Arcade.Body>;$/;"	m
bodies	pilas-engine/declaraciones/phaser.d.ts	/^            bodies: any[];$/;"	m
body	pilas-engine/declaraciones/phaser.d.ts	/^                    body: Phaser.Physics.Arcade.Body | Phaser.Physics.Arcade.StaticBody;$/;"	m
body	pilas-engine/declaraciones/phaser.d.ts	/^                    body: Phaser.Physics.Arcade.Body;$/;"	m
body	pilas-engine/declaraciones/phaser.d.ts	/^                    body: Phaser.Physics.Arcade.StaticBody;$/;"	m
body	pilas-engine/declaraciones/phaser.d.ts	/^                body: MatterJS.BodyFactory;$/;"	m
body	pilas-engine/declaraciones/phaser.d.ts	/^                body: MatterJS.BodyType;$/;"	m
body	pilas-engine/declaraciones/phaser.d.ts	/^                body: Phaser.Physics.Arcade.Body | Phaser.Physics.Arcade.StaticBody;$/;"	m
body	pilas-engine/declaraciones/phaser.d.ts	/^            body: Phaser.Physics.Arcade.Body | Phaser.Physics.Arcade.StaticBody | MatterJS.BodyType;$/;"	m
body	pilas-engine/laser.ts	/^  body: any;$/;"	m
body	pilas-engine/modos/modo.ts	/^          body: col.body,$/;"	m
body	pilas-engine/pilas.ts	/^          body: col.body,$/;"	m
bodyA	pilas-engine/declaraciones/phaser.d.ts	/^                    bodyA: MatterJS.BodyType;$/;"	m
bodyB	pilas-engine/declaraciones/phaser.d.ts	/^                    bodyB: MatterJS.BodyType;$/;"	m
bodyBounds	pilas-engine/declaraciones/phaser.d.ts	/^                bodyBounds: Phaser.Physics.Matter.BodyBounds;$/;"	m
bodyCollisions	pilas-engine/laser.ts	/^  static bodyCollisions(rayA: any, body: any) {$/;"	m
bodyDebugColor	pilas-engine/declaraciones/phaser.d.ts	/^                    bodyDebugColor: number;$/;"	m
bodyEdges	pilas-engine/laser.ts	/^  static bodyEdges(body: any) {$/;"	m
bone	pilas-engine/libs/spriter.ts	/^  bone: Bone;$/;"	m
bone_array	pilas-engine/libs/spriter.ts	/^  bone_array: Bone[] = [];$/;"	m
bone_ref_array	pilas-engine/libs/spriter.ts	/^  bone_ref_array: BoneRef[];$/;"	m
boot	pilas-engine/declaraciones/phaser.d.ts	/^                    boot(): void;$/;"	m
boot	pilas-engine/declaraciones/phaser.d.ts	/^                boot(): void;$/;"	m
boot	pilas-engine/declaraciones/phaser.d.ts	/^                boot(pipelineConfig?: Phaser.Types.Core.PipelineConfig): void;$/;"	m
boot	pilas-engine/declaraciones/phaser.d.ts	/^            boot(): void;$/;"	m
boot	pilas-engine/declaraciones/phaser.d.ts	/^            protected boot(): void;$/;"	m
boot	pilas-engine/declaraciones/phaser.d.ts	/^        protected boot(): void;$/;"	m
borde	pilas-engine/modos/actor_en_modo_edicion.ts	/^  borde: Phaser.GameObjects.Rectangle;$/;"	m
borde	pilas-engine/modos/camara_en_modo_edicion.ts	/^  borde: Phaser.GameObjects.Rectangle;$/;"	m
borde_abajo	pilas-engine/camara.ts	/^  get borde_abajo() {$/;"	m
borde_arriba	pilas-engine/camara.ts	/^  get borde_arriba() {$/;"	m
borde_derecho	pilas-engine/camara.ts	/^  get borde_derecho() {$/;"	m
borde_izquierdo	pilas-engine/camara.ts	/^  get borde_izquierdo() {$/;"	m
boton	pilas-engine/actores.ts	/^  boton() {$/;"	m
boton	pilas-engine/actores/boton.ts	/^class boton extends ActorTextoBase {$/;"	c
boton_a	pilas-engine/control.ts	/^  get boton_a() {$/;"	m
boton_abajo	pilas-engine/actores.ts	/^  boton_abajo() {$/;"	m
boton_abajo	pilas-engine/actores/boton_abajo.ts	/^class boton_abajo extends Actor {$/;"	c
boton_activable	pilas-engine/actores.ts	/^  boton_activable() {$/;"	m
boton_activable	pilas-engine/actores/boton_activable.ts	/^class boton_activable extends ActorTextoBase {$/;"	c
boton_arriba	pilas-engine/actores.ts	/^  boton_arriba() {$/;"	m
boton_arriba	pilas-engine/actores/boton_arriba.ts	/^class boton_arriba extends Actor {$/;"	c
boton_b	pilas-engine/control.ts	/^  get boton_b() {$/;"	m
boton_derecha	pilas-engine/actores.ts	/^  boton_derecha() {$/;"	m
boton_derecha	pilas-engine/actores/boton_derecha.ts	/^class boton_derecha extends Actor {$/;"	c
boton_espacio	pilas-engine/actores.ts	/^  boton_espacio() {$/;"	m
boton_espacio	pilas-engine/actores/boton_espacio.ts	/^class boton_espacio extends Actor {$/;"	c
boton_izquierda	pilas-engine/actores.ts	/^  boton_izquierda() {$/;"	m
boton_izquierda	pilas-engine/actores/boton_izquierda.ts	/^class boton_izquierda extends Actor {$/;"	c
boton_lb	pilas-engine/control.ts	/^  get boton_lb() {$/;"	m
boton_rb	pilas-engine/control.ts	/^  get boton_rb() {$/;"	m
boton_x	pilas-engine/control.ts	/^  get boton_x() {$/;"	m
boton_y	pilas-engine/control.ts	/^  get boton_y() {$/;"	m
bottom	pilas-engine/declaraciones/phaser.d.ts	/^                    bottom: number;$/;"	m
bottom	pilas-engine/declaraciones/phaser.d.ts	/^                readonly bottom: number;$/;"	m
bottom	pilas-engine/declaraciones/phaser.d.ts	/^            bottom: number;$/;"	m
bottomLeft	pilas-engine/declaraciones/phaser.d.ts	/^                    bottomLeft: number;$/;"	m
bottomRight	pilas-engine/declaraciones/phaser.d.ts	/^                    bottomRight: number;$/;"	m
bounce	pilas-engine/declaraciones/phaser.d.ts	/^                bounce: Phaser.GameObjects.Particles.EmitterOp;$/;"	m
bounce	pilas-engine/declaraciones/phaser.d.ts	/^                bounce: Phaser.Math.Vector2;$/;"	m
bounce	pilas-engine/declaraciones/phaser.d.ts	/^                bounce: number;$/;"	m
bounce	pilas-engine/declaraciones/phaser.d.ts	/^                readonly bounce: Phaser.Math.Vector2;$/;"	m
bounds	pilas-engine/declaraciones/phaser.d.ts	/^                bounds: MatterJS.BoundsFactory;$/;"	m
bounds	pilas-engine/declaraciones/phaser.d.ts	/^                bounds: Phaser.Geom.Rectangle;$/;"	m
boundsCenter	pilas-engine/declaraciones/phaser.d.ts	/^                boundsCenter: Phaser.Math.Vector2;$/;"	m
box	pilas-engine/libs/spriter.ts	/^  box: BoxObject;$/;"	m
brighten	pilas-engine/declaraciones/phaser.d.ts	/^            brighten(amount: number): Phaser.Display.Color;$/;"	m
brightness	pilas-engine/declaraciones/phaser.d.ts	/^            brightness(value?: number, multiply?: boolean): this;$/;"	m
bringToTop	pilas-engine/declaraciones/phaser.d.ts	/^            bringToTop(child: Phaser.GameObjects.GameObject): this;$/;"	m
bringToTop	pilas-engine/declaraciones/phaser.d.ts	/^            bringToTop(child: T): T;$/;"	m
bringToTop	pilas-engine/declaraciones/phaser.d.ts	/^            bringToTop(key: string | Phaser.Scene): this;$/;"	m
bringToTop	pilas-engine/declaraciones/phaser.d.ts	/^            bringToTop(key?: string | Phaser.Scene): this;$/;"	m
brown	pilas-engine/declaraciones/phaser.d.ts	/^            brown(multiply?: boolean): this;$/;"	m
browser	pilas-engine/declaraciones/phaser.d.ts	/^        browser: Phaser.Device.Browser;$/;"	m
buffer	pilas-engine/declaraciones/phaser.d.ts	/^            buffer: ArrayBuffer;$/;"	m
buscar	pilas-engine/comportamientos.ts	/^  buscar(comportamiento: String) {$/;"	m
buscar	pilas-engine/habilidades.ts	/^  buscar(habilidad: String) {$/;"	m
buscar_actor	pilas-engine/pilas.ts	/^  buscar_actor(nombre: string) {$/;"	m
button	pilas-engine/declaraciones/phaser.d.ts	/^            readonly button: number;$/;"	m
buttons	pilas-engine/declaraciones/phaser.d.ts	/^                buttons: Phaser.Input.Gamepad.Button[];$/;"	m
buttons	pilas-engine/declaraciones/phaser.d.ts	/^            buttons: number;$/;"	m
bytes	pilas-engine/declaraciones/phaser.d.ts	/^                bytes: Uint8Array;$/;"	m
bytes	pilas-engine/declaraciones/phaser.d.ts	/^            bytes: Uint8Array;$/;"	m
bytesLoaded	pilas-engine/declaraciones/phaser.d.ts	/^            bytesLoaded: number;$/;"	m
bytesTotal	pilas-engine/declaraciones/phaser.d.ts	/^            bytesTotal: number;$/;"	m
c	pilas-engine/declaraciones/phaser.d.ts	/^                c: number;$/;"	m
c1	pilas-engine/libs/spriter.ts	/^  c1: number = 0.0;$/;"	m
c2	pilas-engine/libs/spriter.ts	/^  c2: number = 0.0;$/;"	m
c3	pilas-engine/libs/spriter.ts	/^  c3: number = 0.0;$/;"	m
c4	pilas-engine/libs/spriter.ts	/^  c4: number = 0.0;$/;"	m
cache	pilas-engine/declaraciones/phaser.d.ts	/^            cache: Phaser.Cache.BaseCache | Phaser.Textures.TextureManager;$/;"	m
cache	pilas-engine/declaraciones/phaser.d.ts	/^            cache: Phaser.Cache.BaseCache;$/;"	m
cache	pilas-engine/declaraciones/phaser.d.ts	/^            cache: Phaser.Cache.CacheManager;$/;"	m
cache	pilas-engine/declaraciones/phaser.d.ts	/^        cache: Phaser.Cache.CacheManager;$/;"	m
cacheArcLengths	pilas-engine/declaraciones/phaser.d.ts	/^            cacheArcLengths: number[];$/;"	m
cacheLengths	pilas-engine/declaraciones/phaser.d.ts	/^            cacheLengths: number[];$/;"	m
cacheManager	pilas-engine/declaraciones/phaser.d.ts	/^            cacheManager: Phaser.Cache.CacheManager;$/;"	m
cada	pilas-engine/pilas.ts	/^  cada(duracion: number, tarea: any, veces: number) {$/;"	m
cada_segundo	pilas-engine/actores/-actor-base.ts	/^  cada_segundo(segundos_transcurridos: number) {}$/;"	m
cada_segundo	pilas-engine/automata.ts	/^  cada_segundo(segundos_transcurridos: number) {$/;"	m
cada_segundo	pilas-engine/escenas/-escena-base.ts	/^  cada_segundo(segundos_transcurridos: number) {}$/;"	m
caja	pilas-engine/actores.ts	/^  caja() {$/;"	m
caja	pilas-engine/actores/caja.ts	/^class caja extends Actor {$/;"	c
calc	pilas-engine/declaraciones/phaser.d.ts	/^                calc: Phaser.GameObjects.Components.TransformMatrix;$/;"	m
calcDuration	pilas-engine/declaraciones/phaser.d.ts	/^            calcDuration(): void;$/;"	m
calcMatrix	pilas-engine/declaraciones/phaser.d.ts	/^                    calcMatrix: Phaser.GameObjects.Components.TransformMatrix;$/;"	m
calculateArea	pilas-engine/declaraciones/phaser.d.ts	/^            calculateArea(): number;$/;"	m
calculateDuration	pilas-engine/declaraciones/phaser.d.ts	/^            calculateDuration(target: Phaser.Animations.Animation, totalFrames: number, duration?: number, frameRate?: number): void;$/;"	m
calculateFacesAt	pilas-engine/declaraciones/phaser.d.ts	/^            calculateFacesAt(tileX: number, tileY: number): this;$/;"	m
calculateFacesAt	pilas-engine/declaraciones/phaser.d.ts	/^            calculateFacesAt(tileX: number, tileY: number, layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Tilemaps.Tilemap;$/;"	m
calculateFacesWithin	pilas-engine/declaraciones/phaser.d.ts	/^            calculateFacesWithin(tileX?: number, tileY?: number, width?: number, height?: number): this;$/;"	m
calculateFacesWithin	pilas-engine/declaraciones/phaser.d.ts	/^            calculateFacesWithin(tileX?: number, tileY?: number, width?: number, height?: number, layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Tilemaps.Tilemap;$/;"	m
calculateNormal	pilas-engine/laser.ts	/^  calculateNormal(ref: any) {$/;"	m
calculateRate	pilas-engine/declaraciones/phaser.d.ts	/^            protected calculateRate(): void;$/;"	m
calculateW	pilas-engine/declaraciones/phaser.d.ts	/^            calculateW(): Phaser.Math.Quaternion;$/;"	m
calculatedOffset	pilas-engine/declaraciones/phaser.d.ts	/^            calculatedOffset: number;$/;"	m
callback	pilas-engine/declaraciones/phaser.d.ts	/^                    callback: Phaser.Types.Renderer.Snapshot.SnapshotCallback;$/;"	m
callback	pilas-engine/declaraciones/phaser.d.ts	/^            callback: FrameRequestCallback;$/;"	m
callback	pilas-engine/declaraciones/phaser.d.ts	/^            callback: Function;$/;"	m
callback	pilas-engine/declaraciones/phaser.d.ts	/^            callback: Phaser.Types.Core.TimeStepCallback;$/;"	m
callback	pilas-engine/pilas.ts	/^      callback: () => {$/;"	m
callbackContext	pilas-engine/declaraciones/phaser.d.ts	/^                callbackContext: object;$/;"	m
callbackData	pilas-engine/declaraciones/phaser.d.ts	/^            callbackData: Phaser.Types.GameObjects.BitmapText.DisplayCallbackConfig;$/;"	m
callbackScope	pilas-engine/declaraciones/phaser.d.ts	/^            callbackScope: any;$/;"	m
callbackScope	pilas-engine/declaraciones/phaser.d.ts	/^            callbackScope: object;$/;"	m
callbacks	pilas-engine/declaraciones/phaser.d.ts	/^            callbacks: any[];$/;"	m
callbacks	pilas-engine/declaraciones/phaser.d.ts	/^            callbacks: object;$/;"	m
camara	pilas-engine/actores/-actor-base.ts	/^  get camara() {$/;"	m
camara	pilas-engine/escenas/-escena-base.ts	/^  camara: Camara;$/;"	m
camara	pilas-engine/modos/modo_editor.ts	/^  camara: CamaraEnModoEdici√≥n;$/;"	m
camara	pilas-engine/pilas.ts	/^  get camara() {$/;"	m
camara_principal	pilas-engine/camara.ts	/^  get camara_principal() {$/;"	m
camara_x	pilas-engine/escenas/-escena-base.ts	/^      camara_x: this.camara.x,$/;"	m
camara_x	pilas-engine/modos/modo_cargador.ts	/^              camara_x: 0,$/;"	m
camara_y	pilas-engine/escenas/-escena-base.ts	/^      camara_y: this.camara.y,$/;"	m
camara_y	pilas-engine/modos/modo_cargador.ts	/^              camara_y: 0$/;"	m
cambiar_escena	pilas-engine/modos/modo_ejecucion.ts	/^  cambiar_escena(nombre: string) {$/;"	m
cambiar_escena	pilas-engine/pilas.ts	/^  cambiar_escena(nombre: string) {$/;"	m
cambiar_fondo	pilas-engine/modos/modo.ts	/^  cambiar_fondo(fondo, ancho, alto) {$/;"	m
cambiar_fondo	pilas-engine/modos/modo_deprecated.ts	/^  cambiar_fondo(fondo) {$/;"	m
camera	pilas-engine/declaraciones/phaser.d.ts	/^                    readonly camera: Phaser.Cameras.Scene2D.Camera;$/;"	m
camera	pilas-engine/declaraciones/phaser.d.ts	/^                camera: Phaser.Cameras.Scene2D.Camera;$/;"	m
camera	pilas-engine/declaraciones/phaser.d.ts	/^                camera: Phaser.GameObjects.Components.TransformMatrix;$/;"	m
camera	pilas-engine/declaraciones/phaser.d.ts	/^            camera: Phaser.Cameras.Scene2D.BaseCamera;$/;"	m
camera	pilas-engine/declaraciones/phaser.d.ts	/^            camera: Phaser.Cameras.Scene2D.Camera;$/;"	m
cameraFilter	pilas-engine/declaraciones/phaser.d.ts	/^            cameraFilter: number;$/;"	m
cameraManager	pilas-engine/declaraciones/phaser.d.ts	/^                cameraManager: Phaser.Cameras.Scene2D.CameraManager;$/;"	m
cameras	pilas-engine/declaraciones/phaser.d.ts	/^                cameras: Phaser.Cameras.Scene2D.Camera[];$/;"	m
cameras	pilas-engine/declaraciones/phaser.d.ts	/^                cameras: Phaser.Types.Cameras.Scene2D.JSONCamera | Phaser.Types.Cameras.Scene2D.JSONCamera[];$/;"	m
cameras	pilas-engine/declaraciones/phaser.d.ts	/^            cameras: Phaser.Cameras.Scene2D.CameraManager;$/;"	m
cameras	pilas-engine/declaraciones/phaser.d.ts	/^        cameras: Phaser.Cameras.Scene2D.CameraManager;$/;"	m
camina_actualizar	pilas-engine/actores/conejo.ts	/^  camina_actualizar() {$/;"	m
camina_iniciar	pilas-engine/actores/conejo.ts	/^  camina_iniciar() {$/;"	m
canCollide	pilas-engine/declaraciones/phaser.d.ts	/^            readonly canCollide: boolean;$/;"	m
canSubscribeBot	pilas-engine/declaraciones/phaser.d.ts	/^        canSubscribeBot(): this;$/;"	m
cancel	pilas-engine/declaraciones/phaser.d.ts	/^            cancel: string;$/;"	m
cantidad_de_colisiones	pilas-engine/actores/-actor-base.ts	/^  get cantidad_de_colisiones() {$/;"	m
cantidad_de_colisiones	pilas-engine/sensor.ts	/^  get cantidad_de_colisiones() {$/;"	m
cantidad_de_colisiones_con_la_etiqueta	pilas-engine/sensor.ts	/^  cantidad_de_colisiones_con_la_etiqueta(etiqueta: string) {$/;"	m
canvas	pilas-engine/declaraciones/phaser.d.ts	/^                canvas: HTMLCanvasElement;$/;"	m
canvas	pilas-engine/declaraciones/phaser.d.ts	/^            canvas: HTMLCanvasElement;$/;"	m
canvas	pilas-engine/declaraciones/phaser.d.ts	/^            canvas: boolean;$/;"	m
canvas	pilas-engine/declaraciones/phaser.d.ts	/^            readonly canvas: HTMLCanvasElement;$/;"	m
canvas	pilas-engine/declaraciones/phaser.d.ts	/^        canvas: HTMLCanvasElement;$/;"	m
canvasBitBltShift	pilas-engine/declaraciones/phaser.d.ts	/^            canvasBitBltShift: boolean;$/;"	m
canvasBounds	pilas-engine/declaraciones/phaser.d.ts	/^            canvasBounds: Phaser.Geom.Rectangle;$/;"	m
canvasData	pilas-engine/declaraciones/phaser.d.ts	/^            readonly canvasData: object;$/;"	m
canvasFeatures	pilas-engine/declaraciones/phaser.d.ts	/^        canvasFeatures: Phaser.Device.CanvasFeatures;$/;"	m
canvasStyle	pilas-engine/declaraciones/phaser.d.ts	/^            readonly canvasStyle: string;$/;"	m
canvasToTexture	pilas-engine/declaraciones/phaser.d.ts	/^                canvasToTexture(srcCanvas: HTMLCanvasElement, dstTexture?: WebGLTexture, noRepeat?: boolean, flipY?: boolean): WebGLTexture;$/;"	m
canvas_fisica	pilas-engine/modos/modo.ts	/^  canvas_fisica: Phaser.GameObjects.Graphics;$/;"	m
capture	pilas-engine/declaraciones/phaser.d.ts	/^                capture: boolean;$/;"	m
captures	pilas-engine/declaraciones/phaser.d.ts	/^                captures: number[];$/;"	m
car	pilas-engine/declaraciones/phaser.d.ts	/^                car(x: number, y: number, width: number, height: number, wheelSize: number): MatterJS.CompositeType;$/;"	m
cargar_animaciones	pilas-engine/modos/modo_ejecucion.ts	/^  private cargar_animaciones(datos: any) {$/;"	m
catalog	pilas-engine/declaraciones/phaser.d.ts	/^        catalog: Product[];$/;"	m
cellHeight	pilas-engine/declaraciones/phaser.d.ts	/^            cellHeight: number;$/;"	m
cellWidth	pilas-engine/declaraciones/phaser.d.ts	/^            cellWidth: number;$/;"	m
center	pilas-engine/declaraciones/phaser.d.ts	/^                center: Phaser.Math.Vector2;$/;"	m
centerDiff	pilas-engine/declaraciones/phaser.d.ts	/^                centerDiff: Phaser.Math.Vector2;$/;"	m
centerOfMass	pilas-engine/declaraciones/phaser.d.ts	/^                    readonly centerOfMass: Phaser.Math.Vector2;$/;"	m
centerOfMass	pilas-engine/declaraciones/phaser.d.ts	/^                readonly centerOfMass: Phaser.Math.Vector2;$/;"	m
centerOn	pilas-engine/declaraciones/phaser.d.ts	/^                centerOn(x: number, y: number): this;$/;"	m
centerOnX	pilas-engine/declaraciones/phaser.d.ts	/^                centerOnX(x: number): this;$/;"	m
centerOnY	pilas-engine/declaraciones/phaser.d.ts	/^                centerOnY(y: number): this;$/;"	m
centerToBounds	pilas-engine/declaraciones/phaser.d.ts	/^                centerToBounds(): this;$/;"	m
centerToSize	pilas-engine/declaraciones/phaser.d.ts	/^                centerToSize(): this;$/;"	m
centerX	pilas-engine/declaraciones/phaser.d.ts	/^                    centerX: number;$/;"	m
centerX	pilas-engine/declaraciones/phaser.d.ts	/^                readonly centerX: number;$/;"	m
centerX	pilas-engine/declaraciones/phaser.d.ts	/^            centerX: number;$/;"	m
centerY	pilas-engine/declaraciones/phaser.d.ts	/^                    centerY: number;$/;"	m
centerY	pilas-engine/declaraciones/phaser.d.ts	/^                readonly centerY: number;$/;"	m
centerY	pilas-engine/declaraciones/phaser.d.ts	/^            centerY: number;$/;"	m
centro	pilas-engine/actores/-actor-base.ts	/^      centro: 0.5,$/;"	m
centro	pilas-engine/modos/actor_en_modo_edicion.ts	/^  centro: Phaser.GameObjects.Graphics;$/;"	m
centro_x	pilas-engine/actores/-actor-base.ts	/^      centro_x: this.centro_x,$/;"	m
centro_x	pilas-engine/actores/-actor-base.ts	/^    centro_x: 0.5,$/;"	m
centro_x	pilas-engine/actores/-actor-base.ts	/^  get centro_x() {$/;"	m
centro_x	pilas-engine/actores/-actor-base.ts	/^  set centro_x(x) {$/;"	m
centro_y	pilas-engine/actores/-actor-base.ts	/^      centro_y: this.centro_y,$/;"	m
centro_y	pilas-engine/actores/-actor-base.ts	/^    centro_y: 0.5,$/;"	m
centro_y	pilas-engine/actores/-actor-base.ts	/^  get centro_y() {$/;"	m
centro_y	pilas-engine/actores/-actor-base.ts	/^  set centro_y(y) {$/;"	m
centro_y	pilas-engine/actores/robot.ts	/^    centro_y: 1$/;"	m
chain	pilas-engine/declaraciones/phaser.d.ts	/^                chain(composite: MatterJS.CompositeType, xOffsetA: number, yOffsetA: number, xOffsetB: number, yOffsetB: number, options?: Phaser.Types.Physics.Matter.MatterConstraintConfig): MatterJS.CompositeType;$/;"	m
chain	pilas-engine/declaraciones/phaser.d.ts	/^            chain(key: string | Phaser.Animations.Animation | Phaser.Types.Animations.PlayAnimationConfig | string[] | Phaser.Animations.Animation[] | Phaser.Types.Animations.PlayAnimationConfig[]): Phaser.GameObjects.GameObject;$/;"	m
chain	pilas-engine/declaraciones/phaser.d.ts	/^            chain(key: string | Phaser.Animations.Animation | Phaser.Types.Animations.PlayAnimationConfig | string[] | Phaser.Animations.Animation[] | Phaser.Types.Animations.PlayAnimationConfig[]): this;$/;"	m
changeSource	pilas-engine/declaraciones/phaser.d.ts	/^                    changeSource(source: Phaser.Types.GameObjects.Particles.EdgeZoneSource): this;$/;"	m
changeSource	pilas-engine/declaraciones/phaser.d.ts	/^            changeSource(key: string, autoplay?: boolean, loop?: boolean, markerIn?: number, markerOut?: number): this;$/;"	m
char	pilas-engine/declaraciones/phaser.d.ts	/^                    char: string;$/;"	m
charCode	pilas-engine/declaraciones/phaser.d.ts	/^                    charCode: number;$/;"	m
character_map_key_array	pilas-engine/libs/spriter.ts	/^  character_map_key_array: string[] = [];$/;"	m
character_map_keys	pilas-engine/libs/spriter.ts	/^  character_map_keys: string[];$/;"	m
character_map_map	pilas-engine/libs/spriter.ts	/^  character_map_map: { [key: string]: CharacterMap };$/;"	m
characters	pilas-engine/declaraciones/phaser.d.ts	/^                    characters: Phaser.Types.GameObjects.BitmapText.BitmapTextCharacter[];$/;"	m
chars	pilas-engine/declaraciones/phaser.d.ts	/^                    chars: string;$/;"	m
chars	pilas-engine/declaraciones/phaser.d.ts	/^                    chars: {[key: number]:  Phaser.Types.GameObjects.BitmapText.BitmapFontCharacterData};$/;"	m
charsPerRow	pilas-engine/declaraciones/phaser.d.ts	/^                    charsPerRow: number;$/;"	m
checkAPI	pilas-engine/declaraciones/phaser.d.ts	/^        checkAPI(api: string): boolean;$/;"	m
checkBounds	pilas-engine/declaraciones/phaser.d.ts	/^                checkBounds(emitter: Phaser.GameObjects.Particles.ParticleEmitter): void;$/;"	m
checkCollision	pilas-engine/declaraciones/phaser.d.ts	/^                checkCollision: Phaser.Types.Physics.Arcade.ArcadeBodyCollision;$/;"	m
checkCollision	pilas-engine/declaraciones/phaser.d.ts	/^                checkCollision: Phaser.Types.Physics.Arcade.CheckCollisionObject;$/;"	m
checkDown	pilas-engine/declaraciones/phaser.d.ts	/^                checkDown(key: Phaser.Input.Keyboard.Key, duration?: number): boolean;$/;"	m
checkFrame	pilas-engine/declaraciones/phaser.d.ts	/^            checkFrame(index: number): boolean;$/;"	m
checkKey	pilas-engine/declaraciones/phaser.d.ts	/^            checkKey(key: string): boolean;$/;"	m
checkQueue	pilas-engine/declaraciones/phaser.d.ts	/^            checkQueue: boolean;$/;"	m
checkShaderMax	pilas-engine/declaraciones/phaser.d.ts	/^                function checkShaderMax(gl: WebGLRenderingContext, maxTextures: number): number;$/;"	f
checkWorldBounds	pilas-engine/declaraciones/phaser.d.ts	/^                checkWorldBounds(): boolean;$/;"	m
childCanRender	pilas-engine/declaraciones/phaser.d.ts	/^            childCanRender(child: Phaser.GameObjects.Bob): boolean;$/;"	m
children	pilas-engine/declaraciones/phaser.d.ts	/^            children: Phaser.Structs.List<Phaser.GameObjects.Bob>;$/;"	m
children	pilas-engine/declaraciones/phaser.d.ts	/^            children: Phaser.Structs.Set<Phaser.GameObjects.GameObject>;$/;"	m
children	pilas-engine/declaraciones/phaser.d.ts	/^        children: Phaser.GameObjects.DisplayList;$/;"	m
chispa	pilas-engine/actores/chispa.ts	/^class chispa extends Actor {$/;"	c
chooseContext	pilas-engine/declaraciones/phaser.d.ts	/^        chooseContext(options?: ChooseContextConfig): this;$/;"	m
chrome	pilas-engine/declaraciones/phaser.d.ts	/^            chrome: boolean;$/;"	m
chromeOS	pilas-engine/declaraciones/phaser.d.ts	/^            chromeOS: boolean;$/;"	m
chromeVersion	pilas-engine/declaraciones/phaser.d.ts	/^            chromeVersion: number;$/;"	m
circle	pilas-engine/declaraciones/phaser.d.ts	/^                circle(x: number, y: number, radius: number, options?: Phaser.Types.Physics.Matter.MatterBodyConfig, maxSides?: number): MatterJS.BodyType;$/;"	m
circle	pilas-engine/declaraciones/phaser.d.ts	/^            circle(x?: number, y?: number, radius?: number, fillColor?: number, fillAlpha?: number): Phaser.GameObjects.Arc;$/;"	m
circleBodyIntersects	pilas-engine/declaraciones/phaser.d.ts	/^                circleBodyIntersects(circle: Phaser.Physics.Arcade.Body, body: Phaser.Physics.Arcade.Body): boolean;$/;"	m
circleTo	pilas-engine/declaraciones/phaser.d.ts	/^            circleTo(radius: number, clockwise?: boolean, rotation?: number): this;$/;"	m
clampX	pilas-engine/declaraciones/phaser.d.ts	/^                clampX(x: number): number;$/;"	m
clampY	pilas-engine/declaraciones/phaser.d.ts	/^                clampY(y: number): number;$/;"	m
clase	pilas-engine/comportamientos.ts	/^        clase: clase$/;"	m
clase	pilas-engine/habilidades.ts	/^        clase: clase$/;"	m
clases	pilas-engine/modos/modo_ejecucion.ts	/^  clases: {};$/;"	m
classType	pilas-engine/declaraciones/phaser.d.ts	/^                classType: Function;$/;"	m
classType	pilas-engine/declaraciones/phaser.d.ts	/^            classType: Function;$/;"	m
classes	pilas-engine/declaraciones/phaser.d.ts	/^                classes: Phaser.Structs.Map<string, Class>;$/;"	m
clear	pilas-engine/declaraciones/phaser.d.ts	/^                clear(): void;$/;"	m
clear	pilas-engine/declaraciones/phaser.d.ts	/^            clear(): Phaser.Structs.Map<K, V>;$/;"	m
clear	pilas-engine/declaraciones/phaser.d.ts	/^            clear(): Phaser.Structs.Set<T>;$/;"	m
clear	pilas-engine/declaraciones/phaser.d.ts	/^            clear(): this;$/;"	m
clear	pilas-engine/declaraciones/phaser.d.ts	/^            clear(): void;$/;"	m
clear	pilas-engine/declaraciones/phaser.d.ts	/^            clear(gameObject: Phaser.GameObjects.GameObject, skipQueue?: boolean): Phaser.GameObjects.GameObject;$/;"	m
clear	pilas-engine/declaraciones/phaser.d.ts	/^            clear(removeFromScene?: boolean, destroyChild?: boolean): this;$/;"	m
clear	pilas-engine/declaraciones/phaser.d.ts	/^            clear(x?: number, y?: number, width?: number, height?: number): Phaser.Textures.CanvasTexture;$/;"	m
clearAlpha	pilas-engine/declaraciones/phaser.d.ts	/^                clearAlpha(): this;$/;"	m
clearAlpha	pilas-engine/declaraciones/phaser.d.ts	/^            clearAlpha(): this;$/;"	m
clearBeforeRender	pilas-engine/declaraciones/phaser.d.ts	/^            readonly clearBeforeRender: boolean;$/;"	m
clearCaptures	pilas-engine/declaraciones/phaser.d.ts	/^                clearCaptures(): this;$/;"	m
clearCaptures	pilas-engine/declaraciones/phaser.d.ts	/^                clearCaptures(): void;$/;"	m
clearFrame	pilas-engine/declaraciones/phaser.d.ts	/^                    clearFrame(target: Phaser.Renderer.WebGL.RenderTarget, clearAlpha?: boolean): void;$/;"	m
clearFrame	pilas-engine/declaraciones/phaser.d.ts	/^                clearFrame(target: Phaser.Renderer.WebGL.RenderTarget, clearAlpha?: boolean): this;$/;"	m
clearMask	pilas-engine/declaraciones/phaser.d.ts	/^                clearMask(): void;$/;"	m
clearMask	pilas-engine/declaraciones/phaser.d.ts	/^                clearMask(destroyMask?: boolean): this;$/;"	m
clearMask	pilas-engine/declaraciones/phaser.d.ts	/^            clearMask(destroyMask?: boolean): this;$/;"	m
clearNormalMap	pilas-engine/declaraciones/phaser.d.ts	/^                clearNormalMap(): void;$/;"	m
clearPendingEvents	pilas-engine/declaraciones/phaser.d.ts	/^            clearPendingEvents(): this;$/;"	m
clearTextureZero	pilas-engine/declaraciones/phaser.d.ts	/^                clearTextureZero(): void;$/;"	m
clearTint	pilas-engine/declaraciones/phaser.d.ts	/^                clearTint(): this;$/;"	m
clearTint	pilas-engine/declaraciones/phaser.d.ts	/^            clearTint(): this;$/;"	m
clockwise	pilas-engine/declaraciones/phaser.d.ts	/^                    clockwise: boolean;$/;"	m
clockwise	pilas-engine/declaraciones/phaser.d.ts	/^                clockwise: boolean;$/;"	m
clockwise	pilas-engine/declaraciones/phaser.d.ts	/^            clockwise: boolean;$/;"	m
clonar	pilas-engine/pilas.ts	/^  clonar(nombre: string) {$/;"	m
clonar_actor_por_nombre	pilas-engine/modos/modo_ejecucion.ts	/^  clonar_actor_por_nombre(nombre: string) {$/;"	m
clonar_en	pilas-engine/pilas.ts	/^  clonar_en(nombre: string, x: number, y: number) {$/;"	m
clonar_en_posicion_al_azar	pilas-engine/pilas.ts	/^  clonar_en_posicion_al_azar(nombre: string) {$/;"	m
clone	pilas-engine/declaraciones/phaser.d.ts	/^            clone(): Phaser.Display.Color;$/;"	m
clone	pilas-engine/declaraciones/phaser.d.ts	/^            clone(): Phaser.Math.Matrix3;$/;"	m
clone	pilas-engine/declaraciones/phaser.d.ts	/^            clone(): Phaser.Math.Matrix4;$/;"	m
clone	pilas-engine/declaraciones/phaser.d.ts	/^            clone(): Phaser.Math.Vector2;$/;"	m
clone	pilas-engine/declaraciones/phaser.d.ts	/^            clone(): Phaser.Math.Vector3;$/;"	m
clone	pilas-engine/declaraciones/phaser.d.ts	/^            clone(): Phaser.Math.Vector4;$/;"	m
clone	pilas-engine/declaraciones/phaser.d.ts	/^            clone(): Phaser.Textures.Frame;$/;"	m
clone	pilas-engine/laser.ts	/^  clone() {$/;"	m
cloneFrame	pilas-engine/declaraciones/phaser.d.ts	/^            cloneFrame(key: string, frame: string | number): Phaser.Textures.Frame;$/;"	m
closePath	pilas-engine/declaraciones/phaser.d.ts	/^            closePath(): this;$/;"	m
closePath	pilas-engine/declaraciones/phaser.d.ts	/^            closePath: boolean;$/;"	m
closest	pilas-engine/declaraciones/phaser.d.ts	/^                closest(source: any, targets?: Phaser.Physics.Arcade.Body[] | Phaser.Physics.Arcade.StaticBody[] | Phaser.GameObjects.GameObject[]): Phaser.Physics.Arcade.Body | Phaser.Physics.Arcade.StaticBody | Phaser.GameObjects.GameObject;$/;"	m
code	pilas-engine/declaraciones/phaser.d.ts	/^                    code: number;$/;"	m
codigo	pilas-engine/mensajes.ts	/^      codigo: datos.codigo,$/;"	m
codigo	pilas-engine/modos/modo_cargador.ts	/^                codigo: `$/;"	m
codigo	pilas-engine/modos/modo_cargador.ts	/^        codigo: `$/;"	m
codigo	pilas-engine/modos/modo_ejecucion.ts	/^      codigo: this.codigo,$/;"	m
codigo	pilas-engine/modos/modo_ejecucion.ts	/^  codigo: any;$/;"	m
codigos	pilas-engine/modos/modo_cargador.ts	/^          codigos: {$/;"	m
colisiona_con_etiqueta	pilas-engine/sensor.ts	/^  colisiona_con_etiqueta(etiqueta: string) {$/;"	m
colisiona_con_un_actor_de_etiqueta	pilas-engine/laser.ts	/^  colisiona_con_un_actor_de_etiqueta(etiqueta: string) {$/;"	m
colisiones	pilas-engine/actores/-actor-base.ts	/^  colisiones: Actor[];$/;"	m
colisiones	pilas-engine/sensor.ts	/^  get colisiones() {$/;"	m
colisiones_con_la_etiqueta	pilas-engine/sensor.ts	/^  colisiones_con_la_etiqueta(etiqueta: string) {$/;"	m
collide	pilas-engine/declaraciones/phaser.d.ts	/^                collide(object1: Phaser.Types.Physics.Arcade.ArcadeColliderType, object2?: Phaser.Types.Physics.Arcade.ArcadeColliderType, collideCallback?: ArcadePhysicsCallback, processCallback?: ArcadePhysicsCallback, callbackContext?: any): boolean;$/;"	m
collideBottom	pilas-engine/declaraciones/phaser.d.ts	/^                collideBottom: boolean;$/;"	m
collideCallback	pilas-engine/declaraciones/phaser.d.ts	/^                collideCallback: ArcadePhysicsCallback;$/;"	m
collideDown	pilas-engine/declaraciones/phaser.d.ts	/^            collideDown: boolean;$/;"	m
collideIndexes	pilas-engine/declaraciones/phaser.d.ts	/^            collideIndexes: any[];$/;"	m
collideLeft	pilas-engine/declaraciones/phaser.d.ts	/^                collideLeft: boolean;$/;"	m
collideLeft	pilas-engine/declaraciones/phaser.d.ts	/^            collideLeft: boolean;$/;"	m
collideRight	pilas-engine/declaraciones/phaser.d.ts	/^                collideRight: boolean;$/;"	m
collideRight	pilas-engine/declaraciones/phaser.d.ts	/^            collideRight: boolean;$/;"	m
collideSpriteVsTilemapLayer	pilas-engine/declaraciones/phaser.d.ts	/^                collideSpriteVsTilemapLayer(sprite: Phaser.GameObjects.GameObject, tilemapLayer: Phaser.Tilemaps.TilemapLayer, collideCallback?: ArcadePhysicsCallback, processCallback?: ArcadePhysicsCallback, callbackContext?: any, overlapOnly?: boolean): boolean;$/;"	m
collideTiles	pilas-engine/declaraciones/phaser.d.ts	/^                collideTiles(sprite: Phaser.GameObjects.GameObject, tiles: Phaser.Tilemaps.Tile[], collideCallback?: ArcadePhysicsCallback, processCallback?: ArcadePhysicsCallback, callbackContext?: any): boolean;$/;"	m
collideTop	pilas-engine/declaraciones/phaser.d.ts	/^                collideTop: boolean;$/;"	m
collideUp	pilas-engine/declaraciones/phaser.d.ts	/^            collideUp: boolean;$/;"	m
collideWorldBounds	pilas-engine/declaraciones/phaser.d.ts	/^                collideWorldBounds: boolean;$/;"	m
collideWorldBounds	pilas-engine/declaraciones/phaser.d.ts	/^                readonly collideWorldBounds: boolean;$/;"	m
collided	pilas-engine/declaraciones/phaser.d.ts	/^                    collided: boolean;$/;"	m
collider	pilas-engine/declaraciones/phaser.d.ts	/^                collider(object1: Phaser.GameObjects.GameObject | Phaser.GameObjects.GameObject[] | Phaser.GameObjects.Group | Phaser.GameObjects.Group[], object2: Phaser.GameObjects.GameObject | Phaser.GameObjects.GameObject[] | Phaser.GameObjects.Group | Phaser.GameObjects.Group[], collideCallback?: ArcadePhysicsCallback, processCallback?: ArcadePhysicsCallback, callbackContext?: any): Phaser.Physics.Arcade.Collider;$/;"	m
colliders	pilas-engine/declaraciones/phaser.d.ts	/^                colliders: Phaser.Structs.ProcessQueue<Phaser.Physics.Arcade.Collider>;$/;"	m
collides	pilas-engine/declaraciones/phaser.d.ts	/^            readonly collides: boolean;$/;"	m
collision	pilas-engine/declaraciones/phaser.d.ts	/^                    collision: Phaser.Types.Physics.Matter.MatterCollisionData;$/;"	m
collision	pilas-engine/declaraciones/phaser.d.ts	/^            collision: object;$/;"	m
collisionCallback	pilas-engine/declaraciones/phaser.d.ts	/^            collisionCallback: Function;$/;"	m
collisionCallbackContext	pilas-engine/declaraciones/phaser.d.ts	/^            collisionCallbackContext: object;$/;"	m
collisionPoint	pilas-engine/laser.ts	/^  static collisionPoint(rayA: { pointInBounds: (arg0: vec2) => any }, rayB: { pointInBounds: (arg0: vec2) => any }) {$/;"	m
color	pilas-engine/actores/-actor-base.ts	/^  set color(color: string) {$/;"	m
color	pilas-engine/actores/boton.ts	/^    color: "black",$/;"	m
color	pilas-engine/actores/boton_activable.ts	/^    color: "black",$/;"	m
color	pilas-engine/declaraciones/phaser.d.ts	/^                color: number;$/;"	m
color	pilas-engine/declaraciones/phaser.d.ts	/^            color: Phaser.Display.Color;$/;"	m
color	pilas-engine/declaraciones/phaser.d.ts	/^            color: Phaser.Display.RGB;$/;"	m
color	pilas-engine/declaraciones/phaser.d.ts	/^            color: string;$/;"	m
color	pilas-engine/declaraciones/phaser.d.ts	/^            readonly color: number;$/;"	m
color32	pilas-engine/declaraciones/phaser.d.ts	/^            readonly color32: number;$/;"	m
colorMatrix	pilas-engine/declaraciones/phaser.d.ts	/^                    colorMatrix: Phaser.Display.ColorMatrix;$/;"	m
colorMatrixShader	pilas-engine/declaraciones/phaser.d.ts	/^                    colorMatrixShader: Phaser.Renderer.WebGL.WebGLShader;$/;"	m
color_de_texto	pilas-engine/actores/-actor-base.ts	/^      color_de_texto: this._color_de_texto,$/;"	m
colores	pilas-engine/colores.ts	/^  get colores() {$/;"	m
colores	pilas-engine/pilas.ts	/^  colores: Colores;$/;"	m
colors	pilas-engine/declaraciones/phaser.d.ts	/^            colors: Uint32Array;$/;"	m
columns	pilas-engine/declaraciones/phaser.d.ts	/^            readonly columns: number;$/;"	m
combinar_propiedades	pilas-engine/utilidades.ts	/^  combinar_propiedades(propiedades_iniciales, propiedades) {$/;"	m
combine	pilas-engine/libs/spriter.ts	/^  static combine(a, b, out) {$/;"	m
combos	pilas-engine/declaraciones/phaser.d.ts	/^                combos: Phaser.Input.Keyboard.KeyCombo[];$/;"	m
commandBuffer	pilas-engine/declaraciones/phaser.d.ts	/^            commandBuffer: any[];$/;"	m
compare	pilas-engine/libs/spriter.ts	/^  static compare(a: Keyframe, b: Keyframe): number {$/;"	m
compareNum	pilas-engine/laser.ts	/^function compareNum(a: number, b: number, leniency = 0.00001) {$/;"	f
completar_foto_detallando_actores_nuevos_y_eliminados	pilas-engine/modos/modo_pausa.ts	/^  completar_foto_detallando_actores_nuevos_y_eliminados(foto) {$/;"	m
complete	pilas-engine/declaraciones/phaser.d.ts	/^            complete(): Phaser.GameObjects.GameObject;$/;"	m
complete	pilas-engine/declaraciones/phaser.d.ts	/^            complete(delay?: number): this;$/;"	m
complete	pilas-engine/declaraciones/phaser.d.ts	/^            complete: boolean;$/;"	m
completeDelay	pilas-engine/declaraciones/phaser.d.ts	/^            completeDelay: number;$/;"	m
completeHandler	pilas-engine/declaraciones/phaser.d.ts	/^            completeHandler(): void;$/;"	m
comportamiento	pilas-engine/comportamientos.ts	/^        comportamiento: h$/;"	m
comportamientos	pilas-engine/pilas.ts	/^  comportamientos: Comportamientos;$/;"	m
composite	pilas-engine/declaraciones/phaser.d.ts	/^                composite: MatterJS.CompositeFactory;$/;"	m
composites	pilas-engine/declaraciones/phaser.d.ts	/^                composites: MatterJS.CompositesFactory;$/;"	m
compressed	pilas-engine/declaraciones/phaser.d.ts	/^                compressed: boolean;$/;"	m
compression	pilas-engine/declaraciones/phaser.d.ts	/^                compression: Phaser.Types.Renderer.WebGL.WebGLTextureCompression;$/;"	m
compressionAlgorithm	pilas-engine/declaraciones/phaser.d.ts	/^            compressionAlgorithm: number;$/;"	m
computeAngularVelocity	pilas-engine/declaraciones/phaser.d.ts	/^                computeAngularVelocity(body: Phaser.Physics.Arcade.Body, delta: number): void;$/;"	m
computeVelocity	pilas-engine/declaraciones/phaser.d.ts	/^                computeVelocity(body: Phaser.Physics.Arcade.Body, delta: number): void;$/;"	m
computeVelocity	pilas-engine/declaraciones/phaser.d.ts	/^                computeVelocity(emitter: Phaser.GameObjects.Particles.ParticleEmitter, delta: number, step: number, processors: any[]): void;$/;"	m
con_borde	pilas-engine/actores/-actor-base.ts	/^  set con_borde(con_borde: boolean) {$/;"	m
con_error	pilas-engine/modos/modo_ejecucion.ts	/^  con_error: boolean;$/;"	m
conectar	pilas-engine/eventos.ts	/^  conectar(nombre_del_evento: string, funcion) {$/;"	m
conectar	pilas-engine/eventos_de_escena.ts	/^  conectar(nombre_del_evento: string, funcion) {$/;"	m
conectar_eventos	pilas-engine/actores/deslizador.ts	/^  conectar_eventos() {$/;"	m
conectar_eventos	pilas-engine/modos/modo_ejecucion.ts	/^  private conectar_eventos() {$/;"	m
conectar_eventos	pilas-engine/modos/modo_error.ts	/^  conectar_eventos() {$/;"	m
conectar_eventos_de_teclado	pilas-engine/modos/modo_deprecated.ts	/^  private conectar_eventos_de_teclado() {$/;"	m
conectar_eventos_de_teclado	pilas-engine/modos/modo_editor.ts	/^  private conectar_eventos_de_teclado() {$/;"	m
conectar_eventos_del_mouse	pilas-engine/modos/actor_en_modo_edicion.ts	/^  private conectar_eventos_del_mouse() {$/;"	m
conectar_eventos_para_activar_zoom	pilas-engine/modos/modo_editor.ts	/^  conectar_eventos_para_activar_zoom() {$/;"	m
conectar_eventos_para_desplazar_pantalla	pilas-engine/modos/modo_editor.ts	/^  conectar_eventos_para_desplazar_pantalla() {$/;"	m
conectar_eventos_resize	pilas-engine/modos/modo_editor.ts	/^  conectar_eventos_resize() {$/;"	m
conectar_movimiento_del_mouse	pilas-engine/modos/modo_deprecated.ts	/^  private conectar_movimiento_del_mouse() {$/;"	m
conectar_teclas	pilas-engine/control.ts	/^  private conectar_teclas() {$/;"	m
conejo	pilas-engine/actores.ts	/^  conejo() {$/;"	m
conejo	pilas-engine/actores/conejo.ts	/^class conejo extends Actor {$/;"	c
conexiones	pilas-engine/eventos_de_escena.ts	/^  conexiones: any;$/;"	m
config	pilas-engine/declaraciones/phaser.d.ts	/^                config: Phaser.Types.Physics.Arcade.ArcadeWorldConfig;$/;"	m
config	pilas-engine/declaraciones/phaser.d.ts	/^                config: Phaser.Types.Physics.Matter.MatterWorldConfig;$/;"	m
config	pilas-engine/declaraciones/phaser.d.ts	/^                config: Phaser.Types.Renderer.WebGL.WebGLPipelineConfig;$/;"	m
config	pilas-engine/declaraciones/phaser.d.ts	/^                config: object;$/;"	m
config	pilas-engine/declaraciones/phaser.d.ts	/^            config: Phaser.Core.Config;$/;"	m
config	pilas-engine/declaraciones/phaser.d.ts	/^            config: any;$/;"	m
config	pilas-engine/declaraciones/phaser.d.ts	/^            config: string | Phaser.Types.Scenes.SettingsConfig;$/;"	m
config	pilas-engine/declaraciones/phaser.d.ts	/^        readonly config: Phaser.Core.Config;$/;"	m
configFastMap	pilas-engine/declaraciones/phaser.d.ts	/^                configFastMap: object;$/;"	m
configOpMap	pilas-engine/declaraciones/phaser.d.ts	/^                configOpMap: object;$/;"	m
confirmedActive	pilas-engine/declaraciones/phaser.d.ts	/^                    confirmedActive: boolean;$/;"	m
conjugate	pilas-engine/declaraciones/phaser.d.ts	/^            conjugate(): Phaser.Math.Quaternion;$/;"	m
connected	pilas-engine/declaraciones/phaser.d.ts	/^                connected: boolean;$/;"	m
constrain	pilas-engine/declaraciones/phaser.d.ts	/^            constrain(width?: number, height?: number, fit?: boolean): this;$/;"	m
constraint	pilas-engine/declaraciones/phaser.d.ts	/^                constraint(bodyA: MatterJS.BodyType, bodyB: MatterJS.BodyType, length?: number, stiffness?: number, options?: Phaser.Types.Physics.Matter.MatterConstraintConfig): MatterJS.ConstraintType;$/;"	m
constraint	pilas-engine/declaraciones/phaser.d.ts	/^                constraint: MatterJS.ConstraintFactory;$/;"	m
constraint	pilas-engine/declaraciones/phaser.d.ts	/^                constraint: MatterJS.ConstraintType;$/;"	m
constructor	pilas-engine/actores.ts	/^  constructor(pilas: Pilas) {$/;"	m
constructor	pilas-engine/actores/-actor-base.ts	/^  constructor(pilas: Pilas) {$/;"	m
constructor	pilas-engine/animacion_de_propiedad.ts	/^  constructor(pilas: Pilas, actor: Actor, tipo: Tipo = Tipo.lineal, veces: number, duraci√≥n: number) {$/;"	m
constructor	pilas-engine/animacion_nula.ts	/^  constructor() {$/;"	m
constructor	pilas-engine/animaciones.ts	/^  constructor(pilas: Pilas) {$/;"	m
constructor	pilas-engine/automata.ts	/^  constructor(actor: Actor) {$/;"	m
constructor	pilas-engine/camara.ts	/^  constructor(pilas: Pilas) {$/;"	m
constructor	pilas-engine/colores.ts	/^  constructor(pilas: Pilas) {$/;"	m
constructor	pilas-engine/comportamientos.ts	/^  constructor(pilas) {$/;"	m
constructor	pilas-engine/comportamientos/-comportamiento.ts	/^  constructor(pilas: Pilas, actor: Actor) {$/;"	m
constructor	pilas-engine/control.ts	/^  constructor(gamepad, indice) {$/;"	m
constructor	pilas-engine/control.ts	/^  constructor(pilas: Pilas) {$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                    constructor(camera: Phaser.Cameras.Scene2D.Camera);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                    constructor(config: Phaser.Types.Renderer.WebGL.WebGLPipelineConfig);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                    constructor(source: Phaser.Types.GameObjects.Particles.DeathZoneSource, killOnEnter: boolean);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                    constructor(source: Phaser.Types.GameObjects.Particles.EdgeZoneSource, quantity: number, stepRate: number, yoyo?: boolean, seamless?: boolean);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                    constructor(source: Phaser.Types.GameObjects.Particles.RandomZoneSource);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(a?: number, b?: number, c?: number, d?: number, tx?: number, ty?: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(config: Phaser.Types.Cameras.Controls.FixedKeyControlConfig);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(config: Phaser.Types.Cameras.Controls.SmoothedKeyControlConfig);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(config: Phaser.Types.GameObjects.Particles.ParticleEmitterConfig, key: string, defaultValue: number, emitOnly?: boolean);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(config: Phaser.Types.Renderer.WebGL.WebGLPipelineConfig);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(emitter: Phaser.GameObjects.Particles.ParticleEmitter);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(game: Phaser.Game);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(inputManager: Phaser.Input.InputManager);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(keyboardPlugin: Phaser.Input.Keyboard.KeyboardPlugin, keys: string | number[] | object[], config?: Phaser.Types.Input.Keyboard.KeyComboConfig);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(loader: Phaser.Loader.LoaderPlugin, key: string | Phaser.Types.Loader.FileTypes.AsepriteFileConfig, textureURL?: string | string[], atlasURL?: object | string, textureXhrSettings?: Phaser.Types.Loader.XHRSettingsObject, atlasXhrSettings?: Phaser.Types.Loader.XHRSettingsObject);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(loader: Phaser.Loader.LoaderPlugin, key: string | Phaser.Types.Loader.FileTypes.AtlasJSONFileConfig, textureURL?: string | string[], atlasURL?: object | string, textureXhrSettings?: Phaser.Types.Loader.XHRSettingsObject, atlasXhrSettings?: Phaser.Types.Loader.XHRSettingsObject);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(loader: Phaser.Loader.LoaderPlugin, key: string | Phaser.Types.Loader.FileTypes.AtlasXMLFileConfig, textureURL?: string | string[], atlasURL?: string, textureXhrSettings?: Phaser.Types.Loader.XHRSettingsObject, atlasXhrSettings?: Phaser.Types.Loader.XHRSettingsObject);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(loader: Phaser.Loader.LoaderPlugin, key: string | Phaser.Types.Loader.FileTypes.AudioFileConfig, urlConfig?: any, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject, audioContext?: AudioContext);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(loader: Phaser.Loader.LoaderPlugin, key: string | Phaser.Types.Loader.FileTypes.AudioFileConfig, urlConfig?: string, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(loader: Phaser.Loader.LoaderPlugin, key: string | Phaser.Types.Loader.FileTypes.AudioSpriteFileConfig, jsonURL: string, audioURL?: Object, audioConfig?: any, audioXhrSettings?: Phaser.Types.Loader.XHRSettingsObject, jsonXhrSettings?: Phaser.Types.Loader.XHRSettingsObject);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(loader: Phaser.Loader.LoaderPlugin, key: string | Phaser.Types.Loader.FileTypes.BinaryFileConfig, url?: string, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject, dataType?: any);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(loader: Phaser.Loader.LoaderPlugin, key: string | Phaser.Types.Loader.FileTypes.BitmapFontFileConfig, textureURL?: string | string[], fontDataURL?: string, textureXhrSettings?: Phaser.Types.Loader.XHRSettingsObject, fontDataXhrSettings?: Phaser.Types.Loader.XHRSettingsObject);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(loader: Phaser.Loader.LoaderPlugin, key: string | Phaser.Types.Loader.FileTypes.CSSFileConfig, url?: string, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(loader: Phaser.Loader.LoaderPlugin, key: string | Phaser.Types.Loader.FileTypes.GLSLFileConfig, url?: string, shaderType?: string, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(loader: Phaser.Loader.LoaderPlugin, key: string | Phaser.Types.Loader.FileTypes.HTMLFileConfig, url?: string, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(loader: Phaser.Loader.LoaderPlugin, key: string | Phaser.Types.Loader.FileTypes.HTMLTextureFileConfig, url?: string, width?: number, height?: number, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(loader: Phaser.Loader.LoaderPlugin, key: string | Phaser.Types.Loader.FileTypes.ImageFileConfig, url?: string | string[], xhrSettings?: Phaser.Types.Loader.XHRSettingsObject, frameConfig?: Phaser.Types.Loader.FileTypes.ImageFrameConfig);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(loader: Phaser.Loader.LoaderPlugin, key: string | Phaser.Types.Loader.FileTypes.JSONFileConfig, url?: object | string, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject, dataKey?: string);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(loader: Phaser.Loader.LoaderPlugin, key: string | Phaser.Types.Loader.FileTypes.JSONFileConfig, url?: string, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject, dataKey?: string);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(loader: Phaser.Loader.LoaderPlugin, key: string | Phaser.Types.Loader.FileTypes.MultiAtlasFileConfig, atlasURL?: string, path?: string, baseURL?: string, atlasXhrSettings?: Phaser.Types.Loader.XHRSettingsObject, textureXhrSettings?: Phaser.Types.Loader.XHRSettingsObject);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(loader: Phaser.Loader.LoaderPlugin, key: string | Phaser.Types.Loader.FileTypes.MultiScriptFileConfig, url?: string[], xhrSettings?: Phaser.Types.Loader.XHRSettingsObject);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(loader: Phaser.Loader.LoaderPlugin, key: string | Phaser.Types.Loader.FileTypes.OBJFileConfig, objURL?: string, matURL?: string, flipUV?: boolean, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(loader: Phaser.Loader.LoaderPlugin, key: string | Phaser.Types.Loader.FileTypes.PackFileConfig, url?: string, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject, dataKey?: string);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(loader: Phaser.Loader.LoaderPlugin, key: string | Phaser.Types.Loader.FileTypes.PluginFileConfig, url?: string, start?: boolean, mapping?: string, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(loader: Phaser.Loader.LoaderPlugin, key: string | Phaser.Types.Loader.FileTypes.SVGFileConfig, url?: string, svgConfig?: Phaser.Types.Loader.FileTypes.SVGSizeConfig, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(loader: Phaser.Loader.LoaderPlugin, key: string | Phaser.Types.Loader.FileTypes.SceneFileConfig, url?: string, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(loader: Phaser.Loader.LoaderPlugin, key: string | Phaser.Types.Loader.FileTypes.ScenePluginFileConfig, url?: string, systemKey?: string, sceneKey?: string, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(loader: Phaser.Loader.LoaderPlugin, key: string | Phaser.Types.Loader.FileTypes.ScriptFileConfig, url?: string, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(loader: Phaser.Loader.LoaderPlugin, key: string | Phaser.Types.Loader.FileTypes.SpriteSheetFileConfig, url?: string | string[], frameConfig?: Phaser.Types.Loader.FileTypes.ImageFrameConfig, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(loader: Phaser.Loader.LoaderPlugin, key: string | Phaser.Types.Loader.FileTypes.TextFileConfig, url?: string, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(loader: Phaser.Loader.LoaderPlugin, key: string | Phaser.Types.Loader.FileTypes.TilemapCSVFileConfig, url?: string, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(loader: Phaser.Loader.LoaderPlugin, key: string | Phaser.Types.Loader.FileTypes.TilemapImpactFileConfig, url?: string, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(loader: Phaser.Loader.LoaderPlugin, key: string | Phaser.Types.Loader.FileTypes.TilemapJSONFileConfig, url?: object | string, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(loader: Phaser.Loader.LoaderPlugin, key: string | Phaser.Types.Loader.FileTypes.UnityAtlasFileConfig, textureURL?: string | string[], atlasURL?: string, textureXhrSettings?: Phaser.Types.Loader.XHRSettingsObject, atlasXhrSettings?: Phaser.Types.Loader.XHRSettingsObject);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(loader: Phaser.Loader.LoaderPlugin, key: string | Phaser.Types.Loader.FileTypes.VideoFileConfig, urlConfig?: any, loadEvent?: string, asBlob?: boolean, noAudio?: boolean, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(loader: Phaser.Loader.LoaderPlugin, key: string | Phaser.Types.Loader.FileTypes.XMLFileConfig, url?: string, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(loader: Phaser.Loader.LoaderPlugin, key: string, entry: Phaser.Types.Loader.FileTypes.CompressedTextureFileEntry, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(manager: Phaser.GameObjects.Particles.ParticleEmitterManager, config: Phaser.Types.GameObjects.Particles.ParticleEmitterConfig);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(manager: Phaser.Input.Gamepad.GamepadPlugin, pad: Phaser.Types.Input.Gamepad.Pad);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(pad: Phaser.Input.Gamepad.Gamepad, index: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(pipeline: Phaser.Renderer.WebGL.WebGLPipeline, name: string, vertexShader: string, fragmentShader: string, attributes: Phaser.Types.Renderer.WebGL.WebGLPipelineAttributeConfig[]);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(plugin: Phaser.Input.Keyboard.KeyboardPlugin, keyCode: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(renderer: Phaser.Renderer.WebGL.WebGLRenderer);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(renderer: Phaser.Renderer.WebGL.WebGLRenderer, width: number, height: number, scale?: number, minFilter?: number, autoClear?: boolean, autoResize?: boolean);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(scene: Phaser.Scene);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(scene: Phaser.Scene, config: Phaser.Types.Physics.Arcade.ArcadeWorldConfig);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(scene: Phaser.Scene, config: Phaser.Types.Physics.Matter.MatterWorldConfig);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(scene: Phaser.Scene, graphicsGeometry: Phaser.GameObjects.Graphics);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(scene: Phaser.Scene, renderable: Phaser.GameObjects.GameObject);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(scene: Phaser.Scene, texture: string, frame?: string | number, emitters?: Phaser.Types.GameObjects.Particles.ParticleEmitterConfig | Phaser.Types.GameObjects.Particles.ParticleEmitterConfig[]);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(scene: Phaser.Scene, world: Phaser.Physics.Matter.World, options?: object);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(scene: Phaser.Scene, x: number, y: number, texture: string | Phaser.Textures.Texture, frame?: string | number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(sceneInputPlugin: Phaser.Input.InputPlugin);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(vertex1: Phaser.Geom.Mesh.Vertex, vertex2: Phaser.Geom.Mesh.Vertex, vertex3: Phaser.Geom.Mesh.Vertex);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(world: Phaser.Physics.Arcade.World);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(world: Phaser.Physics.Arcade.World, gameObject: Phaser.GameObjects.GameObject);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(world: Phaser.Physics.Arcade.World, overlapOnly: boolean, object1: Phaser.Types.Physics.Arcade.ArcadeColliderType, object2: Phaser.Types.Physics.Arcade.ArcadeColliderType, collideCallback: ArcadePhysicsCallback, processCallback: ArcadePhysicsCallback, callbackContext: any);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(world: Phaser.Physics.Arcade.World, scene: Phaser.Scene, children?: Phaser.GameObjects.GameObject[] | Phaser.Types.GameObjects.Group.GroupConfig | Phaser.Types.GameObjects.Group.GroupCreateConfig, config?: Phaser.Types.GameObjects.Group.GroupConfig | Phaser.Types.GameObjects.Group.GroupCreateConfig);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(world: Phaser.Physics.Arcade.World, scene: Phaser.Scene, children?: Phaser.GameObjects.GameObject[] | Phaser.Types.Physics.Arcade.PhysicsGroupConfig | Phaser.Types.GameObjects.Group.GroupCreateConfig, config?: Phaser.Types.Physics.Arcade.PhysicsGroupConfig | Phaser.Types.GameObjects.Group.GroupCreateConfig);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(world: Phaser.Physics.Matter.World);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(world: Phaser.Physics.Matter.World, tile: Phaser.Tilemaps.Tile, options?: Phaser.Types.Physics.Matter.MatterTileOptions);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(world: Phaser.Physics.Matter.World, x: number, y: number, texture: string | Phaser.Textures.Texture, frame?: string | number, options?: Phaser.Types.Physics.Matter.MatterBodyConfig);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(x: number, y: number, width: number, height: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(x: number, y: number, z: number, u: number, v: number, color?: number, alpha?: number, nx?: number, ny?: number, nz?: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^                constructor(x?: number | Phaser.Types.GameObjects.Particles.GravityWellConfig, y?: number, power?: number, epsilon?: number, gravity?: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(GameConfig?: Phaser.Types.Core.GameConfig);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(blitter: Phaser.GameObjects.Blitter, x: number, y: number, frame: string | number, visible: boolean);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(config: Phaser.Types.Time.TimerEventConfig);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(config?: Phaser.Types.Tilemaps.LayerDataConfig);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(config?: Phaser.Types.Tilemaps.MapDataConfig);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(config?: Phaser.Types.Tilemaps.ObjectLayerConfig);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(elements: V[]);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(elements?: T[]);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(game: Phaser.Game);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(game: Phaser.Game, config: Phaser.Types.Core.FPSConfig);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(game: Phaser.Game, config: object);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(game: Phaser.Game, sceneConfig: object);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(key: string, fragmentSrc?: string, vertexSrc?: string, uniforms?: any);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(layer: Phaser.Tilemaps.LayerData, index: number, x: number, y: number, width: number, height: number, baseWidth: number, baseHeight: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(loader: Phaser.Loader.LoaderPlugin, fileConfig: Phaser.Types.Loader.FileConfig);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(loader: Phaser.Loader.LoaderPlugin, type: string, key: string, files: Phaser.Loader.File[]);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(m?: Phaser.Math.Matrix3);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(m?: Phaser.Math.Matrix4);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(manager: Phaser.Animations.AnimationManager, key: string, config: Phaser.Types.Animations.Animation);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(manager: Phaser.Input.InputManager, id: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(manager: Phaser.Sound.BaseSoundManager, key: string, config?: Phaser.Types.Sound.SoundConfig);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(manager: Phaser.Sound.HTML5AudioSoundManager, key: string, config?: Phaser.Types.Sound.SoundConfig);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(manager: Phaser.Sound.NoAudioSoundManager, key: string, config?: Phaser.Types.Sound.SoundConfig);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(manager: Phaser.Sound.WebAudioSoundManager, key: string, config?: Phaser.Types.Sound.SoundConfig);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(manager: Phaser.Textures.TextureManager, key: string, source: HTMLCanvasElement, width: number, height: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(manager: Phaser.Textures.TextureManager, key: string, source: HTMLImageElement | HTMLCanvasElement | HTMLImageElement[] | HTMLCanvasElement[], width?: number, height?: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(manager: Phaser.Tweens.TweenManager);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(name: string, firstgid: number, tileWidth?: number, tileHeight?: number, tileMargin?: number, tileSpacing?: number, tileProperties?: object, tileData?: object, tileOffset?: object);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(name: string, firstgid: number, width?: number, height?: number, margin?: number, spacing?: number, properties?: object);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(p0: Phaser.Math.Vector2 | Phaser.Math.Vector2[], p1: Phaser.Math.Vector2, p2: Phaser.Math.Vector2, p3: Phaser.Math.Vector2);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(p0: Phaser.Math.Vector2 | number[], p1: Phaser.Math.Vector2, p2: Phaser.Math.Vector2);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(p0: Phaser.Math.Vector2 | number[], p1?: Phaser.Math.Vector2);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(parent: Phaser.GameObjects.GameObject);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(parent: Phaser.Tweens.TweenManager | Phaser.Tweens.Timeline, data: Phaser.Types.Tweens.TweenDataConfig[], targets: any[]);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(parent: any);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(parent: object, eventEmitter?: Phaser.Events.EventEmitter);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(pluginManager: Phaser.Plugins.PluginManager);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(points?: Phaser.Math.Vector2[] | number[] | number[][]);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(points?: string | number[] | Phaser.Types.Math.Vector2Like[]);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(red?: number, green?: number, blue?: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(red?: number, green?: number, blue?: number, alpha?: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, children?: Phaser.GameObjects.GameObject[] | Phaser.Types.GameObjects.Group.GroupConfig | Phaser.Types.GameObjects.Group.GroupCreateConfig, config?: Phaser.Types.GameObjects.Group.GroupConfig | Phaser.Types.GameObjects.Group.GroupCreateConfig);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, children?: Phaser.GameObjects.GameObject[]);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, config: string | Phaser.Types.Scenes.SettingsConfig);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, key: string | Phaser.Display.BaseShader, x?: number, y?: number, width?: number, height?: number, textures?: string[], textureData?: any);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, mapData: Phaser.Tilemaps.MapData);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, options?: Phaser.Types.GameObjects.Graphics.Options);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, path: Phaser.Curves.Path, x: number, y: number, texture: string | Phaser.Textures.Texture, frame?: string | number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, pluginManager: Phaser.Plugins.PluginManager, pluginKey: string);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, tilemap: Phaser.Tilemaps.Tilemap, layerIndex: number, tileset: string | string[] | Phaser.Tilemaps.Tileset | Phaser.Tilemaps.Tileset[], x?: number, y?: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, type: string);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, type?: string, data?: any);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, x: number, y: number, color?: number, radius?: number, intensity?: number, attenuation?: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, x: number, y: number, font: string, text?: string | string[], size?: number, align?: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, x: number, y: number, key?: string);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, x: number, y: number, text: string | string[], style: Phaser.Types.GameObjects.Text.TextStyle);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, x: number, y: number, texture: string | Phaser.Textures.Texture, frame?: string | number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, x: number, y: number, width: number, height: number, textureKey: string, frameKey?: string | number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, x: number, y: number, width?: number, height?: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, x: number, y: number, width?: number, height?: number, fillColor?: number, fillAlpha?: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, x?: number, y?: number, children?: Phaser.GameObjects.GameObject[]);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, x?: number, y?: number, curve?: Phaser.Curves.Curve, fillColor?: number, fillAlpha?: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, x?: number, y?: number, element?: Element | string, style?: string | any, innerText?: string);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, x?: number, y?: number, points?: any, fillColor?: number, fillAlpha?: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, x?: number, y?: number, points?: number, innerRadius?: number, outerRadius?: number, fillColor?: number, fillAlpha?: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, x?: number, y?: number, radius?: number, startAngle?: number, endAngle?: number, anticlockwise?: boolean, fillColor?: number, fillAlpha?: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, x?: number, y?: number, size?: number, height?: number, fillTop?: number, fillLeft?: number, fillRight?: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, x?: number, y?: number, size?: number, height?: number, reversed?: boolean, fillTop?: number, fillLeft?: number, fillRight?: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, x?: number, y?: number, texture?: string | Phaser.Textures.Texture, frame?: string | number, vertices?: number[], uvs?: number[], indicies?: number[], containsZ?: boolean, normals?: number[], colors?: number | number[], alphas?: number | number[]);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, x?: number, y?: number, texture?: string, frame?: string | number | null, points?: number | Phaser.Types.Math.Vector2Like[], horizontal?: boolean, colors?: number[], alphas?: number[]);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, x?: number, y?: number, texture?: string, frame?: string | number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, x?: number, y?: number, width?: number, height?: number, cellWidth?: number, cellHeight?: number, fillColor?: number, fillAlpha?: number, outlineFillColor?: number, outlineFillAlpha?: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, x?: number, y?: number, width?: number, height?: number, fillColor?: number, fillAlpha?: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, x?: number, y?: number, width?: number, height?: number, key?: string, frame?: string);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, x?: number, y?: number, x1?: number, y1?: number, x2?: number, y2?: number, strokeColor?: number, strokeAlpha?: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(scene: Phaser.Scene, x?: number, y?: number, x1?: number, y1?: number, x2?: number, y2?: number, x3?: number, y3?: number, fillColor?: number, fillAlpha?: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(seeds?: string | string[]);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(text: Phaser.GameObjects.Text, style: Phaser.Types.GameObjects.Text.TextStyle);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(texture: Phaser.Textures.Texture, name: number | string, sourceIndex: number, x: number, y: number, width: number, height: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(texture: Phaser.Textures.Texture, source: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement | Phaser.GameObjects.RenderTexture | WebGLTexture, width?: number, height?: number, flipY?: boolean);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(textureKey: string, textureFrame: string | number, index: number, frame: Phaser.Textures.Frame, isKeyFrame?: boolean);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(tilesets: Phaser.Tilemaps.Tileset[]);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(type: string);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(width?: number, height?: number, aspectMode?: number, parent?: any);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(x1?: number, y1?: number, x2?: number, y2?: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(x1?: number, y1?: number, x2?: number, y2?: number, x3?: number, y3?: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(x: number, y: number, radius: number, r: number, g: number, b: number, intensity: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(x?: number | Phaser.Types.Curves.EllipseCurveConfig, y?: number, xRadius?: number, yRadius?: number, startAngle?: number, endAngle?: number, clockwise?: boolean, rotation?: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(x?: number | Phaser.Types.Math.Vector2Like, y?: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(x?: number, y?: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(x?: number, y?: number, radius?: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(x?: number, y?: number, width?: number, height?: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(x?: number, y?: number, z?: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^            constructor(x?: number, y?: number, z?: number, w?: number);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^        constructor(GameConfig?: Phaser.Types.Core.GameConfig);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^        constructor(config: string | Phaser.Types.Scenes.SettingsConfig);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^        constructor(game: Phaser.Game);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^        constructor(plugin: Phaser.FacebookInstantGamesPlugin, data: any);$/;"	m
constructor	pilas-engine/declaraciones/phaser.d.ts	/^    constructor(definition: Object);$/;"	m
constructor	pilas-engine/depurador.ts	/^  constructor(pilas: Pilas) {$/;"	m
constructor	pilas-engine/escenas.ts	/^  constructor(pilas: Pilas) {$/;"	m
constructor	pilas-engine/escenas/-escena-base.ts	/^  constructor(pilas: Pilas) {$/;"	m
constructor	pilas-engine/eventos.ts	/^  constructor(pilas) {$/;"	m
constructor	pilas-engine/eventos_de_escena.ts	/^  constructor(pilas) {$/;"	m
constructor	pilas-engine/fisica.ts	/^  constructor(pilas: Pilas) {$/;"	m
constructor	pilas-engine/habilidades.ts	/^  constructor(pilas) {$/;"	m
constructor	pilas-engine/habilidades/-habilidad.ts	/^  constructor(pilas: Pilas, actor: Actor) {$/;"	m
constructor	pilas-engine/historia.ts	/^  constructor(pilas: Pilas) {$/;"	m
constructor	pilas-engine/huesos.ts	/^  constructor(pilas: Pilas, nombre_de_datos_json: string, nombre_de_atlas: string, contenedor: any) {$/;"	m
constructor	pilas-engine/laser.ts	/^  constructor(actor: Actor, nombre: string, rotacion: number, longitud: number) {$/;"	m
constructor	pilas-engine/laser.ts	/^  constructor(body: any, point: any, normal: any, verts: any) {$/;"	m
constructor	pilas-engine/laser.ts	/^  constructor(start: any, end: any) {$/;"	m
constructor	pilas-engine/laser.ts	/^  constructor(x = 0, y = x) {$/;"	m
constructor	pilas-engine/libs/spriter.ts	/^  constructor() {$/;"	m
constructor	pilas-engine/libs/spriter.ts	/^  constructor(data: Data) {$/;"	m
constructor	pilas-engine/libs/spriter.ts	/^  constructor(rad: number = 0) {$/;"	m
constructor	pilas-engine/libs/spriter.ts	/^  constructor(type: string) {$/;"	m
constructor	pilas-engine/libs/spriter.ts	/^  constructor(x: number = 0.0, y: number = 0.0) {$/;"	m
constructor	pilas-engine/mensajes.ts	/^  constructor(pilas: Pilas) {$/;"	m
constructor	pilas-engine/modos/actor_en_modo_edicion.ts	/^  constructor(pilas, scene, datos_del_actor) {$/;"	m
constructor	pilas-engine/modos/camara_en_modo_edicion.ts	/^  constructor(pilas, scene, x, y, ancho, alto) {$/;"	m
constructor	pilas-engine/modos/modo.ts	/^  constructor(data: any) {$/;"	m
constructor	pilas-engine/modos/modo_cargador.ts	/^  constructor() {$/;"	m
constructor	pilas-engine/modos/modo_deprecated.ts	/^  constructor() {$/;"	m
constructor	pilas-engine/modos/modo_editor.ts	/^  constructor() {$/;"	m
constructor	pilas-engine/modos/modo_ejecucion.ts	/^  constructor() {$/;"	m
constructor	pilas-engine/modos/modo_ejecucion_en_pausa.ts	/^  constructor() {$/;"	m
constructor	pilas-engine/modos/modo_error.ts	/^  constructor() {$/;"	m
constructor	pilas-engine/modos/modo_pausa.ts	/^  constructor() {$/;"	m
constructor	pilas-engine/pilas.ts	/^  constructor() {$/;"	m
constructor	pilas-engine/sensor.ts	/^  constructor(figura) {$/;"	m
constructor	pilas-engine/sonidos.ts	/^  constructor(pilas: Pilas) {$/;"	m
constructor	pilas-engine/utilidades.ts	/^  constructor(pilas: Pilas) {$/;"	m
consumePurchase	pilas-engine/declaraciones/phaser.d.ts	/^        consumePurchase(purchaseToken: string): this;$/;"	m
contador	pilas-engine/habilidades/oscilar-rotacion.ts	/^  contador: number = 0;$/;"	m
contador	pilas-engine/habilidades/oscilar-transparencia.ts	/^  contador: number = 0;$/;"	m
contador	pilas-engine/habilidades/oscilar-verticalmente.ts	/^  contador: number = 0;$/;"	m
contador	pilas-engine/modos/modo_cargador.ts	/^  contador: number;$/;"	m
container	pilas-engine/declaraciones/phaser.d.ts	/^            container(config: Phaser.Types.GameObjects.Container.ContainerConfig, addToScene?: boolean): Phaser.GameObjects.Container;$/;"	m
container	pilas-engine/declaraciones/phaser.d.ts	/^            container(x?: number, y?: number, children?: Phaser.GameObjects.GameObject | Phaser.GameObjects.GameObject[]): Phaser.GameObjects.Container;$/;"	m
contains	pilas-engine/declaraciones/phaser.d.ts	/^                    contains: Phaser.Types.GameObjects.Particles.DeathZoneSourceCallback;$/;"	m
contains	pilas-engine/declaraciones/phaser.d.ts	/^                contains(x: number, y: number, calcMatrix?: Phaser.GameObjects.Components.TransformMatrix): boolean;$/;"	m
contains	pilas-engine/declaraciones/phaser.d.ts	/^            contains(child: Phaser.GameObjects.GameObject): boolean;$/;"	m
contains	pilas-engine/declaraciones/phaser.d.ts	/^            contains(value: T): boolean;$/;"	m
contains	pilas-engine/declaraciones/phaser.d.ts	/^            contains(value: V): boolean;$/;"	m
contains	pilas-engine/declaraciones/phaser.d.ts	/^            contains(x: number, y: number): boolean;$/;"	m
containsImageIndex	pilas-engine/declaraciones/phaser.d.ts	/^            containsImageIndex(imageIndex: number): boolean;$/;"	m
containsPoint	pilas-engine/declaraciones/phaser.d.ts	/^                containsPoint(body: Phaser.Types.Physics.Matter.MatterBody | Phaser.Types.Physics.Matter.MatterBody[], x: number, y: number): boolean;$/;"	m
containsPoint	pilas-engine/declaraciones/phaser.d.ts	/^            containsPoint(x: number, y: number): boolean;$/;"	m
containsTileIndex	pilas-engine/declaraciones/phaser.d.ts	/^            containsTileIndex(tileIndex: number): boolean;$/;"	m
contenedor	pilas-engine/actores/robot.ts	/^  contenedor: any;$/;"	m
contenedor	pilas-engine/huesos.ts	/^  contenedor: any;$/;"	m
context	pilas-engine/declaraciones/phaser.d.ts	/^            context: AudioContext;$/;"	m
context	pilas-engine/declaraciones/phaser.d.ts	/^            context: CanvasRenderingContext2D;$/;"	m
context	pilas-engine/declaraciones/phaser.d.ts	/^            readonly context: CanvasRenderingContext2D | WebGLRenderingContext;$/;"	m
context	pilas-engine/declaraciones/phaser.d.ts	/^            readonly context: CanvasRenderingContext2D;$/;"	m
context	pilas-engine/declaraciones/phaser.d.ts	/^        context: CanvasRenderingContext2D | WebGLRenderingContext;$/;"	m
contextID	pilas-engine/declaraciones/phaser.d.ts	/^        contextID: string;$/;"	m
contextLost	pilas-engine/declaraciones/phaser.d.ts	/^                contextLost: boolean;$/;"	m
contextLostHandler	pilas-engine/declaraciones/phaser.d.ts	/^                contextLostHandler: Function;$/;"	m
contextRestoredHandler	pilas-engine/declaraciones/phaser.d.ts	/^                contextRestoredHandler: Function;$/;"	m
contextType	pilas-engine/declaraciones/phaser.d.ts	/^        contextType: string;$/;"	m
continuar_animacion	pilas-engine/actores/-actor-base.ts	/^  continuar_animacion() {$/;"	m
contrast	pilas-engine/declaraciones/phaser.d.ts	/^            contrast(value?: number, multiply?: boolean): this;$/;"	m
control	pilas-engine/actores/-actor-base.ts	/^  get control() {$/;"	m
control	pilas-engine/escenas/-escena-base.ts	/^  control: Control;$/;"	m
control	pilas-engine/pilas.ts	/^  get control(): Control {$/;"	m
control	pilas-engine/pilas.ts	/^  set control(_: Control) {$/;"	m
control_interno	pilas-engine/control.ts	/^  get control_interno() {$/;"	m
convertTilemapLayer	pilas-engine/declaraciones/phaser.d.ts	/^                convertTilemapLayer(tilemapLayer: Phaser.Tilemaps.TilemapLayer, options?: object): this;$/;"	m
convertTiles	pilas-engine/declaraciones/phaser.d.ts	/^                convertTiles(tiles: Phaser.Tilemaps.Tile[], options?: object): this;$/;"	m
convertir_a_hexa	pilas-engine/colores.ts	/^  convertir_a_hexa(color: any) {$/;"	m
convertir_a_string	pilas-engine/escenas/-escena-base.ts	/^  private convertir_a_string(variable) {$/;"	m
convertir_angulo_a_radianes	pilas-engine/utilidades.ts	/^  convertir_angulo_a_radianes(grados: number) {$/;"	m
convertir_coordenada_de_phaser_a_pilas	pilas-engine/utilidades.ts	/^  convertir_coordenada_de_phaser_a_pilas(x: number, y: number) {$/;"	m
convertir_coordenada_de_pilas_a_phaser	pilas-engine/utilidades.ts	/^  convertir_coordenada_de_pilas_a_phaser(x: number, y: number) {$/;"	m
convertir_radianes_a_angulos	pilas-engine/utilidades.ts	/^  convertir_radianes_a_angulos(radianes: number) {$/;"	m
convertir_sonido_en_array_buffer	pilas-engine/modos/modo_cargador.ts	/^  convertir_sonido_en_array_buffer(sonido, callback) {$/;"	m
copiar_atributos_de_sprite	pilas-engine/actores/-actor-base.ts	/^  protected copiar_atributos_de_sprite(origen, destino) {$/;"	m
copiar_atributos_excepto_alpha	pilas-engine/modos/modo_deprecated.ts	/^  private copiar_atributos_excepto_alpha(origen, destino) {$/;"	m
copiar_valores_de_sprite_a_texto	pilas-engine/modos/modo.ts	/^  copiar_valores_de_sprite_a_texto(sprite) {$/;"	m
copy	pilas-engine/declaraciones/phaser.d.ts	/^            copy(destination: Phaser.Structs.Size): Phaser.Structs.Size;$/;"	m
copy	pilas-engine/declaraciones/phaser.d.ts	/^            copy(src: Phaser.Math.Matrix3): Phaser.Math.Matrix3;$/;"	m
copy	pilas-engine/declaraciones/phaser.d.ts	/^            copy(src: Phaser.Math.Matrix4): this;$/;"	m
copy	pilas-engine/declaraciones/phaser.d.ts	/^            copy(src: Phaser.Math.Quaternion | Phaser.Math.Vector4): Phaser.Math.Quaternion;$/;"	m
copy	pilas-engine/declaraciones/phaser.d.ts	/^            copy(src: Phaser.Math.Vector2 | Phaser.Math.Vector3): Phaser.Math.Vector3;$/;"	m
copy	pilas-engine/declaraciones/phaser.d.ts	/^            copy(src: Phaser.Math.Vector4): Phaser.Math.Vector4;$/;"	m
copy	pilas-engine/declaraciones/phaser.d.ts	/^            copy(src: Phaser.Types.Math.Vector2Like): Phaser.Math.Vector2;$/;"	m
copy	pilas-engine/declaraciones/phaser.d.ts	/^            copy(srcTileX: number, srcTileY: number, width: number, height: number, destTileX: number, destTileY: number, recalculateFaces?: boolean): this;$/;"	m
copy	pilas-engine/declaraciones/phaser.d.ts	/^            copy(srcTileX: number, srcTileY: number, width: number, height: number, destTileX: number, destTileY: number, recalculateFaces?: boolean, layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Tilemaps.Tilemap;$/;"	m
copy	pilas-engine/declaraciones/phaser.d.ts	/^            copy(tile: Phaser.Tilemaps.Tile): this;$/;"	m
copy	pilas-engine/libs/spriter.ts	/^  copy(other: Angle): Angle {$/;"	m
copy	pilas-engine/libs/spriter.ts	/^  copy(other: Bone): Bone {$/;"	m
copy	pilas-engine/libs/spriter.ts	/^  copy(other: BoxObject): BoxObject {$/;"	m
copy	pilas-engine/libs/spriter.ts	/^  copy(other: EntityObject): EntityObject {$/;"	m
copy	pilas-engine/libs/spriter.ts	/^  copy(other: PointObject): PointObject {$/;"	m
copy	pilas-engine/libs/spriter.ts	/^  copy(other: SoundObject): SoundObject {$/;"	m
copy	pilas-engine/libs/spriter.ts	/^  copy(other: Space): Space {$/;"	m
copy	pilas-engine/libs/spriter.ts	/^  copy(other: SpriteObject): SpriteObject {$/;"	m
copy	pilas-engine/libs/spriter.ts	/^  copy(other: VariableObject): VariableObject {$/;"	m
copy	pilas-engine/libs/spriter.ts	/^  public copy(other: Vector): Vector {$/;"	m
copyFrame	pilas-engine/declaraciones/phaser.d.ts	/^                    copyFrame(source: Phaser.Renderer.WebGL.RenderTarget, target?: Phaser.Renderer.WebGL.RenderTarget, brightness?: number, clear?: boolean, clearAlpha?: boolean): void;$/;"	m
copyFrame	pilas-engine/declaraciones/phaser.d.ts	/^                copyFrame(source: Phaser.Renderer.WebGL.RenderTarget, target?: Phaser.Renderer.WebGL.RenderTarget, brightness?: number, clear?: boolean, clearAlpha?: boolean): this;$/;"	m
copyFrameRect	pilas-engine/declaraciones/phaser.d.ts	/^                    copyFrameRect(source: Phaser.Renderer.WebGL.RenderTarget, target: Phaser.Renderer.WebGL.RenderTarget, x: number, y: number, width: number, height: number, clear?: boolean, clearAlpha?: boolean): void;$/;"	m
copyFrameRect	pilas-engine/declaraciones/phaser.d.ts	/^                copyFrameRect(source: Phaser.Renderer.WebGL.RenderTarget, target: Phaser.Renderer.WebGL.RenderTarget, x: number, y: number, width: number, height: number, clear?: boolean, clearAlpha?: boolean): this;$/;"	m
copyFrom	pilas-engine/declaraciones/phaser.d.ts	/^                copyFrom(src: Phaser.GameObjects.Components.TransformMatrix): this;$/;"	m
copyFromArray	pilas-engine/declaraciones/phaser.d.ts	/^                copyFromArray(src: any[]): this;$/;"	m
copyPosition	pilas-engine/declaraciones/phaser.d.ts	/^                copyPosition(source: Phaser.Types.Math.Vector2Like | Phaser.Types.Math.Vector3Like | Phaser.Types.Math.Vector4Like): this;$/;"	m
copyPosition	pilas-engine/declaraciones/phaser.d.ts	/^            copyPosition(source: Phaser.Types.Math.Vector2Like | Phaser.Types.Math.Vector3Like | Phaser.Types.Math.Vector4Like): this;$/;"	m
copyShader	pilas-engine/declaraciones/phaser.d.ts	/^                    copyShader: Phaser.Renderer.WebGL.WebGLShader;$/;"	m
copyToArray	pilas-engine/declaraciones/phaser.d.ts	/^                copyToArray(out?: any[]): any[];$/;"	m
copyToContext	pilas-engine/declaraciones/phaser.d.ts	/^                copyToContext(ctx: CanvasRenderingContext2D): CanvasRenderingContext2D;$/;"	m
copyToGame	pilas-engine/declaraciones/phaser.d.ts	/^                    copyToGame(source: Phaser.Renderer.WebGL.RenderTarget): void;$/;"	m
copyToGame	pilas-engine/declaraciones/phaser.d.ts	/^                copyToGame(source: Phaser.Renderer.WebGL.RenderTarget): void;$/;"	m
cordova	pilas-engine/declaraciones/phaser.d.ts	/^            cordova: boolean;$/;"	m
correction	pilas-engine/declaraciones/phaser.d.ts	/^                correction: number;$/;"	m
cos	pilas-engine/declaraciones/phaser.d.ts	/^                cos: number;$/;"	m
cos	pilas-engine/libs/spriter.ts	/^  get cos(): number {$/;"	m
count	pilas-engine/declaraciones/phaser.d.ts	/^            count(property: string, value: T): number;$/;"	m
count	pilas-engine/declaraciones/phaser.d.ts	/^            count(property: string, value: any, startIndex?: number, endIndex?: number): number;$/;"	m
count	pilas-engine/declaraciones/phaser.d.ts	/^            count: number;$/;"	m
countActive	pilas-engine/declaraciones/phaser.d.ts	/^            countActive(value?: boolean): number;$/;"	m
countdown	pilas-engine/declaraciones/phaser.d.ts	/^            countdown: number;$/;"	m
counter	pilas-engine/declaraciones/phaser.d.ts	/^                    counter: number;$/;"	m
counter	pilas-engine/declaraciones/phaser.d.ts	/^                counter: number;$/;"	m
crear_actor	pilas-engine/actores.ts	/^  crear_actor(nombre: string, clase: any = null, imagen: string = null) {$/;"	m
crear_actor	pilas-engine/modos/modo_ejecucion.ts	/^  crear_actor(entidad: any) {$/;"	m
crear_actores_desde_los_datos_de_la_escena	pilas-engine/modos/modo_deprecated.ts	/^  crear_actores_desde_los_datos_de_la_escena(escena: Escena) {$/;"	m
crear_actores_desde_los_datos_de_la_escena	pilas-engine/modos/modo_editor.ts	/^  crear_actores_desde_los_datos_de_la_escena(escena: Escena) {$/;"	m
crear_animacion	pilas-engine/actores/-actor-base.ts	/^  crear_animacion(nombre, cuadros, velocidad) {$/;"	m
crear_animacion	pilas-engine/animaciones.ts	/^  crear_animacion(nombre: string, cuadros: any[], velocidad: number) {$/;"	m
crear_animacion	pilas-engine/escenas/-escena-base.ts	/^  crear_animacion(actor: Actor, tipo_de_animacion: Tipo, veces: number, duraci√≥n: number) {$/;"	m
crear_animacion	pilas-engine/pilas.ts	/^  crear_animacion(actor: Actor, tipo_de_animacion: Tipo, repeticiones: number, duraci√≥n: number) {$/;"	m
crear_animacion_nula	pilas-engine/escenas/-escena-base.ts	/^  crear_animacion_nula() {$/;"	m
crear_borde	pilas-engine/modos/actor_en_modo_edicion.ts	/^  private crear_borde() {$/;"	m
crear_camara	pilas-engine/modos/modo_editor.ts	/^  crear_camara(pilas, x, y, ancho, alto) {$/;"	m
crear_canvas_de_depuracion	pilas-engine/modos/modo.ts	/^  crear_canvas_de_depuracion() {$/;"	m
crear_canvas_de_depuracion_modo_pausa	pilas-engine/modos/modo_pausa.ts	/^  crear_canvas_de_depuracion_modo_pausa() {$/;"	m
crear_centro	pilas-engine/modos/actor_en_modo_edicion.ts	/^  private crear_centro() {$/;"	m
crear_configuracion	pilas-engine/pilas.ts	/^  crear_configuracion(ancho: number, alto: number, maximizar: boolean, pixelart: boolean, transparente: boolean) {$/;"	m
crear_detalle_del_error	pilas-engine/modos/modo_error.ts	/^  private crear_detalle_del_error(espaciado: number, datos: any) {$/;"	m
crear_escena	pilas-engine/modos/modo_ejecucion.ts	/^  crear_escena(datos_de_la_escena: any) {$/;"	m
crear_figura_circular	pilas-engine/actores/-actor-base.ts	/^  crear_figura_circular(radio: number = 0) {$/;"	m
crear_figura_estatica_para	pilas-engine/modos/modo.ts	/^  crear_figura_estatica_para(actor) {$/;"	m
crear_figura_rectangular	pilas-engine/actores/-actor-base.ts	/^  crear_figura_rectangular(ancho: number = 0, alto: number = 0) {$/;"	m
crear_fondo	pilas-engine/actores/-actor-texto-base.ts	/^  private crear_fondo(fondo) {$/;"	m
crear_fondo	pilas-engine/modos/modo.ts	/^  crear_fondo(fondo, ancho, alto) {$/;"	m
crear_fondo	pilas-engine/modos/modo_deprecated.ts	/^  crear_fondo(fondo, ancho = null, alto = null) {$/;"	m
crear_fondo	pilas-engine/modos/modo_error.ts	/^  crear_fondo() {$/;"	m
crear_frames_de_animacion	pilas-engine/animaciones.ts	/^  private crear_frames_de_animacion(cuadros: any[], nombre_de_la_animacion: string) {$/;"	m
crear_fuente_bitmap	pilas-engine/modos/modo_cargador.ts	/^  private crear_fuente_bitmap(nombre) {$/;"	m
crear_indicador_de_carga	pilas-engine/modos/modo_cargador.ts	/^  private crear_indicador_de_carga() {$/;"	m
crear_indicador_de_texto	pilas-engine/modos/modo_pausa.ts	/^  private crear_indicador_de_texto() {$/;"	m
crear_indicadores_de_rendimiento_fps	pilas-engine/modos/modo.ts	/^  crear_indicadores_de_rendimiento_fps() {$/;"	m
crear_manejadores_para_hacer_arrastrables_los_actores_y_la_camara	pilas-engine/modos/modo_deprecated.ts	/^  crear_manejadores_para_hacer_arrastrables_los_actores_y_la_camara() {$/;"	m
crear_mapa	pilas-engine/pilas.ts	/^  crear_mapa(mapa: string, grilla: number = 64, origen_x: number = 0, origen_y: number = 0) {$/;"	m
crear_marca	pilas-engine/actores/deslizador.ts	/^  crear_marca() {$/;"	m
crear_minimap	pilas-engine/modos/modo_deprecated.ts	/^  crear_minimap(escena) {$/;"	m
crear_representacion_de_figura	pilas-engine/modos/actor_en_modo_edicion.ts	/^  private crear_representacion_de_figura(entidad) {$/;"	m
crear_sprite	pilas-engine/actores/-actor-base.ts	/^  private crear_sprite(tipo, imagen_inicial) {$/;"	m
crear_sprite	pilas-engine/modos/actor_en_modo_edicion.ts	/^  private crear_sprite(g: string, i: string) {$/;"	m
crear_sprite_con_el_borde_de_la_camara	pilas-engine/modos/modo_deprecated.ts	/^  crear_sprite_con_el_borde_de_la_camara({ camara_x, camara_y }) {$/;"	m
crear_sprite_desde_actor	pilas-engine/modos/modo_deprecated.ts	/^  crear_sprite_desde_actor(actor: Actor) {$/;"	m
crear_sprite_desde_actor	pilas-engine/modos/modo_editor.ts	/^  crear_sprite_desde_actor(datos_del_actor: Actor) {$/;"	m
crear_sprite_desde_entidad	pilas-engine/modos/modo_pausa.ts	/^  crear_sprite_desde_entidad(entidad) {$/;"	m
crear_sprite_para_el_cursor_de_la_grilla	pilas-engine/modos/modo_deprecated.ts	/^  crear_sprite_para_el_cursor_de_la_grilla() {$/;"	m
crear_sprites_desde_historia	pilas-engine/modos/modo_pausa.ts	/^  private crear_sprites_desde_historia(posicion) {$/;"	m
crear_subtitulo	pilas-engine/modos/modo_error.ts	/^  private crear_subtitulo(ancho: number, mensaje: string) {$/;"	m
crear_titulo	pilas-engine/modos/modo_error.ts	/^  private crear_titulo() {$/;"	m
create	pilas-engine/declaraciones/phaser.d.ts	/^                create(x: number, y: number, width: number, height: number, options: object): MatterJS.BodyType;$/;"	m
create	pilas-engine/declaraciones/phaser.d.ts	/^                function create(parent: any, width?: number, height?: number, canvasType?: number, selfParent?: boolean): HTMLCanvasElement;$/;"	f
create	pilas-engine/declaraciones/phaser.d.ts	/^            create(config: Phaser.Types.Animations.Animation): Phaser.Animations.Animation | false;$/;"	m
create	pilas-engine/declaraciones/phaser.d.ts	/^            create(config: Phaser.Types.Tweens.TweenBuilderConfig | object): Phaser.Tweens.Tween;$/;"	m
create	pilas-engine/declaraciones/phaser.d.ts	/^            create(key: string, source: HTMLImageElement, width: number, height: number): Phaser.Textures.Texture;$/;"	m
create	pilas-engine/declaraciones/phaser.d.ts	/^            create(x: number, y: number, frame?: string | number | Phaser.Textures.Frame, visible?: boolean, index?: number): Phaser.GameObjects.Bob;$/;"	m
create	pilas-engine/declaraciones/phaser.d.ts	/^            create(x?: number, y?: number, key?: string, frame?: string | number, visible?: boolean, active?: boolean): any;$/;"	m
create	pilas-engine/declaraciones/phaser.d.ts	/^            function create(config: string | Phaser.Types.Scenes.SettingsConfig): Phaser.Types.Scenes.SettingsObject;$/;"	f
create	pilas-engine/modos/modo.ts	/^  create(datos: any, ancho: number, alto: number) {$/;"	m
create	pilas-engine/modos/modo_cargador.ts	/^  create() {$/;"	m
create	pilas-engine/modos/modo_deprecated.ts	/^  create(datos) {$/;"	m
create	pilas-engine/modos/modo_editor.ts	/^  create(datos) {$/;"	m
create	pilas-engine/modos/modo_ejecucion.ts	/^  create(datos) {$/;"	m
create	pilas-engine/modos/modo_ejecucion_en_pausa.ts	/^  create(datos) {$/;"	m
create	pilas-engine/modos/modo_error.ts	/^  create(datos: any) {$/;"	m
create	pilas-engine/modos/modo_pausa.ts	/^  create(datos: any) {$/;"	m
create2D	pilas-engine/declaraciones/phaser.d.ts	/^                function create2D(parent: any, width?: number, height?: number): HTMLCanvasElement;$/;"	f
createAttributes	pilas-engine/declaraciones/phaser.d.ts	/^                createAttributes(attributes: Phaser.Types.Renderer.WebGL.WebGLPipelineAttributeConfig[]): void;$/;"	m
createAudioContext	pilas-engine/declaraciones/phaser.d.ts	/^            createAudioContext(game: Phaser.Game): AudioContext;$/;"	m
createBitmapMask	pilas-engine/declaraciones/phaser.d.ts	/^                createBitmapMask(renderable?: Phaser.GameObjects.GameObject): Phaser.Display.Masks.BitmapMask;$/;"	m
createBitmapMask	pilas-engine/declaraciones/phaser.d.ts	/^            createBitmapMask(renderable?: Phaser.GameObjects.GameObject): Phaser.Display.Masks.BitmapMask;$/;"	m
createBlankLayer	pilas-engine/declaraciones/phaser.d.ts	/^            createBlankLayer(name: string, tileset: string | string[] | Phaser.Tilemaps.Tileset | Phaser.Tilemaps.Tileset[], x?: number, y?: number, width?: number, height?: number, tileWidth?: number, tileHeight?: number): Phaser.Tilemaps.TilemapLayer;$/;"	m
createCallback	pilas-engine/declaraciones/phaser.d.ts	/^            createCallback: Phaser.Types.GameObjects.Group.GroupCallback;$/;"	m
createCallbackHandler	pilas-engine/declaraciones/phaser.d.ts	/^                createCallbackHandler(child: Phaser.GameObjects.GameObject): void;$/;"	m
createCanvas	pilas-engine/declaraciones/phaser.d.ts	/^            createCanvas(key: string, width?: number, height?: number): Phaser.Textures.CanvasTexture;$/;"	m
createCanvasTexture	pilas-engine/declaraciones/phaser.d.ts	/^                createCanvasTexture(srcCanvas: HTMLCanvasElement, noRepeat?: boolean, flipY?: boolean): WebGLTexture;$/;"	m
createCombo	pilas-engine/declaraciones/phaser.d.ts	/^                createCombo(keys: string | number[] | object[], config?: Phaser.Types.Input.Keyboard.KeyComboConfig): Phaser.Input.Keyboard.KeyCombo;$/;"	m
createContext	pilas-engine/declaraciones/phaser.d.ts	/^        createContext(playerID: string): this;$/;"	m
createCursorKeys	pilas-engine/declaraciones/phaser.d.ts	/^                createCursorKeys(): Phaser.Types.Input.Keyboard.CursorKeys;$/;"	m
createDebugGraphic	pilas-engine/declaraciones/phaser.d.ts	/^                createDebugGraphic(): Phaser.GameObjects.Graphics;$/;"	m
createElement	pilas-engine/declaraciones/phaser.d.ts	/^            createElement(tagName: string, style?: string | any, innerText?: string): this;$/;"	m
createEmitter	pilas-engine/declaraciones/phaser.d.ts	/^                createEmitter(config: Phaser.Types.GameObjects.Particles.ParticleEmitterConfig): Phaser.GameObjects.Particles.ParticleEmitter;$/;"	m
createFramebuffer	pilas-engine/declaraciones/phaser.d.ts	/^                createFramebuffer(width: number, height: number, renderTexture: WebGLTexture, addDepthStencilBuffer?: boolean): WebGLFramebuffer;$/;"	m
createFromAseprite	pilas-engine/declaraciones/phaser.d.ts	/^            createFromAseprite(key: string, tags?: string[]): Phaser.Animations.Animation[];$/;"	m
createFromCache	pilas-engine/declaraciones/phaser.d.ts	/^            createFromCache(The: string, tagName?: string): this;$/;"	m
createFromCallback	pilas-engine/declaraciones/phaser.d.ts	/^            createFromCallback(callback: CreateCallback, quantity: number, frame?: string | number | Phaser.Textures.Frame | string[] | number[] | Phaser.Textures.Frame[], visible?: boolean): Phaser.GameObjects.Bob[];$/;"	m
createFromConfig	pilas-engine/declaraciones/phaser.d.ts	/^            createFromConfig(options: Phaser.Types.GameObjects.Group.GroupCreateConfig): any[];$/;"	m
createFromHTML	pilas-engine/declaraciones/phaser.d.ts	/^            createFromHTML(html: string, tagName?: string): this;$/;"	m
createFromObjects	pilas-engine/declaraciones/phaser.d.ts	/^            createFromObjects(objectLayerName: string, config: Phaser.Types.Tilemaps.CreateFromObjectLayerConfig | Phaser.Types.Tilemaps.CreateFromObjectLayerConfig[], useTileset?: boolean): Phaser.GameObjects.GameObject[];$/;"	m
createFromTiles	pilas-engine/declaraciones/phaser.d.ts	/^            createFromTiles(indexes: number | any[], replacements: number | any[], spriteConfig: Phaser.Types.GameObjects.Sprite.SpriteConfig, scene?: Phaser.Scene, camera?: Phaser.Cameras.Scene2D.Camera, layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.GameObjects.Sprite[];$/;"	m
createFromTiles	pilas-engine/declaraciones/phaser.d.ts	/^            createFromTiles(indexes: number | any[], replacements: number | any[], spriteConfig?: Phaser.Types.GameObjects.Sprite.SpriteConfig, scene?: Phaser.Scene, camera?: Phaser.Cameras.Scene2D.Camera): Phaser.GameObjects.Sprite[];$/;"	m
createGeometryMask	pilas-engine/declaraciones/phaser.d.ts	/^                createGeometryMask(graphics?: Phaser.GameObjects.Graphics): Phaser.Display.Masks.GeometryMask;$/;"	m
createGeometryMask	pilas-engine/declaraciones/phaser.d.ts	/^            createGeometryMask(graphics?: Phaser.GameObjects.Graphics): Phaser.Display.Masks.GeometryMask;$/;"	m
createGravityWell	pilas-engine/declaraciones/phaser.d.ts	/^                createGravityWell(config: Phaser.Types.GameObjects.Particles.GravityWellConfig): Phaser.GameObjects.Particles.GravityWell;$/;"	m
createIndexBuffer	pilas-engine/declaraciones/phaser.d.ts	/^                createIndexBuffer(initialDataOrSize: ArrayBuffer, bufferUsage: number): WebGLBuffer;$/;"	m
createLayer	pilas-engine/declaraciones/phaser.d.ts	/^            createLayer(layerID: number | string, tileset: string | string[] | Phaser.Tilemaps.Tileset | Phaser.Tilemaps.Tileset[], x?: number, y?: number): Phaser.Tilemaps.TilemapLayer;$/;"	m
createMask	pilas-engine/declaraciones/phaser.d.ts	/^                createMask(): void;$/;"	m
createMultiple	pilas-engine/declaraciones/phaser.d.ts	/^            createMultiple(config: Phaser.Types.GameObjects.Group.GroupCreateConfig | Phaser.Types.GameObjects.Group.GroupCreateConfig[]): any[];$/;"	m
createMultiple	pilas-engine/declaraciones/phaser.d.ts	/^            createMultiple(quantity: number, frame?: string | number | Phaser.Textures.Frame | string[] | number[] | Phaser.Textures.Frame[], visible?: boolean): Phaser.GameObjects.Bob[];$/;"	m
createMultipleCallback	pilas-engine/declaraciones/phaser.d.ts	/^            createMultipleCallback: Phaser.Types.GameObjects.Group.GroupMultipleCreateCallback;$/;"	m
createMultipleCallbackHandler	pilas-engine/declaraciones/phaser.d.ts	/^                createMultipleCallbackHandler(entries: Phaser.GameObjects.GameObject[]): void;$/;"	m
createObjectURL	pilas-engine/declaraciones/phaser.d.ts	/^            static createObjectURL(image: HTMLImageElement, blob: Blob, defaultType: string): void;$/;"	m
createProgram	pilas-engine/declaraciones/phaser.d.ts	/^                createProgram(vertexShader: string, fragmentShader: string): WebGLProgram;$/;"	m
createShortcut	pilas-engine/declaraciones/phaser.d.ts	/^        createShortcut(): this;$/;"	m
createTexture2D	pilas-engine/declaraciones/phaser.d.ts	/^                createTexture2D(mipLevel: number, minFilter: number, magFilter: number, wrapT: number, wrapS: number, format: number, pixels: object, width: number, height: number, pma?: boolean, forceSize?: boolean, flipY?: boolean): WebGLTexture;$/;"	m
createTextureFromSource	pilas-engine/declaraciones/phaser.d.ts	/^                createTextureFromSource(source: object, width: number, height: number, scaleMode: number): WebGLTexture;$/;"	m
createTimeline	pilas-engine/declaraciones/phaser.d.ts	/^            createTimeline(config?: Phaser.Types.Tweens.TimelineBuilderConfig): Phaser.Tweens.Timeline;$/;"	m
createUniforms	pilas-engine/declaraciones/phaser.d.ts	/^                createUniforms(): this;$/;"	m
createVertexBuffer	pilas-engine/declaraciones/phaser.d.ts	/^                createVertexBuffer(initialDataOrSize: ArrayBuffer, bufferUsage: number): WebGLBuffer;$/;"	m
createVideoTexture	pilas-engine/declaraciones/phaser.d.ts	/^                createVideoTexture(srcVideo: HTMLVideoElement, noRepeat?: boolean, flipY?: boolean): WebGLTexture;$/;"	m
createWebGL	pilas-engine/declaraciones/phaser.d.ts	/^                function createWebGL(parent: any, width?: number, height?: number): HTMLCanvasElement;$/;"	f
cropHeight	pilas-engine/declaraciones/phaser.d.ts	/^            cropHeight: number;$/;"	m
cropWidth	pilas-engine/declaraciones/phaser.d.ts	/^            cropWidth: number;$/;"	m
cross	pilas-engine/declaraciones/phaser.d.ts	/^            cross(src: Phaser.Types.Math.Vector2Like): number;$/;"	m
cross	pilas-engine/declaraciones/phaser.d.ts	/^            cross(v: Phaser.Math.Vector3): Phaser.Math.Vector3;$/;"	m
crossOrigin	pilas-engine/declaraciones/phaser.d.ts	/^            crossOrigin: string | undefined;$/;"	m
crossOrigin	pilas-engine/declaraciones/phaser.d.ts	/^            crossOrigin: string;$/;"	m
crossVectors	pilas-engine/declaraciones/phaser.d.ts	/^            crossVectors(a: Phaser.Math.Vector3, b: Phaser.Math.Vector3): Phaser.Math.Vector3;$/;"	m
crosswalk	pilas-engine/declaraciones/phaser.d.ts	/^            crosswalk: boolean;$/;"	m
css	pilas-engine/declaraciones/phaser.d.ts	/^            css(key: string | Phaser.Types.Loader.FileTypes.CSSFileConfig | Phaser.Types.Loader.FileTypes.CSSFileConfig[], url?: string, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject): this;$/;"	m
ctrlKey	pilas-engine/declaraciones/phaser.d.ts	/^                ctrlKey: boolean;$/;"	m
cuadro	pilas-engine/actores/-actor-base.ts	/^  cuadro: number;$/;"	m
cuadro	pilas-engine/escenas/-escena.ts	/^  cuadro: number = -1;$/;"	m
cuadro_del_estado	pilas-engine/actores/-actor-base.ts	/^  cuadro_del_estado: number;$/;"	m
cuando_cambia_grilla_desde_el_selector_manual	pilas-engine/modos/modo_deprecated.ts	/^  cuando_cambia_grilla_desde_el_selector_manual(grilla) {$/;"	m
cuando_cambia_grilla_desde_el_selector_manual	pilas-engine/modos/modo_editor.ts	/^  cuando_cambia_grilla_desde_el_selector_manual(grilla) {$/;"	m
cuando_colisiona	pilas-engine/actores/-actor-base.ts	/^  cuando_colisiona(actor: Actor) {}$/;"	m
cuando_comienza_a_arrastrar	pilas-engine/habilidades/arrastrable.ts	/^  private cuando_comienza_a_arrastrar(_, objeto) {$/;"	m
cuando_comienza_una_colision	pilas-engine/actores/-actor-base.ts	/^  cuando_comienza_una_colision(actor: Actor) {}$/;"	m
cuando_comienza_una_colision	pilas-engine/actores/conejo.ts	/^  cuando_comienza_una_colision(actor) {$/;"	m
cuando_finaliza	pilas-engine/animacion_de_propiedad.ts	/^  cuando_finaliza() {}$/;"	m
cuando_finaliza	pilas-engine/animacion_nula.ts	/^  cuando_finaliza() {}$/;"	m
cuando_finaliza_animacion	pilas-engine/actores/-actor-base.ts	/^  cuando_finaliza_animacion(animacion: string) {}$/;"	m
cuando_finaliza_animacion	pilas-engine/actores/chispa.ts	/^  cuando_finaliza_animacion(nombre: string) {$/;"	m
cuando_finaliza_animacion	pilas-engine/actores/explosion.ts	/^  cuando_finaliza_animacion(nombre: string) {$/;"	m
cuando_finaliza_animacion	pilas-engine/actores/golpe.ts	/^  cuando_finaliza_animacion(nombre: string) {$/;"	m
cuando_finaliza_animacion	pilas-engine/actores/humo.ts	/^  cuando_finaliza_animacion(nombre: string) {$/;"	m
cuando_finaliza_animacion	pilas-engine/automata.ts	/^  cuando_finaliza_animacion(nombre: string) {$/;"	m
cuando_hace_click	pilas-engine/actores/-actor-base.ts	/^  cuando_hace_click(x: number, y: number, evento_original: any) {}$/;"	m
cuando_hace_click	pilas-engine/actores/boton.ts	/^  cuando_hace_click() {$/;"	m
cuando_hace_click	pilas-engine/actores/boton_abajo.ts	/^  cuando_hace_click() {$/;"	m
cuando_hace_click	pilas-engine/actores/boton_activable.ts	/^  cuando_hace_click() {$/;"	m
cuando_hace_click	pilas-engine/actores/boton_arriba.ts	/^  cuando_hace_click() {$/;"	m
cuando_hace_click	pilas-engine/actores/boton_derecha.ts	/^  cuando_hace_click() {$/;"	m
cuando_hace_click	pilas-engine/actores/boton_espacio.ts	/^  cuando_hace_click() {$/;"	m
cuando_hace_click	pilas-engine/actores/boton_izquierda.ts	/^  cuando_hace_click() {$/;"	m
cuando_hace_click	pilas-engine/actores/deslizador.ts	/^  cuando_hace_click(x, y) {$/;"	m
cuando_hace_click	pilas-engine/actores/interruptor_de_gravedad.ts	/^  cuando_hace_click() {$/;"	m
cuando_hace_click	pilas-engine/actores/pantalla_completa.ts	/^  cuando_hace_click() {$/;"	m
cuando_hace_click	pilas-engine/actores/reiniciar_escena.ts	/^  cuando_hace_click() {$/;"	m
cuando_hace_click	pilas-engine/automata.ts	/^  cuando_hace_click(x: number, y: number, evento_original: any) {$/;"	m
cuando_hace_click	pilas-engine/escenas/-escena-base.ts	/^  cuando_hace_click(x: number, y: number, evento_original: any) {}$/;"	m
cuando_hace_click_en_la_pantalla	pilas-engine/actores/-actor-base.ts	/^  cuando_hace_click_en_la_pantalla(x: number, y: number, evento_original: any) {}$/;"	m
cuando_llega_un_mensaje	pilas-engine/actores/-actor-base.ts	/^  cuando_llega_un_mensaje(mensaje: string, datos: any = {}) {}$/;"	m
cuando_llega_un_mensaje	pilas-engine/escenas/-escena-base.ts	/^  cuando_llega_un_mensaje(mensaje: string, datos: any = {}) {}$/;"	m
cuando_mueve	pilas-engine/actores/-actor-base.ts	/^  cuando_mueve(x, y, evento_original) {}$/;"	m
cuando_mueve	pilas-engine/actores/boton.ts	/^  cuando_mueve() {$/;"	m
cuando_mueve	pilas-engine/actores/boton_activable.ts	/^  cuando_mueve() {$/;"	m
cuando_mueve	pilas-engine/actores/pantalla_completa.ts	/^  cuando_mueve() {$/;"	m
cuando_mueve	pilas-engine/actores/reiniciar_escena.ts	/^  cuando_mueve() {$/;"	m
cuando_mueve	pilas-engine/automata.ts	/^  cuando_mueve(x: number, y: number, evento_original: any) {$/;"	m
cuando_mueve	pilas-engine/escenas/-escena-base.ts	/^  cuando_mueve(x: number, y: number, evento_original: any) {}$/;"	m
cuando_mueve	pilas-engine/habilidades/arrastrable.ts	/^  private cuando_mueve(_, objeto, x, y) {$/;"	m
cuando_mueve_el_mouse	pilas-engine/actores/deslizador.ts	/^  private cuando_mueve_el_mouse(datos) {$/;"	m
cuando_mueve_sobre_la_pantalla	pilas-engine/actores/-actor-base.ts	/^  cuando_mueve_sobre_la_pantalla(x, y, evento_original) {}$/;"	m
cuando_mueve_sobre_la_pantalla	pilas-engine/automata.ts	/^  cuando_mueve_sobre_la_pantalla(x: number, y: number, evento_original: any) {$/;"	m
cuando_progresa_la_carga	pilas-engine/modos/modo_cargador.ts	/^  cuando_progresa_la_carga(progreso) {$/;"	m
cuando_pulsa_tecla	pilas-engine/actores/-actor-base.ts	/^  cuando_pulsa_tecla(tecla: string, evento_original: any) {}$/;"	m
cuando_pulsa_tecla	pilas-engine/automata.ts	/^  cuando_pulsa_tecla(tecla: string, evento_original: any) {$/;"	m
cuando_pulsa_tecla	pilas-engine/escenas/-escena-base.ts	/^  cuando_pulsa_tecla(tecla: string, evento: any) {}$/;"	m
cuando_sale	pilas-engine/actores/-actor-base.ts	/^  cuando_sale(x, y, evento_original) {}$/;"	m
cuando_sale	pilas-engine/actores/boton.ts	/^  cuando_sale() {$/;"	m
cuando_sale	pilas-engine/actores/boton_abajo.ts	/^  cuando_sale() {$/;"	m
cuando_sale	pilas-engine/actores/boton_activable.ts	/^  cuando_sale() {$/;"	m
cuando_sale	pilas-engine/actores/boton_arriba.ts	/^  cuando_sale() {$/;"	m
cuando_sale	pilas-engine/actores/boton_derecha.ts	/^  cuando_sale() {$/;"	m
cuando_sale	pilas-engine/actores/boton_espacio.ts	/^  cuando_sale() {$/;"	m
cuando_sale	pilas-engine/actores/boton_izquierda.ts	/^  cuando_sale() {$/;"	m
cuando_sale	pilas-engine/actores/pantalla_completa.ts	/^  cuando_sale() {$/;"	m
cuando_sale	pilas-engine/actores/reiniciar_escena.ts	/^  cuando_sale() {$/;"	m
cuando_sale	pilas-engine/automata.ts	/^  cuando_sale(x: number, y: number, evento_original: any) {$/;"	m
cuando_se_mantiene_una_colision	pilas-engine/actores/-actor-base.ts	/^  cuando_se_mantiene_una_colision(actor: Actor) {}$/;"	m
cuando_se_mantiene_una_colision	pilas-engine/actores/conejo.ts	/^  cuando_se_mantiene_una_colision(actor) {}$/;"	m
cuando_suelta	pilas-engine/habilidades/arrastrable.ts	/^  private cuando_suelta(_, objeto) {$/;"	m
cuando_suelta_tecla	pilas-engine/actores/-actor-base.ts	/^  cuando_suelta_tecla(tecla: string, evento_original: any) {}$/;"	m
cuando_suelta_tecla	pilas-engine/escenas/-escena-base.ts	/^  cuando_suelta_tecla(tecla: string, evento: any) {}$/;"	m
cuando_termina_de_hacer_click	pilas-engine/actores/-actor-base.ts	/^  cuando_termina_de_hacer_click(x, y, evento_original) {}$/;"	m
cuando_termina_de_hacer_click	pilas-engine/actores/boton_abajo.ts	/^  cuando_termina_de_hacer_click() {$/;"	m
cuando_termina_de_hacer_click	pilas-engine/actores/boton_arriba.ts	/^  cuando_termina_de_hacer_click() {$/;"	m
cuando_termina_de_hacer_click	pilas-engine/actores/boton_derecha.ts	/^  cuando_termina_de_hacer_click() {$/;"	m
cuando_termina_de_hacer_click	pilas-engine/actores/boton_espacio.ts	/^  cuando_termina_de_hacer_click() {$/;"	m
cuando_termina_de_hacer_click	pilas-engine/actores/boton_izquierda.ts	/^  cuando_termina_de_hacer_click() {$/;"	m
cuando_termina_de_hacer_click	pilas-engine/actores/deslizador.ts	/^  cuando_termina_de_hacer_click() {$/;"	m
cuando_termina_de_hacer_click	pilas-engine/automata.ts	/^  cuando_termina_de_hacer_click(x: number, y: number, evento_original: any) {$/;"	m
cuando_termina_de_hacer_click	pilas-engine/escenas/-escena-base.ts	/^  cuando_termina_de_hacer_click(x: number, y: number, evento_original: any) {}$/;"	m
cuando_termina_de_hacer_click_en_la_pantalla	pilas-engine/actores/-actor-base.ts	/^  cuando_termina_de_hacer_click_en_la_pantalla(x: number, y: number, evento_original: any) {}$/;"	m
cuando_termina_de_mover_un_actor	pilas-engine/modos/modo_deprecated.ts	/^        cuando_termina_de_mover_un_actor(null, actor_que_se_esta_arrastrando);$/;"	m
cuando_termina_una_colision	pilas-engine/actores/-actor-base.ts	/^  cuando_termina_una_colision(actor: Actor) {}$/;"	m
cuando_termina_una_colision	pilas-engine/actores/conejo.ts	/^  cuando_termina_una_colision(actor) {}$/;"	m
cuando_transcurre_un_segundo	pilas-engine/actores/-actor-base.ts	/^  cuando_transcurre_un_segundo(segundos_transcurridos: number) {}$/;"	m
cuando_transcurre_un_segundo	pilas-engine/escenas/-escena-base.ts	/^  cuando_transcurre_un_segundo(segundos_transcurridos: number) {}$/;"	m
cubicBezierTo	pilas-engine/declaraciones/phaser.d.ts	/^            cubicBezierTo(x: number | Phaser.Math.Vector2, y: number | Phaser.Math.Vector2, control1X: number | Phaser.Math.Vector2, control1Y?: number, control2X?: number, control2Y?: number): this;$/;"	m
cull	pilas-engine/declaraciones/phaser.d.ts	/^            cull(camera?: Phaser.Cameras.Scene2D.Camera): Phaser.Tilemaps.Tile[];$/;"	m
cullCallback	pilas-engine/declaraciones/phaser.d.ts	/^            cullCallback: Function;$/;"	m
cullPaddingX	pilas-engine/declaraciones/phaser.d.ts	/^            cullPaddingX: number;$/;"	m
cullPaddingY	pilas-engine/declaraciones/phaser.d.ts	/^            cullPaddingY: number;$/;"	m
culledTiles	pilas-engine/declaraciones/phaser.d.ts	/^            culledTiles: Phaser.Tilemaps.Tile[];$/;"	m
curAnim	pilas-engine/libs/spriter.ts	/^  curAnim(): Animation {$/;"	m
curAnimLength	pilas-engine/libs/spriter.ts	/^  curAnimLength(): number {$/;"	m
curEntity	pilas-engine/libs/spriter.ts	/^  curEntity(): Entity {$/;"	m
current	pilas-engine/declaraciones/phaser.d.ts	/^                    current: Phaser.Math.Vector2;$/;"	m
current	pilas-engine/declaraciones/phaser.d.ts	/^                    current: number;$/;"	m
current	pilas-engine/declaraciones/phaser.d.ts	/^                current: Phaser.Renderer.WebGL.WebGLPipeline;$/;"	m
current	pilas-engine/declaraciones/phaser.d.ts	/^                current: number;$/;"	m
currentActiveTexture	pilas-engine/declaraciones/phaser.d.ts	/^                currentActiveTexture: number;$/;"	m
currentAnim	pilas-engine/declaraciones/phaser.d.ts	/^            currentAnim: Phaser.Animations.Animation;$/;"	m
currentBlendMode	pilas-engine/declaraciones/phaser.d.ts	/^                currentBlendMode: number;$/;"	m
currentCameraMask	pilas-engine/declaraciones/phaser.d.ts	/^                currentCameraMask: any;$/;"	m
currentContext	pilas-engine/declaraciones/phaser.d.ts	/^                currentContext: CanvasRenderingContext2D;$/;"	m
currentFrame	pilas-engine/declaraciones/phaser.d.ts	/^                currentFrame: number;$/;"	m
currentFrame	pilas-engine/declaraciones/phaser.d.ts	/^            currentFrame: Phaser.Animations.AnimationFrame;$/;"	m
currentFramebuffer	pilas-engine/declaraciones/phaser.d.ts	/^                currentFramebuffer: WebGLFramebuffer;$/;"	m
currentLayerIndex	pilas-engine/declaraciones/phaser.d.ts	/^            currentLayerIndex: number;$/;"	m
currentMarker	pilas-engine/declaraciones/phaser.d.ts	/^            readonly currentMarker: Phaser.Types.Sound.SoundMarker;$/;"	m
currentMask	pilas-engine/declaraciones/phaser.d.ts	/^                currentMask: any;$/;"	m
currentProgram	pilas-engine/declaraciones/phaser.d.ts	/^                currentProgram: WebGLProgram;$/;"	m
currentRenderTarget	pilas-engine/declaraciones/phaser.d.ts	/^                currentRenderTarget: Phaser.Renderer.WebGL.RenderTarget;$/;"	m
currentScissor	pilas-engine/declaraciones/phaser.d.ts	/^                currentScissor: Uint32Array;$/;"	m
currentScissorEnabled	pilas-engine/declaraciones/phaser.d.ts	/^                currentScissorEnabled: boolean;$/;"	m
currentShader	pilas-engine/declaraciones/phaser.d.ts	/^                currentShader: Phaser.Renderer.WebGL.WebGLShader;$/;"	m
currentType	pilas-engine/declaraciones/phaser.d.ts	/^                currentType: string;$/;"	m
currentUnit	pilas-engine/declaraciones/phaser.d.ts	/^                currentUnit: number;$/;"	m
cursor	pilas-engine/declaraciones/phaser.d.ts	/^                cursor: boolean | string;$/;"	m
cursor_x	pilas-engine/pilas.ts	/^  cursor_x: number = 0;$/;"	m
cursor_x_absoluta	pilas-engine/pilas.ts	/^  cursor_x_absoluta: number = 0;$/;"	m
cursor_y	pilas-engine/pilas.ts	/^  cursor_y: number = 0;$/;"	m
cursor_y_absoluta	pilas-engine/pilas.ts	/^  cursor_y_absoluta: number = 0;$/;"	m
curve	pilas-engine/declaraciones/phaser.d.ts	/^            curve(x?: number, y?: number, curve?: Phaser.Curves.Curve, fillColor?: number, fillAlpha?: number): Phaser.GameObjects.Curve;$/;"	m
curve	pilas-engine/libs/spriter.ts	/^  curve: Curve = new Curve();$/;"	m
curves	pilas-engine/declaraciones/phaser.d.ts	/^                curves: Phaser.Types.Curves.JSONCurve[];$/;"	m
curves	pilas-engine/declaraciones/phaser.d.ts	/^            curves: Phaser.Curves.Curve[];$/;"	m
custom	pilas-engine/declaraciones/phaser.d.ts	/^            custom: {[key: string]: Phaser.Cache.BaseCache};$/;"	m
customBoundsRectangle	pilas-engine/declaraciones/phaser.d.ts	/^                customBoundsRectangle: Phaser.Geom.Rectangle;$/;"	m
customData	pilas-engine/declaraciones/phaser.d.ts	/^            customData: object;$/;"	m
customEnvironment	pilas-engine/declaraciones/phaser.d.ts	/^            readonly customEnvironment: boolean;$/;"	m
customHitArea	pilas-engine/declaraciones/phaser.d.ts	/^                customHitArea: boolean;$/;"	m
customPivot	pilas-engine/declaraciones/phaser.d.ts	/^            customPivot: boolean;$/;"	m
customSeparateX	pilas-engine/declaraciones/phaser.d.ts	/^                customSeparateX: boolean;$/;"	m
customSeparateY	pilas-engine/declaraciones/phaser.d.ts	/^                customSeparateY: boolean;$/;"	m
customViewports	pilas-engine/declaraciones/phaser.d.ts	/^            customViewports: number;$/;"	m
cutHeight	pilas-engine/declaraciones/phaser.d.ts	/^            cutHeight: number;$/;"	m
cutWidth	pilas-engine/declaraciones/phaser.d.ts	/^            cutWidth: number;$/;"	m
cutX	pilas-engine/declaraciones/phaser.d.ts	/^            cutX: number;$/;"	m
cutY	pilas-engine/declaraciones/phaser.d.ts	/^            cutY: number;$/;"	m
d	pilas-engine/declaraciones/phaser.d.ts	/^                d: number;$/;"	m
darken	pilas-engine/declaraciones/phaser.d.ts	/^            darken(amount: number): Phaser.Display.Color;$/;"	m
data	pilas-engine/animacion_de_propiedad.ts	/^  private data: [any?];$/;"	m
data	pilas-engine/declaraciones/phaser.d.ts	/^                    data: any;$/;"	m
data	pilas-engine/declaraciones/phaser.d.ts	/^                    data: object;$/;"	m
data	pilas-engine/declaraciones/phaser.d.ts	/^                data: ArrayBuffer | string;$/;"	m
data	pilas-engine/declaraciones/phaser.d.ts	/^                data: Uint8Array;$/;"	m
data	pilas-engine/declaraciones/phaser.d.ts	/^                data: object;$/;"	m
data	pilas-engine/declaraciones/phaser.d.ts	/^            data: Phaser.Data.DataManager;$/;"	m
data	pilas-engine/declaraciones/phaser.d.ts	/^            data: Phaser.Tilemaps.Tile[][];$/;"	m
data	pilas-engine/declaraciones/phaser.d.ts	/^            data: Phaser.Types.Tweens.TweenDataConfig[];$/;"	m
data	pilas-engine/declaraciones/phaser.d.ts	/^            data: Uint8ClampedArray;$/;"	m
data	pilas-engine/declaraciones/phaser.d.ts	/^            data: any;$/;"	m
data	pilas-engine/declaraciones/phaser.d.ts	/^            data: any[];$/;"	m
data	pilas-engine/declaraciones/phaser.d.ts	/^            data: object;$/;"	m
data	pilas-engine/declaraciones/phaser.d.ts	/^        data: Phaser.Data.DataManager;$/;"	m
data	pilas-engine/declaraciones/phaser.d.ts	/^    data: string;$/;"	m
data	pilas-engine/libs/spriter.ts	/^  data: Data;$/;"	m
dataLocked	pilas-engine/declaraciones/phaser.d.ts	/^        dataLocked: boolean;$/;"	m
dataSource	pilas-engine/declaraciones/phaser.d.ts	/^            dataSource: any[];$/;"	m
deadzone	pilas-engine/declaraciones/phaser.d.ts	/^                deadzone: Phaser.Geom.Rectangle;$/;"	m
deathCallback	pilas-engine/declaraciones/phaser.d.ts	/^                deathCallback: Phaser.Types.GameObjects.Particles.ParticleDeathCallback;$/;"	m
deathCallbackScope	pilas-engine/declaraciones/phaser.d.ts	/^                deathCallbackScope: any;$/;"	m
deathZone	pilas-engine/declaraciones/phaser.d.ts	/^                deathZone: Phaser.GameObjects.Particles.Zones.DeathZone;$/;"	m
debug	pilas-engine/pilas.ts	/^        debug: false$/;"	m
debugBodyColor	pilas-engine/declaraciones/phaser.d.ts	/^                    debugBodyColor: number;$/;"	m
debugBodyColor	pilas-engine/declaraciones/phaser.d.ts	/^                debugBodyColor: number;$/;"	m
debugCallback	pilas-engine/declaraciones/phaser.d.ts	/^            debugCallback: Function;$/;"	m
debugConfig	pilas-engine/declaraciones/phaser.d.ts	/^                debugConfig: Phaser.Types.Physics.Matter.MatterDebugConfig;$/;"	m
debugGraphic	pilas-engine/declaraciones/phaser.d.ts	/^                debugGraphic: Phaser.GameObjects.Graphics;$/;"	m
debugGraphic	pilas-engine/declaraciones/phaser.d.ts	/^            debugGraphic: Phaser.GameObjects.Graphics;$/;"	m
debugShowBody	pilas-engine/declaraciones/phaser.d.ts	/^                    debugShowBody: boolean;$/;"	m
debugShowBody	pilas-engine/declaraciones/phaser.d.ts	/^                debugShowBody: boolean;$/;"	m
debugShowStaticBody	pilas-engine/declaraciones/phaser.d.ts	/^                    debugShowStaticBody: boolean;$/;"	m
debugShowVelocity	pilas-engine/declaraciones/phaser.d.ts	/^                    debugShowVelocity: boolean;$/;"	m
debugShowVelocity	pilas-engine/declaraciones/phaser.d.ts	/^                debugShowVelocity: boolean;$/;"	m
decir	pilas-engine/actores/-actor-base.ts	/^  decir(mensaje: string, duracion: number = 4, dx: number = 0, dy: number = 0) {$/;"	m
decir	pilas-engine/animacion_de_propiedad.ts	/^  decir(mensaje: string) {$/;"	m
decir	pilas-engine/animacion_nula.ts	/^  decir() {$/;"	m
decode	pilas-engine/modos/modo_cargador.ts	/^      decode: function(input: any) {$/;"	m
decodeAudio	pilas-engine/declaraciones/phaser.d.ts	/^            decodeAudio(audioKey?: Phaser.Types.Sound.DecodeAudioConfig[] | string, audioData?: ArrayBuffer | string): void;$/;"	m
decomposeMatrix	pilas-engine/declaraciones/phaser.d.ts	/^                decomposeMatrix(): object;$/;"	m
decomposedMatrix	pilas-engine/declaraciones/phaser.d.ts	/^                decomposedMatrix: object;$/;"	m
default	pilas-engine/actores/-actor-base.ts	/^      default:$/;"	m
default	pilas-engine/declaraciones/phaser.d.ts	/^                default: Phaser.Cameras.Scene2D.Camera;$/;"	m
default	pilas-engine/libs/spriter.ts	/^                default:$/;"	m
default	pilas-engine/libs/spriter.ts	/^          default:$/;"	m
default	pilas-engine/libs/spriter.ts	/^        default:$/;"	m
default	pilas-engine/libs/spriter.ts	/^      default:$/;"	m
default	pilas-engine/libs/spriter.ts	/^    default:$/;"	m
default	pilas-engine/pilas.ts	/^        default: "matter",$/;"	m
defaultCursor	pilas-engine/declaraciones/phaser.d.ts	/^            defaultCursor: string;$/;"	m
defaultDivisions	pilas-engine/declaraciones/phaser.d.ts	/^            defaultDivisions: number;$/;"	m
defaultEmit	pilas-engine/declaraciones/phaser.d.ts	/^                defaultEmit(particle: Phaser.GameObjects.Particles.Particle, key: string, value?: number): number;$/;"	m
defaultFillAlpha	pilas-engine/declaraciones/phaser.d.ts	/^            defaultFillAlpha: number;$/;"	m
defaultFillColor	pilas-engine/declaraciones/phaser.d.ts	/^            defaultFillColor: number;$/;"	m
defaultFrame	pilas-engine/declaraciones/phaser.d.ts	/^                defaultFrame: Phaser.Textures.Frame;$/;"	m
defaultFrame	pilas-engine/declaraciones/phaser.d.ts	/^            defaultFrame: string | number;$/;"	m
defaultImage	pilas-engine/declaraciones/phaser.d.ts	/^            readonly defaultImage: string;$/;"	m
defaultKey	pilas-engine/declaraciones/phaser.d.ts	/^            defaultKey: string;$/;"	m
defaultNormalMap	pilas-engine/declaraciones/phaser.d.ts	/^                    defaultNormalMap: object;$/;"	m
defaultPhysicsSystem	pilas-engine/declaraciones/phaser.d.ts	/^            readonly defaultPhysicsSystem: boolean | string;$/;"	m
defaultPipeline	pilas-engine/declaraciones/phaser.d.ts	/^                defaultPipeline: Phaser.Renderer.WebGL.WebGLPipeline;$/;"	m
defaultPipeline	pilas-engine/declaraciones/phaser.d.ts	/^            defaultPipeline: Phaser.Renderer.WebGL.WebGLPipeline;$/;"	m
defaultPlugins	pilas-engine/declaraciones/phaser.d.ts	/^            readonly defaultPlugins: any;$/;"	m
defaultStrokeAlpha	pilas-engine/declaraciones/phaser.d.ts	/^            defaultStrokeAlpha: number;$/;"	m
defaultStrokeColor	pilas-engine/declaraciones/phaser.d.ts	/^            defaultStrokeColor: number;$/;"	m
defaultStrokeWidth	pilas-engine/declaraciones/phaser.d.ts	/^            defaultStrokeWidth: number;$/;"	m
defaultUpdate	pilas-engine/declaraciones/phaser.d.ts	/^                defaultUpdate(particle: Phaser.GameObjects.Particles.Particle, key: string, t: number, value: number): number;$/;"	m
defaultValue	pilas-engine/declaraciones/phaser.d.ts	/^                defaultValue: number;$/;"	m
default_pivot	pilas-engine/libs/spriter.ts	/^  default_pivot: boolean = false;$/;"	m
default_value	pilas-engine/libs/spriter.ts	/^  default_value: number | string;$/;"	m
defaults	pilas-engine/declaraciones/phaser.d.ts	/^                defaults: Phaser.Types.Physics.Arcade.ArcadeWorldDefaults;$/;"	m
defaults	pilas-engine/declaraciones/phaser.d.ts	/^                defaults: Phaser.Types.Physics.Arcade.PhysicsGroupDefaults;$/;"	m
definir_animacion	pilas-engine/huesos.ts	/^  definir_animacion(nombre: string) {$/;"	m
definir_area_de_interactividad	pilas-engine/actores/-actor-base.ts	/^  definir_area_de_interactividad(ancho: number, alto: number) {$/;"	m
definir_cursor	pilas-engine/pilas.ts	/^  definir_cursor(nombre: string) {$/;"	m
definir_escena_actual	pilas-engine/escenas.ts	/^  definir_escena_actual(escena: EscenaBase) {$/;"	m
definir_estados_de_depuracion	pilas-engine/depurador.ts	/^  definir_estados_de_depuracion(datos: any) {$/;"	m
definir_mapa	pilas-engine/pilas.ts	/^  definir_mapa(diccionario: any) {$/;"	m
definir_modo	pilas-engine/pilas.ts	/^  definir_modo(nombre: string, datos: any) {$/;"	m
deg	pilas-engine/libs/spriter.ts	/^  get deg(): number {$/;"	m
deg	pilas-engine/libs/spriter.ts	/^  set deg(value: number) {$/;"	m
delay	pilas-engine/declaraciones/phaser.d.ts	/^                delay: Function;$/;"	m
delay	pilas-engine/declaraciones/phaser.d.ts	/^                delay: Phaser.GameObjects.Particles.EmitterOp;$/;"	m
delay	pilas-engine/declaraciones/phaser.d.ts	/^                delay: number;$/;"	m
delay	pilas-engine/declaraciones/phaser.d.ts	/^            delay: number;$/;"	m
delay	pilas-engine/declaraciones/phaser.d.ts	/^            readonly delay: number;$/;"	m
delay	pilas-engine/pilas.ts	/^      delay: duracion * 1000,$/;"	m
delayCounter	pilas-engine/declaraciones/phaser.d.ts	/^            delayCounter: number;$/;"	m
delayCurrent	pilas-engine/declaraciones/phaser.d.ts	/^                delayCurrent: number;$/;"	m
delayedCall	pilas-engine/declaraciones/phaser.d.ts	/^            delayedCall(delay: number, callback: Function, args?: any[], callbackScope?: any): Phaser.Time.TimerEvent;$/;"	m
delete	pilas-engine/declaraciones/phaser.d.ts	/^            delete(key: K): Phaser.Structs.Map<K, V>;$/;"	m
delete	pilas-engine/declaraciones/phaser.d.ts	/^            delete(value: T): Phaser.Structs.Set<T>;$/;"	m
deleteBuffer	pilas-engine/declaraciones/phaser.d.ts	/^                deleteBuffer(vertexBuffer: WebGLBuffer): this;$/;"	m
deleteFramebuffer	pilas-engine/declaraciones/phaser.d.ts	/^                deleteFramebuffer(framebuffer: WebGLFramebuffer): this;$/;"	m
deleteOnMatch	pilas-engine/declaraciones/phaser.d.ts	/^                deleteOnMatch: boolean;$/;"	m
deleteProgram	pilas-engine/declaraciones/phaser.d.ts	/^                deleteProgram(program: WebGLProgram): this;$/;"	m
deleteTexture	pilas-engine/declaraciones/phaser.d.ts	/^                deleteTexture(texture: WebGLTexture, reset?: boolean): this;$/;"	m
delta	pilas-engine/declaraciones/phaser.d.ts	/^            delta: number;$/;"	m
deltaAbsX	pilas-engine/declaraciones/phaser.d.ts	/^                deltaAbsX(): number;$/;"	m
deltaAbsY	pilas-engine/declaraciones/phaser.d.ts	/^                deltaAbsY(): number;$/;"	m
deltaHistory	pilas-engine/declaraciones/phaser.d.ts	/^            deltaHistory: number[];$/;"	m
deltaIndex	pilas-engine/declaraciones/phaser.d.ts	/^            deltaIndex: number;$/;"	m
deltaMax	pilas-engine/declaraciones/phaser.d.ts	/^                deltaMax: Phaser.Math.Vector2;$/;"	m
deltaSmoothingMax	pilas-engine/declaraciones/phaser.d.ts	/^            deltaSmoothingMax: number;$/;"	m
deltaX	pilas-engine/declaraciones/phaser.d.ts	/^                deltaX(): number;$/;"	m
deltaX	pilas-engine/declaraciones/phaser.d.ts	/^            deltaX: number;$/;"	m
deltaXFinal	pilas-engine/declaraciones/phaser.d.ts	/^                deltaXFinal(): number;$/;"	m
deltaY	pilas-engine/declaraciones/phaser.d.ts	/^                deltaY(): number;$/;"	m
deltaY	pilas-engine/declaraciones/phaser.d.ts	/^            deltaY: number;$/;"	m
deltaYFinal	pilas-engine/declaraciones/phaser.d.ts	/^                deltaYFinal(): number;$/;"	m
deltaZ	pilas-engine/declaraciones/phaser.d.ts	/^                deltaZ(): number;$/;"	m
deltaZ	pilas-engine/declaraciones/phaser.d.ts	/^            deltaZ: number;$/;"	m
demo	pilas-engine/animacion_de_propiedad.ts	/^      demo: 0,$/;"	m
demora	pilas-engine/comportamientos/mover.ts	/^  demora: number = 1;$/;"	m
deprecated__actualizar_sprite_desde_datos	pilas-engine/modos/modo.ts	/^  deprecated__actualizar_sprite_desde_datos(sprite, actor) {$/;"	m
depth	pilas-engine/declaraciones/phaser.d.ts	/^                    depth: number;$/;"	m
depth	pilas-engine/declaraciones/phaser.d.ts	/^                depth: number;$/;"	m
depth	pilas-engine/declaraciones/phaser.d.ts	/^                readonly depth: number;$/;"	m
depth	pilas-engine/declaraciones/phaser.d.ts	/^            depth: number;$/;"	m
depthSort	pilas-engine/declaraciones/phaser.d.ts	/^                depthSort(): this;$/;"	m
depthSort	pilas-engine/declaraciones/phaser.d.ts	/^            depthSort(): this;$/;"	m
depthSort	pilas-engine/declaraciones/phaser.d.ts	/^            depthSort(): void;$/;"	m
depthSortCallback	pilas-engine/declaraciones/phaser.d.ts	/^                depthSortCallback(a: object, b: object): number;$/;"	m
depurador	pilas-engine/pilas.ts	/^  depurador: Depurador;$/;"	m
derecha	pilas-engine/actores/-actor-base.ts	/^      derecha: 1,$/;"	m
derecha	pilas-engine/control.ts	/^      derecha: false,$/;"	m
derecha	pilas-engine/control.ts	/^  get derecha() {$/;"	m
derecha	pilas-engine/control.ts	/^  get derecha(): boolean {$/;"	m
desactivar	pilas-engine/actores/boton_activable.ts	/^  desactivar() {$/;"	m
desactivar_clicks	pilas-engine/actores/-actor-base.ts	/^  desactivar_clicks() {$/;"	m
desaturate	pilas-engine/declaraciones/phaser.d.ts	/^            desaturate(amount: number): Phaser.Display.Color;$/;"	m
desaturateLuminance	pilas-engine/declaraciones/phaser.d.ts	/^            desaturateLuminance(multiply?: boolean): this;$/;"	m
descent	pilas-engine/declaraciones/phaser.d.ts	/^                    descent: number;$/;"	m
desconectar	pilas-engine/eventos.ts	/^  desconectar(identificador_del_evento: string) {$/;"	m
desconectar	pilas-engine/eventos_de_escena.ts	/^  desconectar(identificador_del_evento: string) {$/;"	m
deshabilitar	pilas-engine/actores/boton_activable.ts	/^  deshabilitar() {$/;"	m
desktop	pilas-engine/declaraciones/phaser.d.ts	/^            desktop: boolean;$/;"	m
deslizador	pilas-engine/actores.ts	/^  deslizador() {$/;"	m
deslizador	pilas-engine/actores/deslizador.ts	/^class deslizador extends Actor {$/;"	c
desordenar_lista	pilas-engine/pilas.ts	/^  desordenar_lista(lista_original: [any]) {$/;"	m
desplazamiento_del_fondo_x	pilas-engine/escenas/-escena-base.ts	/^      desplazamiento_del_fondo_x: this.desplazamiento_del_fondo_x,$/;"	m
desplazamiento_del_fondo_x	pilas-engine/escenas/-escena-base.ts	/^  desplazamiento_del_fondo_x: number;$/;"	m
desplazamiento_del_fondo_y	pilas-engine/escenas/-escena-base.ts	/^      desplazamiento_del_fondo_y: this.desplazamiento_del_fondo_y$/;"	m
desplazamiento_del_fondo_y	pilas-engine/escenas/-escena-base.ts	/^  desplazamiento_del_fondo_y: number;$/;"	m
desplazar_actor_desde_el_evento_drag	pilas-engine/modos/modo_deprecated.ts	/^  desplazar_actor_desde_el_evento_drag(gameObject: Phaser.GameObjects.Sprite, pointer: any) {$/;"	m
desplazar_la_camara_desde_el_evento_drag	pilas-engine/modos/modo_deprecated.ts	/^  desplazar_la_camara_desde_el_evento_drag(pointer: any) {$/;"	m
desplazar_la_camara_desde_el_evento_drag	pilas-engine/modos/modo_pausa.ts	/^  desplazar_la_camara_desde_el_evento_drag(pointer) {$/;"	m
destacar	pilas-engine/modos/actor_en_modo_edicion.ts	/^  destacar() {$/;"	m
destacar_actor_por_id	pilas-engine/modos/modo.ts	/^  destacar_actor_por_id(id) {$/;"	m
destination	pilas-engine/declaraciones/phaser.d.ts	/^                    destination: Phaser.Math.Vector2;$/;"	m
destination	pilas-engine/declaraciones/phaser.d.ts	/^                    destination: number;$/;"	m
destination	pilas-engine/declaraciones/phaser.d.ts	/^            destination: AudioNode;$/;"	m
destino_x	pilas-engine/comportamientos/mover.ts	/^  destino_x: number = 0;$/;"	m
destino_y	pilas-engine/comportamientos/mover.ts	/^  destino_y: number = 0;$/;"	m
destroy	pilas-engine/declaraciones/phaser.d.ts	/^                    destroy(): this;$/;"	m
destroy	pilas-engine/declaraciones/phaser.d.ts	/^                    destroy(): void;$/;"	m
destroy	pilas-engine/declaraciones/phaser.d.ts	/^                destroy(): Phaser.Physics.Matter.TileBody;$/;"	m
destroy	pilas-engine/declaraciones/phaser.d.ts	/^                destroy(): this;$/;"	m
destroy	pilas-engine/declaraciones/phaser.d.ts	/^                destroy(): void;$/;"	m
destroy	pilas-engine/declaraciones/phaser.d.ts	/^                destroy: any;$/;"	m
destroy	pilas-engine/declaraciones/phaser.d.ts	/^            destroy(): void;$/;"	m
destroy	pilas-engine/declaraciones/phaser.d.ts	/^            destroy(destroyChildren?: boolean, removeFromScene?: boolean): void;$/;"	m
destroy	pilas-engine/declaraciones/phaser.d.ts	/^            destroy(fromScene?: boolean): void;$/;"	m
destroy	pilas-engine/declaraciones/phaser.d.ts	/^            destroy(removeFromTilemap?: boolean): void;$/;"	m
destroy	pilas-engine/declaraciones/phaser.d.ts	/^            function destroy(): void;$/;"	f
destroy	pilas-engine/declaraciones/phaser.d.ts	/^        destroy(): void;$/;"	m
destroy	pilas-engine/declaraciones/phaser.d.ts	/^        destroy(removeCanvas: boolean, noReturn?: boolean): void;$/;"	m
destroyCorePlugins	pilas-engine/declaraciones/phaser.d.ts	/^            function destroyCorePlugins(): void;$/;"	f
destroyCustomPlugins	pilas-engine/declaraciones/phaser.d.ts	/^            function destroyCustomPlugins(): void;$/;"	f
destroyLayer	pilas-engine/declaraciones/phaser.d.ts	/^            destroyLayer(layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Tilemaps.Tilemap;$/;"	m
desvincular_gamepad_del_control_principal	pilas-engine/control.ts	/^  desvincular_gamepad_del_control_principal() {}$/;"	m
desynchronized	pilas-engine/declaraciones/phaser.d.ts	/^            readonly desynchronized: boolean;$/;"	m
detector	pilas-engine/declaraciones/phaser.d.ts	/^                detector: MatterJS.DetectorFactory;$/;"	m
detener_musica	pilas-engine/actores/-actor-base.ts	/^  detener_musica() {$/;"	m
detener_musica	pilas-engine/escenas/-escena-base.ts	/^  detener_musica() {$/;"	m
detener_musica	pilas-engine/pilas.ts	/^  detener_musica() {$/;"	m
determinant	pilas-engine/declaraciones/phaser.d.ts	/^            determinant(): number;$/;"	m
detune	pilas-engine/declaraciones/phaser.d.ts	/^            detune: number;$/;"	m
device	pilas-engine/declaraciones/phaser.d.ts	/^        device: Phaser.DeviceConf;$/;"	m
diameter	pilas-engine/declaraciones/phaser.d.ts	/^            diameter: number;$/;"	m
dibujar	pilas-engine/actores/barra_de_energia.ts	/^  dibujar() {$/;"	m
dibujar_barra	pilas-engine/actores/barra_de_energia.ts	/^  private dibujar_barra() {$/;"	m
dibujar_borde_de_circulo	pilas-engine/actores/-pizarra-base.ts	/^  dibujar_borde_de_circulo(x: number = 0, y: number = 0, radio: number = 20, color: any = "negro", grosor: number = 1) {$/;"	m
dibujar_borde_de_rectangulo	pilas-engine/actores/-pizarra-base.ts	/^  dibujar_borde_de_rectangulo(x: number = 0, y: number = 0, ancho: number = 20, alto: number = 20, color: any = "negro", grosor: number = 1) {$/;"	m
dibujar_circulo	pilas-engine/actores/-pizarra-base.ts	/^  dibujar_circulo(x: number = 0, y: number = 0, radio: number = 20, color: any = "negro") {$/;"	m
dibujar_figura_desde_vertices	pilas-engine/modos/modo.ts	/^  dibujar_figura_desde_vertices(canvas, linea, color, vertices) {$/;"	m
dibujar_laser_del_actor	pilas-engine/modos/modo.ts	/^  protected dibujar_laser_del_actor(laser: any, canvas: Phaser.GameObjects.Graphics, actor: any) {$/;"	m
dibujar_lasers	pilas-engine/modos/modo.ts	/^  dibujar_lasers() {$/;"	m
dibujar_lasers	pilas-engine/modos/modo_pausa.ts	/^  dibujar_lasers() {$/;"	m
dibujar_linea	pilas-engine/actores/-pizarra-base.ts	/^  dibujar_linea(x: number = 0, y: number = 0, x1: number = 100, y1: number = 100, color: any = "negro", grosor: number = 1) {$/;"	m
dibujar_punto_de_control	pilas-engine/modos/modo.ts	/^  dibujar_punto_de_control(graphics: Phaser.GameObjects.Graphics, x: number, y: number) {$/;"	m
dibujar_punto_de_control	pilas-engine/modos/modo_ejecucion.ts	/^  dibujar_punto_de_control(graphics: Phaser.GameObjects.Graphics, _x: number, _y: number) {$/;"	m
dibujar_puntos_de_las_posiciones_recorridas	pilas-engine/historia.ts	/^  dibujar_puntos_de_las_posiciones_recorridas(graphics, filtro_actor) {$/;"	m
dibujar_rectangulo	pilas-engine/actores/-pizarra-base.ts	/^  dibujar_rectangulo(x: number = 0, y: number = 0, ancho: number = 20, alto: number = 20, color: any = "negro") {$/;"	m
dibujar_sensores_sobre_canvas_fisica	pilas-engine/modos/modo_pausa.ts	/^  dibujar_sensores_sobre_canvas_fisica(posicion) {$/;"	m
difference	pilas-engine/declaraciones/phaser.d.ts	/^            difference(set: Phaser.Structs.Set<T>): Phaser.Structs.Set<T>;$/;"	m
difference	pilas-engine/laser.ts	/^  get difference() {$/;"	m
dinamico	pilas-engine/actores/-actor-base.ts	/^  get dinamico() {$/;"	m
dinamico	pilas-engine/actores/-actor-base.ts	/^  set dinamico(dinamico: boolean) {$/;"	m
direction	pilas-engine/declaraciones/phaser.d.ts	/^                    readonly direction: boolean;$/;"	m
direction	pilas-engine/laser.ts	/^  get direction() {$/;"	m
dirty	pilas-engine/declaraciones/phaser.d.ts	/^                dirty: boolean;$/;"	m
dirty	pilas-engine/declaraciones/phaser.d.ts	/^            dirty: boolean;$/;"	m
dirty	pilas-engine/libs/spriter.ts	/^  dirty: boolean = true;$/;"	m
disable	pilas-engine/declaraciones/phaser.d.ts	/^                disable(object: Phaser.GameObjects.GameObject | Phaser.GameObjects.GameObject[] | Phaser.GameObjects.Group | Phaser.GameObjects.Group[]): void;$/;"	m
disable	pilas-engine/declaraciones/phaser.d.ts	/^                function disable(context: CanvasRenderingContext2D | WebGLRenderingContext): CanvasRenderingContext2D | WebGLRenderingContext;$/;"	f
disable	pilas-engine/declaraciones/phaser.d.ts	/^            disable(): this;$/;"	m
disable	pilas-engine/declaraciones/phaser.d.ts	/^            disable(gameObject: Phaser.GameObjects.GameObject): void;$/;"	m
disableBody	pilas-engine/declaraciones/phaser.d.ts	/^                    disableBody(disableGameObject?: boolean, hideGameObject?: boolean): this;$/;"	m
disableBody	pilas-engine/declaraciones/phaser.d.ts	/^                disableBody(body: Phaser.Physics.Arcade.Body | Phaser.Physics.Arcade.StaticBody): void;$/;"	m
disableBody	pilas-engine/declaraciones/phaser.d.ts	/^                disableBody(disableGameObject?: boolean, hideGameObject?: boolean): this;$/;"	m
disableContextMenu	pilas-engine/declaraciones/phaser.d.ts	/^                disableContextMenu(): this;$/;"	m
disableContextMenu	pilas-engine/declaraciones/phaser.d.ts	/^            readonly disableContextMenu: boolean;$/;"	m
disableContextMenu	pilas-engine/pilas.ts	/^      disableContextMenu: true,$/;"	m
disableCull	pilas-engine/declaraciones/phaser.d.ts	/^                disableCull: boolean;$/;"	m
disableGlobalCapture	pilas-engine/declaraciones/phaser.d.ts	/^                disableGlobalCapture(): this;$/;"	m
disableGravity	pilas-engine/declaraciones/phaser.d.ts	/^                disableGravity(): this;$/;"	m
disableInteractive	pilas-engine/declaraciones/phaser.d.ts	/^            disableInteractive(): this;$/;"	m
disableSmoothing	pilas-engine/declaraciones/phaser.d.ts	/^                function disableSmoothing(): void;$/;"	f
disableUpdate	pilas-engine/declaraciones/phaser.d.ts	/^                disableUpdate(): void;$/;"	m
disconnectAll	pilas-engine/declaraciones/phaser.d.ts	/^                disconnectAll(): void;$/;"	m
disparar	pilas-engine/actores/nave.ts	/^  disparar() {$/;"	m
dispatchTimelineEvent	pilas-engine/declaraciones/phaser.d.ts	/^            dispatchTimelineEvent(event: Phaser.Types.Tweens.Event, callback: Function): void;$/;"	m
dispatchTweenDataEvent	pilas-engine/declaraciones/phaser.d.ts	/^            dispatchTweenDataEvent(event: Phaser.Types.Tweens.Event, callback: Function, tweenData: Phaser.Types.Tweens.TweenDataConfig): void;$/;"	m
dispatchTweenEvent	pilas-engine/declaraciones/phaser.d.ts	/^            dispatchTweenEvent(event: Phaser.Types.Tweens.Event, callback: Function): void;$/;"	m
displayCallback	pilas-engine/declaraciones/phaser.d.ts	/^            displayCallback: Phaser.Types.GameObjects.BitmapText.DisplayCallback;$/;"	m
displayHeight	pilas-engine/declaraciones/phaser.d.ts	/^                displayHeight: number;$/;"	m
displayHeight	pilas-engine/declaraciones/phaser.d.ts	/^                readonly displayHeight: number;$/;"	m
displayHeight	pilas-engine/declaraciones/phaser.d.ts	/^            displayHeight: number;$/;"	m
displayHeight	pilas-engine/declaraciones/phaser.d.ts	/^            readonly displayHeight: number;$/;"	m
displayList	pilas-engine/declaraciones/phaser.d.ts	/^            displayList: Phaser.GameObjects.DisplayList | Phaser.GameObjects.Layer;$/;"	m
displayList	pilas-engine/declaraciones/phaser.d.ts	/^            displayList: Phaser.GameObjects.DisplayList;$/;"	m
displayList	pilas-engine/declaraciones/phaser.d.ts	/^            protected displayList: Phaser.GameObjects.DisplayList;$/;"	m
displayOriginX	pilas-engine/declaraciones/phaser.d.ts	/^                displayOriginX: number;$/;"	m
displayOriginX	pilas-engine/declaraciones/phaser.d.ts	/^            displayOriginX: number;$/;"	m
displayOriginX	pilas-engine/declaraciones/phaser.d.ts	/^            readonly displayOriginX: number;$/;"	m
displayOriginY	pilas-engine/declaraciones/phaser.d.ts	/^                displayOriginY: number;$/;"	m
displayOriginY	pilas-engine/declaraciones/phaser.d.ts	/^            displayOriginY: number;$/;"	m
displayOriginY	pilas-engine/declaraciones/phaser.d.ts	/^            readonly displayOriginY: number;$/;"	m
displayScale	pilas-engine/declaraciones/phaser.d.ts	/^            displayScale: Phaser.Math.Vector2;$/;"	m
displaySize	pilas-engine/declaraciones/phaser.d.ts	/^            displaySize: Phaser.Structs.Size;$/;"	m
displayWidth	pilas-engine/declaraciones/phaser.d.ts	/^                displayWidth: number;$/;"	m
displayWidth	pilas-engine/declaraciones/phaser.d.ts	/^                readonly displayWidth: number;$/;"	m
displayWidth	pilas-engine/declaraciones/phaser.d.ts	/^            displayWidth: number;$/;"	m
displayWidth	pilas-engine/declaraciones/phaser.d.ts	/^            readonly displayWidth: number;$/;"	m
distance	pilas-engine/declaraciones/phaser.d.ts	/^            distance(src: Phaser.Types.Math.Vector2Like): number;$/;"	m
distance	pilas-engine/declaraciones/phaser.d.ts	/^            distance(v: Phaser.Math.Vector2 | Phaser.Math.Vector3 | Phaser.Math.Vector4): number;$/;"	m
distance	pilas-engine/declaraciones/phaser.d.ts	/^            distance(v: Phaser.Math.Vector2 | Phaser.Math.Vector3): number;$/;"	m
distance	pilas-engine/declaraciones/phaser.d.ts	/^            readonly distance: number;$/;"	m
distance	pilas-engine/laser.ts	/^  distance(vec = new vec2()) {$/;"	m
distanceSq	pilas-engine/declaraciones/phaser.d.ts	/^            distanceSq(src: Phaser.Types.Math.Vector2Like): number;$/;"	m
distanceSq	pilas-engine/declaraciones/phaser.d.ts	/^            distanceSq(v: Phaser.Math.Vector2 | Phaser.Math.Vector3 | Phaser.Math.Vector4): number;$/;"	m
distanceSq	pilas-engine/declaraciones/phaser.d.ts	/^            distanceSq(v: Phaser.Math.Vector2 | Phaser.Math.Vector3): number;$/;"	m
distancia	pilas-engine/laser.ts	/^  distancia: number;$/;"	m
distancia	pilas-engine/modos/modo.ts	/^          distancia: distancia,$/;"	m
distancia	pilas-engine/pilas.ts	/^          distancia: Math.trunc(this.obtener_distancia_entre_puntos(x1, y1, punto.x, punto.y)),$/;"	m
distancia_al_actor_con_etiqueta	pilas-engine/laser.ts	/^  distancia_al_actor_con_etiqueta(etiqueta: string) {$/;"	m
distancia_al_actor_mas_cercado	pilas-engine/laser.ts	/^  distancia_al_actor_mas_cercado() {$/;"	m
divide	pilas-engine/declaraciones/phaser.d.ts	/^            divide(src: Phaser.Types.Math.Vector2Like): Phaser.Math.Vector2;$/;"	m
divide	pilas-engine/declaraciones/phaser.d.ts	/^            divide(v: Phaser.Math.Vector2 | Phaser.Math.Vector3 | Phaser.Math.Vector4): Phaser.Math.Vector4;$/;"	m
divide	pilas-engine/declaraciones/phaser.d.ts	/^            divide(v: Phaser.Math.Vector2 | Phaser.Math.Vector3): Phaser.Math.Vector3;$/;"	m
dolby	pilas-engine/declaraciones/phaser.d.ts	/^            dolby: boolean;$/;"	m
dom	pilas-engine/declaraciones/phaser.d.ts	/^            dom(x: number, y: number, element?: HTMLElement | string, style?: string | any, innerText?: string): Phaser.GameObjects.DOMElement;$/;"	m
domContainer	pilas-engine/declaraciones/phaser.d.ts	/^        domContainer: HTMLDivElement;$/;"	m
domCreateContainer	pilas-engine/declaraciones/phaser.d.ts	/^            readonly domCreateContainer: boolean;$/;"	m
domPointerEvents	pilas-engine/declaraciones/phaser.d.ts	/^            readonly domPointerEvents: string;$/;"	m
dot	pilas-engine/declaraciones/phaser.d.ts	/^            dot(src: Phaser.Types.Math.Vector2Like): number;$/;"	m
dot	pilas-engine/declaraciones/phaser.d.ts	/^            dot(v: Phaser.Math.Quaternion | Phaser.Math.Vector4): number;$/;"	m
dot	pilas-engine/declaraciones/phaser.d.ts	/^            dot(v: Phaser.Math.Vector3): number;$/;"	m
dot	pilas-engine/declaraciones/phaser.d.ts	/^            dot(v: Phaser.Math.Vector4): number;$/;"	m
down	pilas-engine/declaraciones/phaser.d.ts	/^                    down: Phaser.Input.Keyboard.Key;$/;"	m
down	pilas-engine/declaraciones/phaser.d.ts	/^                    down: boolean;$/;"	m
down	pilas-engine/declaraciones/phaser.d.ts	/^                down: Phaser.Input.Keyboard.Key;$/;"	m
down	pilas-engine/declaraciones/phaser.d.ts	/^                down: boolean;$/;"	m
downElement	pilas-engine/declaraciones/phaser.d.ts	/^            readonly downElement: any;$/;"	m
downTime	pilas-engine/declaraciones/phaser.d.ts	/^            downTime: number;$/;"	m
downX	pilas-engine/declaraciones/phaser.d.ts	/^            downX: number;$/;"	m
downY	pilas-engine/declaraciones/phaser.d.ts	/^            downY: number;$/;"	m
drag	pilas-engine/declaraciones/phaser.d.ts	/^                drag: Phaser.Math.Vector2;$/;"	m
dragDistanceThreshold	pilas-engine/declaraciones/phaser.d.ts	/^            dragDistanceThreshold: number;$/;"	m
dragStartX	pilas-engine/declaraciones/phaser.d.ts	/^                dragStartX: number;$/;"	m
dragStartXGlobal	pilas-engine/declaraciones/phaser.d.ts	/^                dragStartXGlobal: number;$/;"	m
dragStartY	pilas-engine/declaraciones/phaser.d.ts	/^                dragStartY: number;$/;"	m
dragStartYGlobal	pilas-engine/declaraciones/phaser.d.ts	/^                dragStartYGlobal: number;$/;"	m
dragState	pilas-engine/declaraciones/phaser.d.ts	/^                dragState: 0 | 1 | 2;$/;"	m
dragTimeThreshold	pilas-engine/declaraciones/phaser.d.ts	/^            dragTimeThreshold: number;$/;"	m
dragX	pilas-engine/declaraciones/phaser.d.ts	/^                dragX: number;$/;"	m
dragY	pilas-engine/declaraciones/phaser.d.ts	/^                dragY: number;$/;"	m
draggable	pilas-engine/declaraciones/phaser.d.ts	/^                draggable: boolean;$/;"	m
draggable	pilas-engine/modos/actor_en_modo_edicion.ts	/^      draggable: true,$/;"	m
draggable	pilas-engine/modos/camara_en_modo_edicion.ts	/^      draggable: true,$/;"	m
draw	pilas-engine/declaraciones/phaser.d.ts	/^            draw(entries: any, x?: number, y?: number, alpha?: number, tint?: number): this;$/;"	m
draw	pilas-engine/declaraciones/phaser.d.ts	/^            draw(x: number, y: number, source: HTMLImageElement | HTMLCanvasElement): Phaser.Textures.CanvasTexture;$/;"	m
drawCount	pilas-engine/declaraciones/phaser.d.ts	/^                drawCount: number;$/;"	m
drawDebug	pilas-engine/declaraciones/phaser.d.ts	/^                drawDebug(graphic: Phaser.GameObjects.Graphics): void;$/;"	m
drawDebug	pilas-engine/declaraciones/phaser.d.ts	/^                drawDebug: boolean;$/;"	m
drawFillRect	pilas-engine/declaraciones/phaser.d.ts	/^                drawFillRect(x: number, y: number, width: number, height: number, color: number, alpha: number, texture?: WebGLTexture, flipUV?: boolean): void;$/;"	m
drawFrame	pilas-engine/declaraciones/phaser.d.ts	/^                    drawFrame(source: Phaser.Renderer.WebGL.RenderTarget, target?: Phaser.Renderer.WebGL.RenderTarget, clearAlpha?: boolean): void;$/;"	m
drawFrame	pilas-engine/declaraciones/phaser.d.ts	/^                    drawFrame(source: Phaser.Renderer.WebGL.RenderTarget, target?: Phaser.Renderer.WebGL.RenderTarget, clearAlpha?: boolean, colorMatrix?: Phaser.Display.ColorMatrix): void;$/;"	m
drawFrame	pilas-engine/declaraciones/phaser.d.ts	/^                drawFrame(source: Phaser.Renderer.WebGL.RenderTarget, target?: Phaser.Renderer.WebGL.RenderTarget, clearAlpha?: boolean, colorMatrix?: Phaser.Display.ColorMatrix): this;$/;"	m
drawFrame	pilas-engine/declaraciones/phaser.d.ts	/^            drawFrame(key: string, frame?: string | number, x?: number, y?: number): Phaser.Textures.CanvasTexture;$/;"	m
drawFrame	pilas-engine/declaraciones/phaser.d.ts	/^            drawFrame(key: string, frame?: string | number, x?: number, y?: number, alpha?: number, tint?: number): this;$/;"	m
drawingBufferHeight	pilas-engine/declaraciones/phaser.d.ts	/^                readonly drawingBufferHeight: number;$/;"	m
dropShadowAlpha	pilas-engine/declaraciones/phaser.d.ts	/^            dropShadowAlpha: number;$/;"	m
dropShadowColor	pilas-engine/declaraciones/phaser.d.ts	/^            dropShadowColor: number;$/;"	m
dropShadowX	pilas-engine/declaraciones/phaser.d.ts	/^            dropShadowX: number;$/;"	m
dropShadowY	pilas-engine/declaraciones/phaser.d.ts	/^            dropShadowY: number;$/;"	m
dropZone	pilas-engine/declaraciones/phaser.d.ts	/^                dropZone: boolean;$/;"	m
dump	pilas-engine/declaraciones/phaser.d.ts	/^            dump(): void;$/;"	m
duration	pilas-engine/actores/-actor-base.ts	/^      duration: duracion * 1000,$/;"	m
duration	pilas-engine/declaraciones/phaser.d.ts	/^                    readonly duration: number;$/;"	m
duration	pilas-engine/declaraciones/phaser.d.ts	/^                duration: Function;$/;"	m
duration	pilas-engine/declaraciones/phaser.d.ts	/^                duration: number;$/;"	m
duration	pilas-engine/declaraciones/phaser.d.ts	/^            duration: number;$/;"	m
duration	pilas-engine/declaraciones/phaser.d.ts	/^            readonly duration: number;$/;"	m
duration	pilas-engine/pilas.ts	/^      duration: duracion * 1000$/;"	m
dx	pilas-engine/comportamientos/mover.ts	/^  dx: number;$/;"	m
dy	pilas-engine/comportamientos/mover.ts	/^  dy: number;$/;"	m
dynamicBitmapText	pilas-engine/declaraciones/phaser.d.ts	/^            dynamicBitmapText(config: Phaser.Types.GameObjects.BitmapText.BitmapTextConfig, addToScene?: boolean): Phaser.GameObjects.DynamicBitmapText;$/;"	m
dynamicBitmapText	pilas-engine/declaraciones/phaser.d.ts	/^            dynamicBitmapText(x: number, y: number, font: string, text?: string | string[], size?: number): Phaser.GameObjects.DynamicBitmapText;$/;"	m
e	pilas-engine/declaraciones/phaser.d.ts	/^                e: number;$/;"	m
each	pilas-engine/declaraciones/phaser.d.ts	/^            each(callback: DataEachCallback, context?: any, ...args: any[]): this;$/;"	m
each	pilas-engine/declaraciones/phaser.d.ts	/^            each(callback: EachListCallback<T>, context?: any, ...args: any[]): void;$/;"	m
each	pilas-engine/declaraciones/phaser.d.ts	/^            each(callback: EachMapCallback<V>): Phaser.Structs.Map<K, V>;$/;"	m
each	pilas-engine/declaraciones/phaser.d.ts	/^            each(callback: EachSetCallback<T>, callbackScope?: any): Phaser.Structs.Set<T>;$/;"	m
each	pilas-engine/declaraciones/phaser.d.ts	/^            each(callback: EachTextureCallback, scope: object, ...args: any[]): void;$/;"	m
each	pilas-engine/declaraciones/phaser.d.ts	/^            each(callback: Function, context?: object, ...args: any[]): this;$/;"	m
each	pilas-engine/declaraciones/phaser.d.ts	/^            each(callback: Function, scope?: object, ...args: any[]): void;$/;"	m
ease	pilas-engine/actores/-actor-base.ts	/^      ease: "Linear",$/;"	m
ease	pilas-engine/declaraciones/phaser.d.ts	/^                    ease: Function;$/;"	m
ease	pilas-engine/declaraciones/phaser.d.ts	/^                ease: Function;$/;"	m
ease	pilas-engine/pilas.ts	/^      ease: "Power1",$/;"	m
easeValueUpdate	pilas-engine/declaraciones/phaser.d.ts	/^                easeValueUpdate(particle: Phaser.GameObjects.Particles.Particle, key: string, t: number): number;$/;"	m
easedValueEmit	pilas-engine/declaraciones/phaser.d.ts	/^                easedValueEmit(particle: Phaser.GameObjects.Particles.Particle, key: string): number;$/;"	m
edge	pilas-engine/declaraciones/phaser.d.ts	/^            edge: boolean;$/;"	m
effectComplete	pilas-engine/declaraciones/phaser.d.ts	/^                    effectComplete(): void;$/;"	m
ejecta	pilas-engine/declaraciones/phaser.d.ts	/^            ejecta: boolean;$/;"	m
ejecutar	pilas-engine/animacion_de_propiedad.ts	/^  private ejecutar() {$/;"	m
ejecutar	pilas-engine/pilas.ts	/^  ejecutar() {$/;"	m
ejecutar_de_modo_seguro	pilas-engine/actores/-actor-base.ts	/^  ejecutar_de_modo_seguro(funcion) {$/;"	m
elapsed	pilas-engine/declaraciones/phaser.d.ts	/^            elapsed: number;$/;"	m
elapsed_time	pilas-engine/libs/spriter.ts	/^  elapsed_time: number = 0;$/;"	m
electron	pilas-engine/declaraciones/phaser.d.ts	/^            electron: boolean;$/;"	m
eliminar	pilas-engine/actores/-actor-base.ts	/^  eliminar() {$/;"	m
eliminar	pilas-engine/actores/-actor-texto-base.ts	/^  eliminar() {$/;"	m
eliminar	pilas-engine/animacion_de_propiedad.ts	/^  eliminar() {$/;"	m
eliminar	pilas-engine/animacion_nula.ts	/^  eliminar() {$/;"	m
eliminar	pilas-engine/habilidades/-habilidad.ts	/^  eliminar() {}$/;"	m
eliminar	pilas-engine/habilidades/arrastrable.ts	/^  eliminar() {$/;"	m
eliminar	pilas-engine/modos/actor_en_modo_edicion.ts	/^  eliminar() {$/;"	m
eliminar_actor_por_id	pilas-engine/modos/modo_deprecated.ts	/^  eliminar_actor_por_id(id) {$/;"	m
eliminar_actor_por_id	pilas-engine/modos/modo_editor.ts	/^  eliminar_actor_por_id(id) {$/;"	m
eliminar_animaciones_del_actor	pilas-engine/escenas/-escena-base.ts	/^  eliminar_animaciones_del_actor(actor) {$/;"	m
eliminar_comportamientos	pilas-engine/actores/-actor-base.ts	/^  eliminar_comportamientos() {$/;"	m
eliminar_figura	pilas-engine/modos/actor_en_modo_edicion.ts	/^  private eliminar_figura(figura: any) {$/;"	m
eliminar_inmediatamente	pilas-engine/animacion_de_propiedad.ts	/^  private eliminar_inmediatamente() {$/;"	m
eliminar_recortado	pilas-engine/actores/-actor-base.ts	/^  eliminar_recortado() {$/;"	m
eliminar_sensores	pilas-engine/modos/actor_en_modo_edicion.ts	/^  private eliminar_sensores() {$/;"	m
eliminar_si_sale_de_la_pantalla	pilas-engine/actores/laser.ts	/^  eliminar_si_sale_de_la_pantalla() {$/;"	m
eliminar_sprites	pilas-engine/huesos.ts	/^  eliminar_sprites() {$/;"	m
ellipse	pilas-engine/declaraciones/phaser.d.ts	/^            ellipse(x?: number, y?: number, width?: number, height?: number, fillColor?: number, fillAlpha?: number): Phaser.GameObjects.Ellipse;$/;"	m
ellipseTo	pilas-engine/declaraciones/phaser.d.ts	/^            ellipseTo(xRadius?: number, yRadius?: number, startAngle?: number, endAngle?: number, clockwise?: boolean, rotation?: number): this;$/;"	m
embedded	pilas-engine/declaraciones/phaser.d.ts	/^                embedded: boolean;$/;"	m
emit	pilas-engine/declaraciones/phaser.d.ts	/^            emit(event: string | symbol, ...args: any[]): boolean;$/;"	m
emitCallback	pilas-engine/declaraciones/phaser.d.ts	/^                emitCallback: Phaser.Types.GameObjects.Particles.ParticleEmitterCallback;$/;"	m
emitCallbackScope	pilas-engine/declaraciones/phaser.d.ts	/^                emitCallbackScope: any;$/;"	m
emitOnRepeat	pilas-engine/declaraciones/phaser.d.ts	/^                emitOnRepeat: boolean;$/;"	m
emitOnly	pilas-engine/declaraciones/phaser.d.ts	/^                emitOnly: boolean;$/;"	m
emitParticle	pilas-engine/declaraciones/phaser.d.ts	/^                emitParticle(count?: number, x?: number, y?: number): Phaser.GameObjects.Particles.Particle;$/;"	m
emitParticle	pilas-engine/declaraciones/phaser.d.ts	/^                emitParticle(count?: number, x?: number, y?: number): this;$/;"	m
emitParticleAt	pilas-engine/declaraciones/phaser.d.ts	/^                emitParticleAt(x?: number, y?: number, count?: number): Phaser.GameObjects.Particles.Particle;$/;"	m
emitParticleAt	pilas-engine/declaraciones/phaser.d.ts	/^                emitParticleAt(x?: number, y?: number, count?: number): this;$/;"	m
emitZone	pilas-engine/declaraciones/phaser.d.ts	/^                emitZone: Phaser.GameObjects.Particles.Zones.EdgeZone | Phaser.GameObjects.Particles.Zones.RandomZone;$/;"	m
emitir_evento	pilas-engine/eventos.ts	/^  emitir_evento(identificador, datos) {$/;"	m
emitir_evento	pilas-engine/eventos_de_escena.ts	/^  emitir_evento(identificador, datos) {$/;"	m
emitir_excepcion_al_editor	pilas-engine/mensajes.ts	/^  emitir_excepcion_al_editor(error: any, origen: any) {$/;"	m
emitir_mensaje_al_editor	pilas-engine/mensajes.ts	/^  emitir_mensaje_al_editor(nombre: string, datos = null) {$/;"	m
emitter	pilas-engine/declaraciones/phaser.d.ts	/^                emitter: Phaser.GameObjects.Particles.ParticleEmitter;$/;"	m
emitters	pilas-engine/declaraciones/phaser.d.ts	/^                emitters: Phaser.Structs.List<Phaser.GameObjects.Particles.ParticleEmitter>;$/;"	m
enable	pilas-engine/declaraciones/phaser.d.ts	/^                enable(object: Phaser.GameObjects.GameObject | Phaser.GameObjects.GameObject[] | Phaser.GameObjects.Group | Phaser.GameObjects.Group[], bodyType?: number): void;$/;"	m
enable	pilas-engine/declaraciones/phaser.d.ts	/^                enable: boolean;$/;"	m
enable	pilas-engine/declaraciones/phaser.d.ts	/^                function enable(context: CanvasRenderingContext2D | WebGLRenderingContext): CanvasRenderingContext2D | WebGLRenderingContext;$/;"	f
enable	pilas-engine/declaraciones/phaser.d.ts	/^            enable(): this;$/;"	m
enable	pilas-engine/declaraciones/phaser.d.ts	/^            enable(gameObject: Phaser.GameObjects.GameObject, hitArea?: Phaser.Types.Input.InputConfiguration | any, hitAreaCallback?: Phaser.Types.Input.HitAreaCallback, dropZone?: boolean): this;$/;"	m
enableAttractorPlugin	pilas-engine/declaraciones/phaser.d.ts	/^                enableAttractorPlugin(): this;$/;"	m
enableBody	pilas-engine/declaraciones/phaser.d.ts	/^                    enableBody(reset: boolean, x: number, y: number, enableGameObject: boolean, showGameObject: boolean): this;$/;"	m
enableBody	pilas-engine/declaraciones/phaser.d.ts	/^                enableBody(object: Phaser.GameObjects.GameObject, bodyType?: number): Phaser.GameObjects.GameObject;$/;"	m
enableBody	pilas-engine/declaraciones/phaser.d.ts	/^                enableBody(reset: boolean, x: number, y: number, enableGameObject: boolean, showGameObject: boolean): this;$/;"	m
enableCollisionEventsPlugin	pilas-engine/declaraciones/phaser.d.ts	/^                enableCollisionEventsPlugin(): this;$/;"	m
enableDebug	pilas-engine/declaraciones/phaser.d.ts	/^            enableDebug(gameObject: Phaser.GameObjects.GameObject, color?: number): this;$/;"	m
enableGlobalCapture	pilas-engine/declaraciones/phaser.d.ts	/^                enableGlobalCapture(): this;$/;"	m
enableSmoothing	pilas-engine/declaraciones/phaser.d.ts	/^                function enableSmoothing(): void;$/;"	f
enableUpdate	pilas-engine/declaraciones/phaser.d.ts	/^                enableUpdate(): void;$/;"	m
enableWrapPlugin	pilas-engine/declaraciones/phaser.d.ts	/^                enableWrapPlugin(): this;$/;"	m
enabled	pilas-engine/declaraciones/phaser.d.ts	/^                    enabled: boolean;$/;"	m
enabled	pilas-engine/declaraciones/phaser.d.ts	/^                enabled: boolean;$/;"	m
enabled	pilas-engine/declaraciones/phaser.d.ts	/^            enabled: boolean;$/;"	m
end	pilas-engine/declaraciones/phaser.d.ts	/^                    end: number;$/;"	m
end	pilas-engine/declaraciones/phaser.d.ts	/^                end: number;$/;"	m
end	pilas-engine/laser.ts	/^  end: any;$/;"	m
endAngle	pilas-engine/declaraciones/phaser.d.ts	/^                endAngle: number;$/;"	m
endAngle	pilas-engine/declaraciones/phaser.d.ts	/^            endAngle: number;$/;"	m
endCapture	pilas-engine/declaraciones/phaser.d.ts	/^                endCapture(): Phaser.Renderer.WebGL.RenderTarget;$/;"	m
endDraw	pilas-engine/declaraciones/phaser.d.ts	/^            endDraw(erase?: boolean): this;$/;"	m
endMask	pilas-engine/declaraciones/phaser.d.ts	/^                    endMask(mask: Phaser.GameObjects.GameObject): void;$/;"	m
engine	pilas-engine/declaraciones/phaser.d.ts	/^                engine: MatterJS.Engine;$/;"	m
entity	pilas-engine/libs/spriter.ts	/^  entity: EntityObject;$/;"	m
entity_index	pilas-engine/libs/spriter.ts	/^  entity_index: number = -1;$/;"	m
entity_key	pilas-engine/libs/spriter.ts	/^  entity_key: string = "";$/;"	m
entity_keys	pilas-engine/libs/spriter.ts	/^  entity_keys: string[] = [];$/;"	m
entity_map	pilas-engine/libs/spriter.ts	/^  entity_map: { [key: string]: Entity } = {};$/;"	m
entries	pilas-engine/declaraciones/phaser.d.ts	/^            entries: Phaser.Structs.Map<String, any>;$/;"	m
entries	pilas-engine/declaraciones/phaser.d.ts	/^            entries: T[];$/;"	m
entries	pilas-engine/declaraciones/phaser.d.ts	/^            entries: {[key: string]:  V};$/;"	m
entryCount	pilas-engine/declaraciones/phaser.d.ts	/^        entryCount: integer;$/;"	m
entryPoint	pilas-engine/declaraciones/phaser.d.ts	/^        entryPoint: string;$/;"	m
entryPointData	pilas-engine/declaraciones/phaser.d.ts	/^        entryPointData: any;$/;"	m
enum	pilas-engine/declaraciones/phaser.d.ts	/^                    enum: GLenum;$/;"	m
envelop	pilas-engine/declaraciones/phaser.d.ts	/^            envelop(width?: number, height?: number): this;$/;"	m
enviar_mensaje	pilas-engine/actores/-actor-base.ts	/^  enviar_mensaje(mensaje: string, datos: any = {}) {$/;"	m
enviar_mensaje	pilas-engine/escenas/-escena-base.ts	/^  enviar_mensaje(mensaje: string, datos: any = {}) {$/;"	m
enviar_mensaje_global	pilas-engine/actores/-actor-base.ts	/^  enviar_mensaje_global(mensaje: string, datos: any = {}) {$/;"	m
enviar_mensaje_global	pilas-engine/pilas.ts	/^  enviar_mensaje_global(mensaje: string, datos: any = {}) {$/;"	m
epsilon	pilas-engine/declaraciones/phaser.d.ts	/^                epsilon: number;$/;"	m
equal	pilas-engine/libs/spriter.ts	/^  public static equal(a: Vector, b: Vector, epsilon: number = 1e-6): boolean {$/;"	m
equal	pilas-engine/libs/spriter.ts	/^  static equal(a: Space, b: Space, epsilon: number = 1e-6) {$/;"	m
equals	pilas-engine/declaraciones/phaser.d.ts	/^            equals(red: number, green: number, blue: number): boolean;$/;"	m
equals	pilas-engine/declaraciones/phaser.d.ts	/^            equals(v: Phaser.Math.Vector3): boolean;$/;"	m
equals	pilas-engine/declaraciones/phaser.d.ts	/^            equals(v: Phaser.Math.Vector4): boolean;$/;"	m
equals	pilas-engine/declaraciones/phaser.d.ts	/^            equals(v: Phaser.Types.Math.Vector2Like): boolean;$/;"	m
erase	pilas-engine/declaraciones/phaser.d.ts	/^            erase(entries: any, x?: number, y?: number): this;$/;"	m
error	pilas-engine/mensajes.ts	/^      error: error,$/;"	m
es_animacion	pilas-engine/utilidades.ts	/^  es_animacion(valor: any) {$/;"	m
es_cambio_de_escena	pilas-engine/mensajes.ts	/^      es_cambio_de_escena: false$/;"	m
es_cambio_de_escena	pilas-engine/modos/modo_cargador.ts	/^        es_cambio_de_escena: false,$/;"	m
es_cambio_de_escena	pilas-engine/modos/modo_ejecucion.ts	/^      es_cambio_de_escena: true$/;"	m
es_firefox	pilas-engine/utilidades.ts	/^  es_firefox() {$/;"	m
es_modo_ejecucion	pilas-engine/modos/modo.ts	/^  es_modo_ejecucion: boolean;$/;"	m
es_multiplo	pilas-engine/pilas.ts	/^  es_multiplo(a: number, b: number) {$/;"	m
es_texto	pilas-engine/actores/-actor-base.ts	/^      es_texto: this._es_texto,$/;"	m
es_texto	pilas-engine/actores/-actor-base.ts	/^    es_texto: false,$/;"	m
es_texto	pilas-engine/actores/-actor-texto-base.ts	/^    es_texto: true,$/;"	m
es_texto	pilas-engine/actores/boton.ts	/^    es_texto: true,$/;"	m
es_texto	pilas-engine/actores/boton_activable.ts	/^    es_texto: true,$/;"	m
es_texto	pilas-engine/actores/pantalla_completa.ts	/^    es_texto: false,$/;"	m
es_texto	pilas-engine/actores/puntaje.ts	/^    es_texto: true,$/;"	m
es_texto	pilas-engine/actores/reiniciar_escena.ts	/^    es_texto: true,$/;"	m
es_texto	pilas-engine/actores/texto.ts	/^    es_texto: true,$/;"	m
escala	pilas-engine/actores/-actor-base.ts	/^  get escala() {$/;"	m
escala	pilas-engine/actores/-actor-base.ts	/^  set escala(escala) {$/;"	m
escala	pilas-engine/animacion_de_propiedad.ts	/^      escala: "+=" + escala,$/;"	m
escala	pilas-engine/animacion_de_propiedad.ts	/^      escala: escala,$/;"	m
escala	pilas-engine/camara.ts	/^  get escala() {$/;"	m
escala	pilas-engine/camara.ts	/^  set escala(x: number) {$/;"	m
escala_x	pilas-engine/actores/-actor-base.ts	/^      escala_x: this.escala_x,$/;"	m
escala_x	pilas-engine/actores/-actor-base.ts	/^    escala_x: 1,$/;"	m
escala_x	pilas-engine/actores/-actor-base.ts	/^  get escala_x() {$/;"	m
escala_x	pilas-engine/actores/-actor-base.ts	/^  set escala_x(s) {$/;"	m
escala_x	pilas-engine/animacion_de_propiedad.ts	/^      escala_x: "+=" + escala,$/;"	m
escala_x	pilas-engine/animacion_de_propiedad.ts	/^      escala_x: escala,$/;"	m
escala_y	pilas-engine/actores/-actor-base.ts	/^      escala_y: this.escala_y,$/;"	m
escala_y	pilas-engine/actores/-actor-base.ts	/^    escala_y: 1,$/;"	m
escala_y	pilas-engine/actores/-actor-base.ts	/^  get escala_y() {$/;"	m
escala_y	pilas-engine/actores/-actor-base.ts	/^  set escala_y(s) {$/;"	m
escala_y	pilas-engine/animacion_de_propiedad.ts	/^      escala_y: "+=" + escala,$/;"	m
escala_y	pilas-engine/animacion_de_propiedad.ts	/^      escala_y: escala,$/;"	m
escalar	pilas-engine/animacion_de_propiedad.ts	/^  escalar(escala: number, duraci√≥n: number = 0) {$/;"	m
escalar	pilas-engine/animacion_nula.ts	/^  escalar() {$/;"	m
escalar_hasta	pilas-engine/animacion_de_propiedad.ts	/^  escalar_hasta(escala: number, duraci√≥n: number = 0) {$/;"	m
escalar_hasta	pilas-engine/animacion_nula.ts	/^  escalar_hasta() {$/;"	m
escalar_x	pilas-engine/animacion_de_propiedad.ts	/^  escalar_x(escala: number, duraci√≥n: number = 0) {$/;"	m
escalar_x	pilas-engine/animacion_nula.ts	/^  escalar_x() {$/;"	m
escalar_x_hasta	pilas-engine/animacion_de_propiedad.ts	/^  escalar_x_hasta(escala: number, duraci√≥n: number = 0) {$/;"	m
escalar_x_hasta	pilas-engine/animacion_nula.ts	/^  escalar_x_hasta() {$/;"	m
escalar_y	pilas-engine/animacion_de_propiedad.ts	/^  escalar_y(escala: number, duraci√≥n: number = 0) {$/;"	m
escalar_y	pilas-engine/animacion_nula.ts	/^  escalar_y() {$/;"	m
escalar_y_hasta	pilas-engine/animacion_de_propiedad.ts	/^  escalar_y_hasta(escala: number, duraci√≥n: number = 0) {$/;"	m
escalar_y_hasta	pilas-engine/animacion_nula.ts	/^  escalar_y_hasta() {$/;"	m
escena	pilas-engine/historia.ts	/^      escena: escena_actual.serializar(),$/;"	m
escena	pilas-engine/mensajes.ts	/^      escena: datos.escena,$/;"	m
escena	pilas-engine/pilas.ts	/^  get escena(): EscenaBase {$/;"	m
escena	pilas-engine/pilas.ts	/^  set escena(_: EscenaBase) {$/;"	m
escena_actual	pilas-engine/escenas.ts	/^  escena_actual: EscenaBase = null;$/;"	m
escena_actual	pilas-engine/pilas.ts	/^  escena_actual() {$/;"	m
escena_inicial	pilas-engine/modos/modo_cargador.ts	/^          escena_inicial: 3,$/;"	m
escenas	pilas-engine/modos/modo_cargador.ts	/^            escenas: [$/;"	m
escenas	pilas-engine/modos/modo_cargador.ts	/^          escenas: [$/;"	m
escenas	pilas-engine/pilas.ts	/^  escenas: Escenas;$/;"	m
espacio	pilas-engine/control.ts	/^      espacio: false$/;"	m
espacio	pilas-engine/control.ts	/^  get espacio(): boolean {$/;"	m
espejado	pilas-engine/actores/-actor-base.ts	/^      espejado: this.espejado,$/;"	m
espejado	pilas-engine/actores/-actor-base.ts	/^    espejado: false,$/;"	m
espejado	pilas-engine/actores/-actor-base.ts	/^  get espejado() {$/;"	m
espejado	pilas-engine/actores/-actor-base.ts	/^  set espejado(valor: boolean) {$/;"	m
espejado_vertical	pilas-engine/actores/-actor-base.ts	/^      espejado_vertical: this.espejado_vertical,$/;"	m
espejado_vertical	pilas-engine/actores/-actor-base.ts	/^    espejado_vertical: false,$/;"	m
espejado_vertical	pilas-engine/actores/-actor-base.ts	/^  get espejado_vertical() {$/;"	m
espejado_vertical	pilas-engine/actores/-actor-base.ts	/^  set espejado_vertical(valor: boolean) {$/;"	m
esperar	pilas-engine/animacion_de_propiedad.ts	/^  esperar(duraci√≥n: number) {$/;"	m
esperar	pilas-engine/animacion_nula.ts	/^  esperar() {$/;"	m
esta_reproduciendo_musica	pilas-engine/pilas.ts	/^  esta_reproduciendo_musica() {$/;"	m
esta_vivo	pilas-engine/actores/-actor-base.ts	/^  esta_vivo() {$/;"	m
estado	pilas-engine/actores/-actor-base.ts	/^  get estado() {$/;"	m
estado	pilas-engine/actores/-actor-base.ts	/^  set estado(estado) {$/;"	m
estado	pilas-engine/automata.ts	/^  get estado() {$/;"	m
estado	pilas-engine/automata.ts	/^  set estado(nombre: string) {$/;"	m
estatico	pilas-engine/actores/-actor-base.ts	/^  get estatico() {$/;"	m
estatico	pilas-engine/actores/-actor-base.ts	/^  set estatico(estatico: boolean) {$/;"	m
etiqueta	pilas-engine/actores/-actor-base.ts	/^    etiqueta: "actor",$/;"	m
etiqueta	pilas-engine/actores/-actor-base.ts	/^  get etiqueta() {$/;"	m
etiqueta	pilas-engine/actores/-actor-base.ts	/^  set etiqueta(etiqueta) {$/;"	m
etiqueta	pilas-engine/actores/caja.ts	/^    etiqueta: "caja",$/;"	m
etiqueta	pilas-engine/actores/chispa.ts	/^    etiqueta: "chispa"$/;"	m
etiqueta	pilas-engine/actores/deslizador.ts	/^    etiqueta: "deslizador",$/;"	m
etiqueta	pilas-engine/actores/explosion.ts	/^    etiqueta: "explosion"$/;"	m
etiqueta	pilas-engine/actores/golpe.ts	/^    etiqueta: "golpe"$/;"	m
etiqueta	pilas-engine/actores/humo.ts	/^    etiqueta: "humo"$/;"	m
etiqueta	pilas-engine/actores/laser.ts	/^    etiqueta: "laser",$/;"	m
etiqueta	pilas-engine/actores/moneda.ts	/^    etiqueta: "moneda",$/;"	m
etiqueta	pilas-engine/actores/plataforma.ts	/^    etiqueta: "plataforma",$/;"	m
eval	pilas-engine/modos/modo_ejecucion.ts	/^        eval(items_bloques[0].bloques.codigo_de_bloques);$/;"	m
eval	pilas-engine/modos/modo_ejecucion.ts	/^        eval(items_bloques[0].codigo_de_bloques);$/;"	m
evaluate	pilas-engine/libs/spriter.ts	/^  evaluate(t: number): number {$/;"	m
event	pilas-engine/declaraciones/phaser.d.ts	/^            event: TouchEvent | MouseEvent | WheelEvent;$/;"	m
eventNames	pilas-engine/declaraciones/phaser.d.ts	/^            eventNames(): (string|symbol)[];$/;"	m
event_array	pilas-engine/libs/spriter.ts	/^  event_array: string[] = [];$/;"	m
eventline_array	pilas-engine/libs/spriter.ts	/^  eventline_array: Eventline[];$/;"	m
eventos	pilas-engine/escenas/-escena-base.ts	/^  eventos: EventosDeEscena;$/;"	m
eventos	pilas-engine/pilas.ts	/^  eventos: Eventos;$/;"	m
events	pilas-engine/declaraciones/phaser.d.ts	/^                events: Phaser.Events.EventEmitter;$/;"	m
events	pilas-engine/declaraciones/phaser.d.ts	/^            events: Phaser.Events.EventEmitter;$/;"	m
events	pilas-engine/declaraciones/phaser.d.ts	/^            protected events: Phaser.Events.EventEmitter;$/;"	m
events	pilas-engine/declaraciones/phaser.d.ts	/^        events: Phaser.Events.EventEmitter;$/;"	m
exclusive	pilas-engine/declaraciones/phaser.d.ts	/^            exclusive: boolean;$/;"	m
existe_actor_con_etiqueta_en	pilas-engine/pilas.ts	/^  existe_actor_con_etiqueta_en(etiqueta: string, x: number, y: number) {$/;"	m
existe_actor_en	pilas-engine/pilas.ts	/^  existe_actor_en(x: number, y: number) {$/;"	m
existe_actor_llamado_en_el_proyecto	pilas-engine/modos/modo_ejecucion.ts	/^  existe_actor_llamado_en_el_proyecto(nombre: string) {$/;"	m
existe_animacion	pilas-engine/animaciones.ts	/^  existe_animacion(nombre: string) {$/;"	m
existe_sonido	pilas-engine/sonidos.ts	/^  existe_sonido(nombre: string) {$/;"	m
existe_un_actor_llamado	pilas-engine/pilas.ts	/^  existe_un_actor_llamado(nombre: string) {$/;"	m
existe_un_actor_llamado_en_el_proyecto	pilas-engine/pilas.ts	/^  existe_un_actor_llamado_en_el_proyecto(nombre: string) {$/;"	m
existing	pilas-engine/declaraciones/phaser.d.ts	/^            existing(tween: Phaser.Tweens.Tween): Phaser.Tweens.TweenManager;$/;"	m
exists	pilas-engine/declaraciones/phaser.d.ts	/^            exists(child: Phaser.GameObjects.GameObject): boolean;$/;"	m
exists	pilas-engine/declaraciones/phaser.d.ts	/^            exists(child: T): boolean;$/;"	m
exists	pilas-engine/declaraciones/phaser.d.ts	/^            exists(key: string): boolean;$/;"	m
expandParent	pilas-engine/declaraciones/phaser.d.ts	/^            readonly expandParent: boolean;$/;"	m
explode	pilas-engine/declaraciones/phaser.d.ts	/^                explode(count: number, x: number, y: number): Phaser.GameObjects.Particles.Particle;$/;"	m
explosion	pilas-engine/actores.ts	/^  explosion() {$/;"	m
explosion	pilas-engine/actores/explosion.ts	/^class explosion extends Actor {$/;"	c
explotar	pilas-engine/animacion_de_propiedad.ts	/^  explotar() {$/;"	m
explotar	pilas-engine/animacion_nula.ts	/^  explotar() {$/;"	m
extend	pilas-engine/utilidades.ts	/^    function extend(obj, src) {$/;"	f
extendStatics	pilas-engine/modos/modo_cargador.ts	/^              extendStatics(d, b);$/;"	m
extensions	pilas-engine/declaraciones/phaser.d.ts	/^                extensions: object;$/;"	m
extern	pilas-engine/declaraciones/phaser.d.ts	/^            extern(): Phaser.GameObjects.Extern;$/;"	m
extract	pilas-engine/libs/spriter.ts	/^  static extract(ab, a, out) {$/;"	m
f	pilas-engine/declaraciones/phaser.d.ts	/^                f: number;$/;"	m
faceBottom	pilas-engine/declaraciones/phaser.d.ts	/^            faceBottom: boolean;$/;"	m
faceLeft	pilas-engine/declaraciones/phaser.d.ts	/^            faceLeft: boolean;$/;"	m
faceRight	pilas-engine/declaraciones/phaser.d.ts	/^            faceRight: boolean;$/;"	m
faceTop	pilas-engine/declaraciones/phaser.d.ts	/^            faceTop: boolean;$/;"	m
facebook	pilas-engine/declaraciones/phaser.d.ts	/^            facebook: Phaser.FacebookInstantGamesPlugin;$/;"	m
facebook	pilas-engine/declaraciones/phaser.d.ts	/^        facebook: Phaser.FacebookInstantGamesPlugin;$/;"	m
faces	pilas-engine/declaraciones/phaser.d.ts	/^                    faces: Phaser.Geom.Mesh.Face[];$/;"	m
faces	pilas-engine/declaraciones/phaser.d.ts	/^                    faces: Phaser.Types.Geom.Mesh.OBJFace[];$/;"	m
faces	pilas-engine/declaraciones/phaser.d.ts	/^            faces: Phaser.Geom.Mesh.Face[];$/;"	m
facing	pilas-engine/declaraciones/phaser.d.ts	/^                facing: number;$/;"	m
fade	pilas-engine/declaraciones/phaser.d.ts	/^                fade(duration?: number, red?: number, green?: number, blue?: number, force?: boolean, callback?: Function, context?: any): this;$/;"	m
fadeEffect	pilas-engine/declaraciones/phaser.d.ts	/^                fadeEffect: Phaser.Cameras.Scene2D.Effects.Fade;$/;"	m
fadeFrom	pilas-engine/declaraciones/phaser.d.ts	/^                fadeFrom(duration?: number, red?: number, green?: number, blue?: number, force?: boolean, callback?: Function, context?: any): this;$/;"	m
fadeIn	pilas-engine/declaraciones/phaser.d.ts	/^                fadeIn(duration?: number, red?: number, green?: number, blue?: number, callback?: Function, context?: any): this;$/;"	m
fadeOut	pilas-engine/declaraciones/phaser.d.ts	/^                fadeOut(duration?: number, red?: number, green?: number, blue?: number, callback?: Function, context?: any): this;$/;"	m
failIfMajorPerformanceCaveat	pilas-engine/declaraciones/phaser.d.ts	/^            readonly failIfMajorPerformanceCaveat: boolean;$/;"	m
failed	pilas-engine/declaraciones/phaser.d.ts	/^            failed: number;$/;"	m
fallar_si_no_tiene_figura	pilas-engine/actores/-actor-base.ts	/^  fallar_si_no_tiene_figura() {$/;"	m
fboStack	pilas-engine/declaraciones/phaser.d.ts	/^                fboStack: WebGLFramebuffer[];$/;"	m
features	pilas-engine/declaraciones/phaser.d.ts	/^        features: Phaser.Device.Features;$/;"	m
figura	pilas-engine/actores/-actor-base.ts	/^      figura: this.figura,$/;"	m
figura	pilas-engine/actores/-actor-base.ts	/^    figura: ""$/;"	m
figura	pilas-engine/actores/-actor-base.ts	/^    figura: "",$/;"	m
figura	pilas-engine/actores/caja.ts	/^    figura: "rectangulo",$/;"	m
figura	pilas-engine/actores/chispa.ts	/^    figura: "",$/;"	m
figura	pilas-engine/actores/conejo.ts	/^    figura: "rectangulo",$/;"	m
figura	pilas-engine/actores/deslizador.ts	/^    figura: ""$/;"	m
figura	pilas-engine/actores/explosion.ts	/^    figura: "",$/;"	m
figura	pilas-engine/actores/gallina.ts	/^    figura: "circulo",$/;"	m
figura	pilas-engine/actores/golpe.ts	/^    figura: "",$/;"	m
figura	pilas-engine/actores/humo.ts	/^    figura: "",$/;"	m
figura	pilas-engine/actores/laser.ts	/^    figura: "rectangulo",$/;"	m
figura	pilas-engine/actores/moneda.ts	/^    figura: "circulo",$/;"	m
figura	pilas-engine/actores/pared.ts	/^    figura: "rectangulo",$/;"	m
figura	pilas-engine/actores/pelota.ts	/^    figura: "circulo",$/;"	m
figura	pilas-engine/actores/plataforma.ts	/^    figura: "rectangulo",$/;"	m
figura	pilas-engine/actores/suelo.ts	/^    figura: "rectangulo",$/;"	m
figura	pilas-engine/actores/techo.ts	/^    figura: "rectangulo",$/;"	m
figura_alto	pilas-engine/actores/-actor-base.ts	/^      figura_alto: this.figura_alto,$/;"	m
figura_alto	pilas-engine/actores/-actor-base.ts	/^    figura_alto: 100,$/;"	m
figura_alto	pilas-engine/actores/-actor-base.ts	/^  get figura_alto() {$/;"	m
figura_alto	pilas-engine/actores/-actor-base.ts	/^  set figura_alto(valor: number) {$/;"	m
figura_alto	pilas-engine/actores/caja.ts	/^    figura_alto: 45,$/;"	m
figura_alto	pilas-engine/actores/conejo.ts	/^    figura_alto: 100,$/;"	m
figura_alto	pilas-engine/actores/laser.ts	/^    figura_alto: 12,$/;"	m
figura_alto	pilas-engine/actores/pared.ts	/^    figura_alto: 600,$/;"	m
figura_alto	pilas-engine/actores/plataforma.ts	/^    figura_alto: 40,$/;"	m
figura_alto	pilas-engine/actores/suelo.ts	/^    figura_alto: 25,$/;"	m
figura_alto	pilas-engine/actores/techo.ts	/^    figura_alto: 25,$/;"	m
figura_ancho	pilas-engine/actores/-actor-base.ts	/^      figura_ancho: this.figura_ancho,$/;"	m
figura_ancho	pilas-engine/actores/-actor-base.ts	/^    figura_ancho: 100,$/;"	m
figura_ancho	pilas-engine/actores/-actor-base.ts	/^  get figura_ancho() {$/;"	m
figura_ancho	pilas-engine/actores/-actor-base.ts	/^  set figura_ancho(valor: number) {$/;"	m
figura_ancho	pilas-engine/actores/caja.ts	/^    figura_ancho: 45,$/;"	m
figura_ancho	pilas-engine/actores/conejo.ts	/^    figura_ancho: 50,$/;"	m
figura_ancho	pilas-engine/actores/laser.ts	/^    figura_ancho: 38,$/;"	m
figura_ancho	pilas-engine/actores/pared.ts	/^    figura_ancho: 20,$/;"	m
figura_ancho	pilas-engine/actores/plataforma.ts	/^    figura_ancho: 250,$/;"	m
figura_ancho	pilas-engine/actores/suelo.ts	/^    figura_ancho: 600,$/;"	m
figura_ancho	pilas-engine/actores/techo.ts	/^    figura_ancho: 600,$/;"	m
figura_dinamica	pilas-engine/actores/-actor-base.ts	/^      figura_dinamica: this.dinamico,$/;"	m
figura_dinamica	pilas-engine/actores/-actor-base.ts	/^    figura_dinamica: true,$/;"	m
figura_dinamica	pilas-engine/actores/conejo.ts	/^    figura_dinamica: true,$/;"	m
figura_dinamica	pilas-engine/actores/gallina.ts	/^    figura_dinamica: true,$/;"	m
figura_dinamica	pilas-engine/actores/laser.ts	/^    figura_dinamica: false,$/;"	m
figura_dinamica	pilas-engine/actores/moneda.ts	/^    figura_dinamica: false,$/;"	m
figura_dinamica	pilas-engine/actores/pared.ts	/^    figura_dinamica: false,$/;"	m
figura_dinamica	pilas-engine/actores/plataforma.ts	/^    figura_dinamica: false,$/;"	m
figura_dinamica	pilas-engine/actores/suelo.ts	/^    figura_dinamica: false$/;"	m
figura_dinamica	pilas-engine/actores/techo.ts	/^    figura_dinamica: false$/;"	m
figura_radio	pilas-engine/actores/-actor-base.ts	/^      figura_radio: this.figura_radio,$/;"	m
figura_radio	pilas-engine/actores/-actor-base.ts	/^    figura_radio: 40,$/;"	m
figura_radio	pilas-engine/actores/-actor-base.ts	/^  get figura_radio() {$/;"	m
figura_radio	pilas-engine/actores/-actor-base.ts	/^  set figura_radio(valor: number) {$/;"	m
figura_radio	pilas-engine/actores/conejo.ts	/^    figura_radio: 50,$/;"	m
figura_radio	pilas-engine/actores/gallina.ts	/^    figura_radio: 30,$/;"	m
figura_radio	pilas-engine/actores/moneda.ts	/^    figura_radio: 10,$/;"	m
figura_radio	pilas-engine/actores/pelota.ts	/^    figura_radio: 25$/;"	m
figura_rebote	pilas-engine/actores/-actor-base.ts	/^    figura_rebote: 1,$/;"	m
figura_rebote	pilas-engine/actores/caja.ts	/^    figura_rebote: 0.9$/;"	m
figura_rebote	pilas-engine/actores/conejo.ts	/^    figura_rebote: 0,$/;"	m
figura_rebote	pilas-engine/actores/gallina.ts	/^    figura_rebote: 0$/;"	m
figura_rebote	pilas-engine/actores/laser.ts	/^    figura_rebote: 0$/;"	m
figura_rebote	pilas-engine/actores/pared.ts	/^    figura_rebote: 0$/;"	m
figura_rebote	pilas-engine/actores/plataforma.ts	/^    figura_rebote: 0$/;"	m
figura_rebote	pilas-engine/actores/suelo.ts	/^    figura_rebote: 0,$/;"	m
figura_sensor	pilas-engine/actores/-actor-base.ts	/^      figura_sensor: this.sensor,$/;"	m
figura_sensor	pilas-engine/actores/-actor-base.ts	/^    figura_sensor: false,$/;"	m
figura_sensor	pilas-engine/actores/moneda.ts	/^    figura_sensor: true$/;"	m
figura_sin_rotacion	pilas-engine/actores/-actor-base.ts	/^    figura_sin_rotacion: false,$/;"	m
figura_sin_rotacion	pilas-engine/actores/conejo.ts	/^    figura_sin_rotacion: true,$/;"	m
figura_sin_rotacion	pilas-engine/actores/gallina.ts	/^    figura_sin_rotacion: true,$/;"	m
fijo	pilas-engine/actores/-actor-base.ts	/^      fijo: this.fijo,$/;"	m
fijo	pilas-engine/actores/-actor-base.ts	/^  get fijo() {$/;"	m
fijo	pilas-engine/actores/-actor-base.ts	/^  set fijo(valor: boolean) {$/;"	m
fijo	pilas-engine/actores/-pizarra-base.ts	/^  get fijo() {$/;"	m
fijo	pilas-engine/actores/-pizarra-base.ts	/^  set fijo(valor: boolean) {$/;"	m
file	pilas-engine/declaraciones/phaser.d.ts	/^            file: boolean;$/;"	m
fileProcessComplete	pilas-engine/declaraciones/phaser.d.ts	/^            fileProcessComplete(file: Phaser.Loader.File): void;$/;"	m
fileSystem	pilas-engine/declaraciones/phaser.d.ts	/^            fileSystem: boolean;$/;"	m
file_array	pilas-engine/libs/spriter.ts	/^  file_array: File[] = [];$/;"	m
file_index	pilas-engine/libs/spriter.ts	/^  file_index: number = -1;$/;"	m
files	pilas-engine/declaraciones/phaser.d.ts	/^                    files: Phaser.Types.Loader.FileConfig[];$/;"	m
files	pilas-engine/declaraciones/phaser.d.ts	/^            files: Phaser.Loader.File[];$/;"	m
fill	pilas-engine/declaraciones/phaser.d.ts	/^            fill(): this;$/;"	m
fill	pilas-engine/declaraciones/phaser.d.ts	/^            fill(index: number, tileX?: number, tileY?: number, width?: number, height?: number, recalculateFaces?: boolean): this;$/;"	m
fill	pilas-engine/declaraciones/phaser.d.ts	/^            fill(index: number, tileX?: number, tileY?: number, width?: number, height?: number, recalculateFaces?: boolean, layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Tilemaps.Tilemap;$/;"	m
fill	pilas-engine/declaraciones/phaser.d.ts	/^            fill(rgb: number, alpha?: number, x?: number, y?: number, width?: number, height?: number): this;$/;"	m
fillAlpha	pilas-engine/declaraciones/phaser.d.ts	/^            fillAlpha: number;$/;"	m
fillCanvas	pilas-engine/declaraciones/phaser.d.ts	/^            fillCanvas: HTMLCanvasElement;$/;"	m
fillCircle	pilas-engine/declaraciones/phaser.d.ts	/^            fillCircle(x: number, y: number, radius: number): this;$/;"	m
fillCircleShape	pilas-engine/declaraciones/phaser.d.ts	/^            fillCircleShape(circle: Phaser.Geom.Circle): this;$/;"	m
fillColor	pilas-engine/declaraciones/phaser.d.ts	/^            fillColor: number;$/;"	m
fillContext	pilas-engine/declaraciones/phaser.d.ts	/^            fillContext: CanvasRenderingContext2D;$/;"	m
fillEllipse	pilas-engine/declaraciones/phaser.d.ts	/^            fillEllipse(x: number, y: number, width: number, height: number, smoothness?: number): this;$/;"	m
fillEllipseShape	pilas-engine/declaraciones/phaser.d.ts	/^            fillEllipseShape(ellipse: Phaser.Geom.Ellipse, smoothness?: number): this;$/;"	m
fillGradientStyle	pilas-engine/declaraciones/phaser.d.ts	/^            fillGradientStyle(topLeft: number, topRight: number, bottomLeft: number, bottomRight: number, alphaTopLeft?: number, alphaTopRight?: number, alphaBottomLeft?: number, alphaBottomRight?: number): this;$/;"	m
fillLeft	pilas-engine/declaraciones/phaser.d.ts	/^            fillLeft: number;$/;"	m
fillPath	pilas-engine/declaraciones/phaser.d.ts	/^            fillPath(): this;$/;"	m
fillPattern	pilas-engine/declaraciones/phaser.d.ts	/^            fillPattern: WebGLTexture | CanvasPattern;$/;"	m
fillPoint	pilas-engine/declaraciones/phaser.d.ts	/^            fillPoint(x: number, y: number, size?: number): this;$/;"	m
fillPointShape	pilas-engine/declaraciones/phaser.d.ts	/^            fillPointShape(point: Phaser.Geom.Point | Phaser.Math.Vector2 | object, size?: number): this;$/;"	m
fillPoints	pilas-engine/declaraciones/phaser.d.ts	/^            fillPoints(points: any[] | Phaser.Geom.Point[], closeShape?: boolean, closePath?: boolean, endIndex?: number): this;$/;"	m
fillRect	pilas-engine/declaraciones/phaser.d.ts	/^            fillRect(x: number, y: number, width: number, height: number): this;$/;"	m
fillRectShape	pilas-engine/declaraciones/phaser.d.ts	/^            fillRectShape(rect: Phaser.Geom.Rectangle): this;$/;"	m
fillRight	pilas-engine/declaraciones/phaser.d.ts	/^            fillRight: number;$/;"	m
fillRoundedRect	pilas-engine/declaraciones/phaser.d.ts	/^            fillRoundedRect(x: number, y: number, width: number, height: number, radius?: Phaser.Types.GameObjects.Graphics.RoundedRectRadius | number): this;$/;"	m
fillStyle	pilas-engine/declaraciones/phaser.d.ts	/^            fillStyle(color: number, alpha?: number): this;$/;"	m
fillTop	pilas-engine/declaraciones/phaser.d.ts	/^            fillTop: number;$/;"	m
fillTriangle	pilas-engine/declaraciones/phaser.d.ts	/^            fillTriangle(x0: number, y0: number, x1: number, y1: number, x2: number, y2: number): this;$/;"	m
fillTriangleShape	pilas-engine/declaraciones/phaser.d.ts	/^            fillTriangleShape(triangle: Phaser.Geom.Triangle): this;$/;"	m
filterObjects	pilas-engine/declaraciones/phaser.d.ts	/^            filterObjects(objectLayer: Phaser.Tilemaps.ObjectLayer | string, callback: TilemapFilterCallback, context?: object): Phaser.Types.Tilemaps.TiledObject[];$/;"	m
filterTiles	pilas-engine/declaraciones/phaser.d.ts	/^            filterTiles(callback: Function, context?: object, tileX?: number, tileY?: number, width?: number, height?: number, filteringOptions?: Phaser.Types.Tilemaps.FilteringOptions): Phaser.Tilemaps.Tile[];$/;"	m
filterTiles	pilas-engine/declaraciones/phaser.d.ts	/^            filterTiles(callback: Function, context?: object, tileX?: number, tileY?: number, width?: number, height?: number, filteringOptions?: Phaser.Types.Tilemaps.FilteringOptions, layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Tilemaps.Tile[];$/;"	m
finalType	pilas-engine/declaraciones/phaser.d.ts	/^                finalType: boolean;$/;"	m
find	pilas-engine/libs/spriter.ts	/^  static find(array: Keyframe[], time: number): number {$/;"	m
findByIndex	pilas-engine/declaraciones/phaser.d.ts	/^            findByIndex(index: number, skip?: number, reverse?: boolean): Phaser.Tilemaps.Tile;$/;"	m
findByIndex	pilas-engine/declaraciones/phaser.d.ts	/^            findByIndex(index: number, skip?: number, reverse?: boolean, layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Tilemaps.Tile;$/;"	m
findObject	pilas-engine/declaraciones/phaser.d.ts	/^            findObject(objectLayer: Phaser.Tilemaps.ObjectLayer | string, callback: TilemapFindCallback, context?: object): Phaser.Types.Tilemaps.TiledObject;$/;"	m
findTile	pilas-engine/declaraciones/phaser.d.ts	/^            findTile(callback: FindTileCallback, context?: object, tileX?: number, tileY?: number, width?: number, height?: number, filteringOptions?: Phaser.Types.Tilemaps.FilteringOptions): Phaser.Tilemaps.Tile;$/;"	m
findTile	pilas-engine/declaraciones/phaser.d.ts	/^            findTile(callback: FindTileCallback, context?: object, tileX?: number, tileY?: number, width?: number, height?: number, filteringOptions?: Phaser.Types.Tilemaps.FilteringOptions, layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Tilemaps.Tile;$/;"	m
fire	pilas-engine/declaraciones/phaser.d.ts	/^                fire(x: number, y: number): void;$/;"	m
firefox	pilas-engine/declaraciones/phaser.d.ts	/^            firefox: boolean;$/;"	m
firefoxVersion	pilas-engine/declaraciones/phaser.d.ts	/^            firefoxVersion: number;$/;"	m
first	pilas-engine/declaraciones/phaser.d.ts	/^                function first(canvasType?: number): HTMLCanvasElement;$/;"	f
first	pilas-engine/declaraciones/phaser.d.ts	/^            readonly first: Phaser.GameObjects.GameObject;$/;"	m
first	pilas-engine/declaraciones/phaser.d.ts	/^            readonly first: T;$/;"	m
firstFrame	pilas-engine/declaraciones/phaser.d.ts	/^            firstFrame: string;$/;"	m
firstgid	pilas-engine/declaraciones/phaser.d.ts	/^            firstgid: number;$/;"	m
fisica	pilas-engine/pilas.ts	/^  fisica: Fisica;$/;"	m
fisica_en_modo_ejecucion	pilas-engine/depurador.ts	/^  fisica_en_modo_ejecucion: boolean;$/;"	m
fitTo	pilas-engine/declaraciones/phaser.d.ts	/^            fitTo(width?: number, height?: number): this;$/;"	m
fixedHeight	pilas-engine/declaraciones/phaser.d.ts	/^            fixedHeight: number;$/;"	m
fixedStep	pilas-engine/declaraciones/phaser.d.ts	/^                fixedStep: boolean;$/;"	m
fixedWidth	pilas-engine/declaraciones/phaser.d.ts	/^            fixedWidth: number;$/;"	m
flagForRemoval	pilas-engine/declaraciones/phaser.d.ts	/^            flagForRemoval(file: Phaser.Loader.File): void;$/;"	m
flash	pilas-engine/declaraciones/phaser.d.ts	/^                flash(duration?: number, red?: number, green?: number, blue?: number, force?: boolean, callback?: Function, context?: any): this;$/;"	m
flashEffect	pilas-engine/declaraciones/phaser.d.ts	/^                flashEffect: Phaser.Cameras.Scene2D.Effects.Flash;$/;"	m
flipX	pilas-engine/declaraciones/phaser.d.ts	/^                    flipX(): void;$/;"	m
flipX	pilas-engine/declaraciones/phaser.d.ts	/^                flipX: boolean;$/;"	m
flipX	pilas-engine/declaraciones/phaser.d.ts	/^            flipX: boolean;$/;"	m
flipY	pilas-engine/declaraciones/phaser.d.ts	/^                    flipY(): void;$/;"	m
flipY	pilas-engine/declaraciones/phaser.d.ts	/^                flipY: boolean;$/;"	m
flipY	pilas-engine/declaraciones/phaser.d.ts	/^            flipY: boolean;$/;"	m
flipped	pilas-engine/declaraciones/phaser.d.ts	/^                flipped: boolean;$/;"	m
flippedAntiDiagonal	pilas-engine/declaraciones/phaser.d.ts	/^                flippedAntiDiagonal: boolean;$/;"	m
flippedHorizontal	pilas-engine/declaraciones/phaser.d.ts	/^                flippedHorizontal: boolean;$/;"	m
flippedVertical	pilas-engine/declaraciones/phaser.d.ts	/^                flippedVertical: boolean;$/;"	m
flow	pilas-engine/declaraciones/phaser.d.ts	/^                flow(frequency: number, count?: Phaser.Types.GameObjects.Particles.EmitterOpOnEmitType): this;$/;"	m
flush	pilas-engine/declaraciones/phaser.d.ts	/^                flush(): void;$/;"	m
flush	pilas-engine/declaraciones/phaser.d.ts	/^                flush(isPostFlush?: boolean): this;$/;"	m
flush	pilas-engine/declaraciones/phaser.d.ts	/^            flush(): void;$/;"	m
flushData	pilas-engine/declaraciones/phaser.d.ts	/^        flushData(): this;$/;"	m
focus	pilas-engine/declaraciones/phaser.d.ts	/^            focus(): void;$/;"	m
folder_array	pilas-engine/libs/spriter.ts	/^  folder_array: Folder[] = [];$/;"	m
folder_index	pilas-engine/libs/spriter.ts	/^  folder_index: number = -1;$/;"	m
follow	pilas-engine/declaraciones/phaser.d.ts	/^                follow: Phaser.GameObjects.GameObject;$/;"	m
followOffset	pilas-engine/declaraciones/phaser.d.ts	/^                followOffset: Phaser.Math.Vector2;$/;"	m
follower	pilas-engine/declaraciones/phaser.d.ts	/^            follower(path: Phaser.Curves.Path, x: number, y: number, texture: string | Phaser.Textures.Texture, frame?: string | number): Phaser.GameObjects.PathFollower;$/;"	m
fondo	pilas-engine/actores/-actor-base.ts	/^      fondo: fondo,$/;"	m
fondo	pilas-engine/actores/-actor-base.ts	/^  set fondo(fondo: string) {}$/;"	m
fondo	pilas-engine/actores/-actor-texto-base.ts	/^  set fondo(fondo: string) {$/;"	m
fondo	pilas-engine/actores/boton.ts	/^    fondo: "imagenes:redimensionables\/gris",$/;"	m
fondo	pilas-engine/actores/boton_activable.ts	/^    fondo: "imagenes:redimensionables\/gris",$/;"	m
fondo	pilas-engine/actores/reiniciar_escena.ts	/^    fondo: "imagenes:redimensionables\/gris",$/;"	m
fondo	pilas-engine/escenas/-escena-base.ts	/^      fondo: this.fondo,$/;"	m
fondo	pilas-engine/escenas/-escena-base.ts	/^  fondo: string;$/;"	m
fondo	pilas-engine/mensajes.ts	/^  fondo: Phaser.GameObjects.TileSprite;$/;"	m
fondo	pilas-engine/modos/modo.ts	/^  fondo: any;$/;"	m
fondo	pilas-engine/modos/modo_cargador.ts	/^              fondo: fondo,$/;"	m
fondo	pilas-engine/modos/modo_ejecucion.ts	/^  fondo: Phaser.GameObjects.TileSprite;$/;"	m
fondo_anterior	pilas-engine/modos/modo_pausa.ts	/^  fondo_anterior: any = null;$/;"	m
font	pilas-engine/declaraciones/phaser.d.ts	/^                    font: string;$/;"	m
font	pilas-engine/declaraciones/phaser.d.ts	/^            readonly font: string;$/;"	m
fontData	pilas-engine/declaraciones/phaser.d.ts	/^            readonly fontData: Phaser.Types.GameObjects.BitmapText.BitmapFontData;$/;"	m
fontFamily	pilas-engine/declaraciones/phaser.d.ts	/^            fontFamily: string;$/;"	m
fontSize	pilas-engine/declaraciones/phaser.d.ts	/^                    fontSize: number;$/;"	m
fontSize	pilas-engine/declaraciones/phaser.d.ts	/^            fontSize: number;$/;"	m
fontSize	pilas-engine/declaraciones/phaser.d.ts	/^            fontSize: string;$/;"	m
fontStyle	pilas-engine/declaraciones/phaser.d.ts	/^            fontStyle: string;$/;"	m
for	pilas-engine/animaciones.ts	/^    for (let animacion in this.animaciones) {$/;"	m
for	pilas-engine/animaciones.ts	/^    for (let i = 0; i < animaciones.length; i++) {$/;"	m
for	pilas-engine/escenas/-escena-base.ts	/^        for (let i = 0; i < campos.length; i++) {$/;"	m
for	pilas-engine/escenas/-escena-base.ts	/^      for (let i = 0; i < variable.length; i++) {$/;"	m
for	pilas-engine/escenas/-escena-base.ts	/^    for (let i = 0; i < sonidos.length; i++) {$/;"	m
for	pilas-engine/historia.ts	/^    for (let i = 0; i < cantidad_total; i++) {$/;"	m
for	pilas-engine/huesos.ts	/^    for (let i = 0; i < items.length; i++) {$/;"	m
for	pilas-engine/laser.ts	/^      for (var k = body.parts[i].vertices.length - 1; k >= 0; k--) {$/;"	m
for	pilas-engine/laser.ts	/^    for (var i = body.parts.length - 1; i >= 0; i--) {$/;"	m
for	pilas-engine/laser.ts	/^    for (var i = edges.length - 1; i >= 0; i--) {$/;"	m
for	pilas-engine/laser.ts	/^    for (var k = bcols.length - 1; k >= 0; k--) {$/;"	m
for	pilas-engine/laser.ts	/^  for (var i = query.length - 1; i >= 0; i--) {$/;"	m
for	pilas-engine/libs/spriter.ts	/^    for (t2 = x, i = 0; i < 8; i++) {$/;"	m
for	pilas-engine/modos/modo.ts	/^    for (let i = 0; i < figuras.length; i++) {$/;"	m
for	pilas-engine/modos/modo.ts	/^    for (var j = 1; j < vertLength; j++) {$/;"	m
for	pilas-engine/modos/modo_cargador.ts	/^          for (let i = 0; i < frames.length; i++) {$/;"	m
for	pilas-engine/modos/modo_cargador.ts	/^        for (i = 0; i < bytes; i += 3) {$/;"	m
for	pilas-engine/modos/modo_cargador.ts	/^      for (let i = 0; i < this.pilas.recursos.atlas.length; i++) {$/;"	m
for	pilas-engine/modos/modo_cargador.ts	/^      for (let i = 0; i < this.pilas.recursos.huesos.length; i++) {$/;"	m
for	pilas-engine/modos/modo_cargador.ts	/^      for (let i = 0; i < this.pilas.recursos.imagenes.length; i++) {$/;"	m
for	pilas-engine/modos/modo_cargador.ts	/^      for (let i = 0; i < this.pilas.recursos.sonidos.length; i++) {$/;"	m
for	pilas-engine/modos/modo_cargador.ts	/^    for (let key in this.game.textures.list) {$/;"	m
for	pilas-engine/modos/modo_ejecucion.ts	/^      for (let i = 0; i < event.pairs.length; i++) {$/;"	m
for	pilas-engine/modos/modo_ejecucion.ts	/^    for (let i = 0; i < lista_de_clases.length; i++) {$/;"	m
for	pilas-engine/pilas.ts	/^      for (let columna = 0; columna < cantidad_de_columnas; columna++) {$/;"	m
for	pilas-engine/pilas.ts	/^    for (let fila = 0; fila < cantidad_de_filas; fila++) {$/;"	m
for	pilas-engine/pilas.ts	/^    for (let i = 0; i < actores.length; i++) {$/;"	m
for	pilas-engine/pilas.ts	/^    for (let i = lista.length - 1; i > 0; i--) {$/;"	m
for	pilas-engine/pilas.ts	/^    for (var key in diccionario) {$/;"	m
for	pilas-engine/utilidades.ts	/^        for (j = 1; j <= a.length; j++) {$/;"	m
for	pilas-engine/utilidades.ts	/^      for (i = 0; i <= b.length; i++) {$/;"	m
for	pilas-engine/utilidades.ts	/^      for (i = 1; i <= b.length; i++) {$/;"	m
for	pilas-engine/utilidades.ts	/^      for (j = 0; j <= a.length; j++) {$/;"	m
for	pilas-engine/utilidades.ts	/^      for (var key in src) {$/;"	m
forEachAlive	pilas-engine/declaraciones/phaser.d.ts	/^                forEachAlive(callback: Phaser.Types.GameObjects.Particles.ParticleEmitterCallback, context: any): this;$/;"	m
forEachDead	pilas-engine/declaraciones/phaser.d.ts	/^                forEachDead(callback: Phaser.Types.GameObjects.Particles.ParticleEmitterCallback, context: any): this;$/;"	m
forEachTile	pilas-engine/declaraciones/phaser.d.ts	/^            forEachTile(callback: EachTileCallback, context?: object, tileX?: number, tileY?: number, width?: number, height?: number, filteringOptions?: Phaser.Types.Tilemaps.FilteringOptions): this;$/;"	m
forEachTile	pilas-engine/declaraciones/phaser.d.ts	/^            forEachTile(callback: EachTileCallback, context?: object, tileX?: number, tileY?: number, width?: number, height?: number, filteringOptions?: Phaser.Types.Tilemaps.FilteringOptions, layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Tilemaps.Tilemap;$/;"	m
forceSetTimeOut	pilas-engine/declaraciones/phaser.d.ts	/^            readonly forceSetTimeOut: boolean;$/;"	m
forceSetTimeOut	pilas-engine/pilas.ts	/^        forceSetTimeOut: true$/;"	m
forceX	pilas-engine/declaraciones/phaser.d.ts	/^                forceX: boolean;$/;"	m
forceZero	pilas-engine/declaraciones/phaser.d.ts	/^                forceZero(): boolean;$/;"	m
forceZero	pilas-engine/declaraciones/phaser.d.ts	/^                forceZero: boolean;$/;"	m
format	pilas-engine/declaraciones/phaser.d.ts	/^            format: number;$/;"	m
forward	pilas-engine/declaraciones/phaser.d.ts	/^            forward: boolean;$/;"	m
forwardButtonDown	pilas-engine/declaraciones/phaser.d.ts	/^            forwardButtonDown(): boolean;$/;"	m
forwardButtonReleased	pilas-engine/declaraciones/phaser.d.ts	/^            forwardButtonReleased(): boolean;$/;"	m
fotos	pilas-engine/historia.ts	/^  fotos: any;$/;"	m
fps	pilas-engine/declaraciones/phaser.d.ts	/^                readonly fps: number;$/;"	m
fps	pilas-engine/declaraciones/phaser.d.ts	/^            readonly fps: Phaser.Types.Core.FPSConfig;$/;"	m
fps	pilas-engine/modos/modo.ts	/^  fps: any;$/;"	m
fps	pilas-engine/modos/modo_ejecucion.ts	/^  fps: any;$/;"	m
fps	pilas-engine/pilas.ts	/^      fps: {$/;"	m
frac	pilas-engine/declaraciones/phaser.d.ts	/^            frac(): number;$/;"	m
fragmentSrc	pilas-engine/declaraciones/phaser.d.ts	/^            fragmentSrc: string;$/;"	m
frame	pilas-engine/animaciones.ts	/^          frame: cuadro.split(":")[1]$/;"	m
frame	pilas-engine/declaraciones/phaser.d.ts	/^                frame: Phaser.Textures.Frame;$/;"	m
frame	pilas-engine/declaraciones/phaser.d.ts	/^                frame: string | number;$/;"	m
frame	pilas-engine/declaraciones/phaser.d.ts	/^                frame: string;$/;"	m
frame	pilas-engine/declaraciones/phaser.d.ts	/^            frame: Phaser.Textures.Frame;$/;"	m
frame	pilas-engine/declaraciones/phaser.d.ts	/^            protected frame: Phaser.Textures.Frame;$/;"	m
frame	pilas-engine/declaraciones/phaser.d.ts	/^            readonly frame: number;$/;"	m
frameKey	pilas-engine/declaraciones/phaser.d.ts	/^                frameKey: string;$/;"	m
frameNames	pilas-engine/declaraciones/phaser.d.ts	/^                frameNames: string[];$/;"	m
frameQuantity	pilas-engine/declaraciones/phaser.d.ts	/^                frameQuantity: number;$/;"	m
frameRate	pilas-engine/animaciones.ts	/^      frameRate: velocidad,$/;"	m
frameRate	pilas-engine/declaraciones/phaser.d.ts	/^                frameRate: number;$/;"	m
frameRate	pilas-engine/declaraciones/phaser.d.ts	/^            frameRate: number;$/;"	m
frameTotal	pilas-engine/declaraciones/phaser.d.ts	/^            frameTotal: number;$/;"	m
frameWidth	pilas-engine/declaraciones/phaser.d.ts	/^                    frameWidth: number;$/;"	m
frameWidth	pilas-engine/declaraciones/phaser.d.ts	/^                frameWidth: number;$/;"	m
framebuffer	pilas-engine/declaraciones/phaser.d.ts	/^                framebuffer: WebGLFramebuffer;$/;"	m
framebuffer	pilas-engine/declaraciones/phaser.d.ts	/^            framebuffer: WebGLFramebuffer;$/;"	m
frames	pilas-engine/animaciones.ts	/^      frames: frames,$/;"	m
frames	pilas-engine/declaraciones/phaser.d.ts	/^                frames: Phaser.Textures.Frame[];$/;"	m
frames	pilas-engine/declaraciones/phaser.d.ts	/^                frames: Phaser.Types.Animations.JSONAnimationFrame[];$/;"	m
frames	pilas-engine/declaraciones/phaser.d.ts	/^            frames: Phaser.Animations.AnimationFrame[];$/;"	m
frames	pilas-engine/declaraciones/phaser.d.ts	/^            frames: object;$/;"	m
framesThisSecond	pilas-engine/declaraciones/phaser.d.ts	/^            readonly framesThisSecond: number;$/;"	m
free	pilas-engine/declaraciones/phaser.d.ts	/^                function free(): number;$/;"	f
freeze	pilas-engine/declaraciones/phaser.d.ts	/^            freeze: boolean;$/;"	m
frequency	pilas-engine/declaraciones/phaser.d.ts	/^                frequency: number;$/;"	m
friction	pilas-engine/declaraciones/phaser.d.ts	/^                    friction: number;$/;"	m
friction	pilas-engine/declaraciones/phaser.d.ts	/^                friction: Phaser.Math.Vector2;$/;"	m
frictionStatic	pilas-engine/declaraciones/phaser.d.ts	/^                    frictionStatic: number;$/;"	m
fromAng	pilas-engine/laser.ts	/^  static fromAng(angle: number, magnitude = 1) {$/;"	m
fromArray	pilas-engine/declaraciones/phaser.d.ts	/^            fromArray(a: any[]): Phaser.Math.Matrix3;$/;"	m
fromArray	pilas-engine/declaraciones/phaser.d.ts	/^            fromArray(a: number[]): this;$/;"	m
fromArray	pilas-engine/declaraciones/phaser.d.ts	/^            fromArray(array: number[], offset?: number): Phaser.Math.Vector3;$/;"	m
fromAtlas	pilas-engine/declaraciones/phaser.d.ts	/^            readonly fromAtlas: boolean;$/;"	m
fromJSON	pilas-engine/declaraciones/phaser.d.ts	/^                fromJSON(config: Phaser.Types.Cameras.Scene2D.CameraConfig | Phaser.Types.Cameras.Scene2D.CameraConfig[]): this;$/;"	m
fromJSON	pilas-engine/declaraciones/phaser.d.ts	/^                fromJSON(config: Phaser.Types.GameObjects.Particles.ParticleEmitterConfig): this;$/;"	m
fromJSON	pilas-engine/declaraciones/phaser.d.ts	/^                fromJSON(x: number, y: number, config: any, options?: Phaser.Types.Physics.Matter.MatterBodyConfig, addToWorld?: boolean): MatterJS.BodyType;$/;"	m
fromJSON	pilas-engine/declaraciones/phaser.d.ts	/^            fromJSON(data: Phaser.Types.Curves.JSONPath): this;$/;"	m
fromJSON	pilas-engine/declaraciones/phaser.d.ts	/^            fromJSON(data: string | Phaser.Types.Animations.JSONAnimations | Phaser.Types.Animations.JSONAnimation, clearCurrentAnimations?: boolean): Phaser.Animations.Animation[];$/;"	m
fromJSON	pilas-engine/declaraciones/phaser.d.ts	/^            static fromJSON(data: Phaser.Types.Curves.JSONCurve): Phaser.Curves.CubicBezier;$/;"	m
fromJSON	pilas-engine/declaraciones/phaser.d.ts	/^            static fromJSON(data: Phaser.Types.Curves.JSONCurve): Phaser.Curves.Line;$/;"	m
fromJSON	pilas-engine/declaraciones/phaser.d.ts	/^            static fromJSON(data: Phaser.Types.Curves.JSONCurve): Phaser.Curves.QuadraticBezier;$/;"	m
fromJSON	pilas-engine/declaraciones/phaser.d.ts	/^            static fromJSON(data: Phaser.Types.Curves.JSONCurve): Phaser.Curves.Spline;$/;"	m
fromJSON	pilas-engine/declaraciones/phaser.d.ts	/^            static fromJSON(data: Phaser.Types.Curves.JSONEllipseCurve): Phaser.Curves.Ellipse;$/;"	m
fromMat3	pilas-engine/declaraciones/phaser.d.ts	/^            fromMat3(mat: Phaser.Math.Matrix3): Phaser.Math.Quaternion;$/;"	m
fromMat4	pilas-engine/declaraciones/phaser.d.ts	/^            fromMat4(m: Phaser.Math.Matrix4): Phaser.Math.Matrix3;$/;"	m
fromOther	pilas-engine/laser.ts	/^  static fromOther(vector: any) {$/;"	m
fromPhysicsEditor	pilas-engine/declaraciones/phaser.d.ts	/^                fromPhysicsEditor(x: number, y: number, config: any, options?: Phaser.Types.Physics.Matter.MatterBodyConfig, addToWorld?: boolean): MatterJS.BodyType;$/;"	m
fromQuat	pilas-engine/declaraciones/phaser.d.ts	/^            fromQuat(q: Phaser.Math.Quaternion): Phaser.Math.Matrix3;$/;"	m
fromQuat	pilas-engine/declaraciones/phaser.d.ts	/^            fromQuat(q: Phaser.Math.Quaternion): this;$/;"	m
fromRotationTranslation	pilas-engine/declaraciones/phaser.d.ts	/^            fromRotationTranslation(q: Phaser.Math.Quaternion, v: Phaser.Math.Vector3): this;$/;"	m
fromRotationXYTranslation	pilas-engine/declaraciones/phaser.d.ts	/^            fromRotationXYTranslation(rotation: Phaser.Math.Vector3, position: Phaser.Math.Vector3, translateFirst: boolean): this;$/;"	m
fromSVG	pilas-engine/declaraciones/phaser.d.ts	/^                fromSVG(x: number, y: number, xml: object, scale?: number, options?: Phaser.Types.Physics.Matter.MatterBodyConfig, addToWorld?: boolean): MatterJS.BodyType;$/;"	m
fromVertices	pilas-engine/declaraciones/phaser.d.ts	/^                fromVertices(x: number, y: number, vertexSets: string | any[], options?: Phaser.Types.Physics.Matter.MatterBodyConfig, flagInternal?: boolean, removeCollinear?: number, minimumArea?: number): MatterJS.BodyType;$/;"	m
frustum	pilas-engine/declaraciones/phaser.d.ts	/^            frustum(left: number, right: number, bottom: number, top: number, near: number, far: number): this;$/;"	m
fuente	pilas-engine/actores/-actor-base.ts	/^      fuente: fuente,$/;"	m
fuente	pilas-engine/actores/-actor-base.ts	/^  get fuente() {$/;"	m
fuente	pilas-engine/actores/-actor-base.ts	/^  set fuente(fuente: string) {}$/;"	m
fuente	pilas-engine/actores/-actor-texto-base.ts	/^    fuente: "color-blanco-con-sombra-grande"$/;"	m
fuente	pilas-engine/actores/-actor-texto-base.ts	/^  get fuente() {$/;"	m
fuente	pilas-engine/actores/-actor-texto-base.ts	/^  set fuente(fuente: string) {$/;"	m
fuente	pilas-engine/actores/boton.ts	/^    fuente: "color-negro"$/;"	m
fuente	pilas-engine/actores/boton_activable.ts	/^    fuente: "color-negro"$/;"	m
fuente	pilas-engine/actores/puntaje.ts	/^    fuente: "color-blanco-con-sombra-chico"$/;"	m
fuente	pilas-engine/actores/reiniciar_escena.ts	/^    fuente: "color-negro"$/;"	m
fuente	pilas-engine/actores/texto.ts	/^    fuente: "color-blanco-con-sombra"$/;"	m
fullFrame1	pilas-engine/declaraciones/phaser.d.ts	/^                    fullFrame1: Phaser.Renderer.WebGL.RenderTarget;$/;"	m
fullFrame1	pilas-engine/declaraciones/phaser.d.ts	/^                fullFrame1: Phaser.Renderer.WebGL.RenderTarget;$/;"	m
fullFrame2	pilas-engine/declaraciones/phaser.d.ts	/^                    fullFrame2: Phaser.Renderer.WebGL.RenderTarget;$/;"	m
fullFrame2	pilas-engine/declaraciones/phaser.d.ts	/^                fullFrame2: Phaser.Renderer.WebGL.RenderTarget;$/;"	m
fullscreen	pilas-engine/declaraciones/phaser.d.ts	/^            fullscreen: Phaser.Device.Fullscreen;$/;"	m
fullscreen	pilas-engine/declaraciones/phaser.d.ts	/^        fullscreen: Phaser.Device.Fullscreen;$/;"	m
fullscreenTarget	pilas-engine/declaraciones/phaser.d.ts	/^            fullscreenTarget: any;$/;"	m
fullscreenTarget	pilas-engine/declaraciones/phaser.d.ts	/^            readonly fullscreenTarget: HTMLElement | string;$/;"	m
funcion	pilas-engine/actores/-actor-base.ts	/^      funcion();$/;"	m
funcion	pilas-engine/animacion_de_propiedad.ts	/^  funcion(funcion_a_ejecutar: any) {$/;"	m
funcion	pilas-engine/animacion_nula.ts	/^  funcion() {$/;"	m
funcion	pilas-engine/eventos_de_escena.ts	/^      funcion: funcion$/;"	m
function	pilas-engine/modos/modo_cargador.ts	/^                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };$/;"	m
furthest	pilas-engine/declaraciones/phaser.d.ts	/^                furthest(source: any, targets?: Phaser.Physics.Arcade.Body[] | Phaser.Physics.Arcade.StaticBody[] | Phaser.GameObjects.GameObject[]): Phaser.Physics.Arcade.Body | Phaser.Physics.Arcade.StaticBody | Phaser.GameObjects.GameObject;$/;"	m
fuzzyEquals	pilas-engine/declaraciones/phaser.d.ts	/^            fuzzyEquals(v: Phaser.Types.Math.Vector2Like, epsilon?: number): boolean;$/;"	m
g	pilas-engine/declaraciones/phaser.d.ts	/^                g: number;$/;"	m
g	pilas-engine/declaraciones/phaser.d.ts	/^            g: number;$/;"	m
gallina	pilas-engine/actores/gallina.ts	/^class gallina extends Actor {$/;"	c
game	pilas-engine/declaraciones/phaser.d.ts	/^                    game: Phaser.Game;$/;"	m
game	pilas-engine/declaraciones/phaser.d.ts	/^                game: Phaser.Game;$/;"	m
game	pilas-engine/declaraciones/phaser.d.ts	/^            game: Phaser.Game;$/;"	m
game	pilas-engine/declaraciones/phaser.d.ts	/^            protected game: Phaser.Game;$/;"	m
game	pilas-engine/declaraciones/phaser.d.ts	/^            readonly game: Phaser.Game;$/;"	m
game	pilas-engine/declaraciones/phaser.d.ts	/^        game: Phaser.Game;$/;"	m
game	pilas-engine/declaraciones/phaser.d.ts	/^        readonly game: Phaser.Game;$/;"	m
game	pilas-engine/pilas.ts	/^  game: Phaser.Game;$/;"	m
gameCanvas	pilas-engine/declaraciones/phaser.d.ts	/^                gameCanvas: HTMLCanvasElement;$/;"	m
gameContext	pilas-engine/declaraciones/phaser.d.ts	/^                gameContext: CanvasRenderingContext2D;$/;"	m
gameObject	pilas-engine/declaraciones/phaser.d.ts	/^                    gameObject: Phaser.GameObjects.GameObject;$/;"	m
gameObject	pilas-engine/declaraciones/phaser.d.ts	/^                gameObject(gameObject: Phaser.GameObjects.GameObject, options?: Phaser.Types.Physics.Matter.MatterBodyConfig | MatterJS.Body, addToWorld?: boolean): Phaser.Physics.Matter.Image | Phaser.Physics.Matter.Sprite | Phaser.GameObjects.GameObject;$/;"	m
gameObject	pilas-engine/declaraciones/phaser.d.ts	/^                gameObject: Phaser.GameObjects.GameObject;$/;"	m
gameSize	pilas-engine/declaraciones/phaser.d.ts	/^            gameSize: Phaser.Structs.Size;$/;"	m
gameStarted	pilas-engine/declaraciones/phaser.d.ts	/^        gameStarted(): void;$/;"	m
gameTitle	pilas-engine/declaraciones/phaser.d.ts	/^            readonly gameTitle: string;$/;"	m
gameURL	pilas-engine/declaraciones/phaser.d.ts	/^            readonly gameURL: string;$/;"	m
gameVersion	pilas-engine/declaraciones/phaser.d.ts	/^            readonly gameVersion: string;$/;"	m
gamepad	pilas-engine/control.ts	/^  gamepad: any;$/;"	m
gamepad	pilas-engine/declaraciones/phaser.d.ts	/^            gamepad: Phaser.Input.Gamepad.GamepadPlugin;$/;"	m
gamepad	pilas-engine/pilas.ts	/^        gamepad: true$/;"	m
gamepad_1	pilas-engine/control.ts	/^  public gamepad_1: GamePad;$/;"	m
gamepads	pilas-engine/declaraciones/phaser.d.ts	/^                gamepads: Phaser.Input.Gamepad.Gamepad[];$/;"	m
gamepads	pilas-engine/declaraciones/phaser.d.ts	/^            gamepads: boolean;$/;"	m
generar	pilas-engine/colores.ts	/^  generar(rojo: number, verde: number, azul: number) {$/;"	m
generar_color_para_depurar	pilas-engine/actores/-actor-base.ts	/^  generar_color_para_depurar() {$/;"	m
generar_id	pilas-engine/eventos_de_escena.ts	/^  private generar_id(nombre: string) {$/;"	m
generar_lista_de_similitudes	pilas-engine/comportamientos.ts	/^  generar_lista_de_similitudes(comportamiento) {$/;"	m
generar_lista_de_similitudes	pilas-engine/habilidades.ts	/^  generar_lista_de_similitudes(habilidad) {$/;"	m
generate	pilas-engine/declaraciones/phaser.d.ts	/^            generate(key: string, config: Phaser.Types.Create.GenerateTextureConfig): Phaser.Textures.Texture;$/;"	m
generateFrameNames	pilas-engine/declaraciones/phaser.d.ts	/^            generateFrameNames(key: string, config?: Phaser.Types.Animations.GenerateFrameNames): Phaser.Types.Animations.AnimationFrame[];$/;"	m
generateFrameNumbers	pilas-engine/declaraciones/phaser.d.ts	/^            generateFrameNumbers(key: string, config: Phaser.Types.Animations.GenerateFrameNumbers): Phaser.Types.Animations.AnimationFrame[];$/;"	m
generateMipmap	pilas-engine/declaraciones/phaser.d.ts	/^                generateMipmap: boolean;$/;"	m
generateTexture	pilas-engine/declaraciones/phaser.d.ts	/^            generateTexture(key: string | HTMLCanvasElement, width?: number, height?: number): this;$/;"	m
geom	pilas-engine/declaraciones/phaser.d.ts	/^            readonly geom: any;$/;"	m
geometryMask	pilas-engine/declaraciones/phaser.d.ts	/^                geometryMask: Phaser.GameObjects.Graphics;$/;"	m
get	pilas-engine/declaraciones/phaser.d.ts	/^                get(pipeline: string | Phaser.Renderer.WebGL.WebGLPipeline): Phaser.Renderer.WebGL.WebGLPipeline;$/;"	m
get	pilas-engine/declaraciones/phaser.d.ts	/^            get(key: K): V;$/;"	m
get	pilas-engine/declaraciones/phaser.d.ts	/^            get(key: string | Phaser.Scene): Phaser.Scene;$/;"	m
get	pilas-engine/declaraciones/phaser.d.ts	/^            get(key: string | Phaser.Textures.Texture): Phaser.Textures.Texture;$/;"	m
get	pilas-engine/declaraciones/phaser.d.ts	/^            get(key: string | string[]): any;$/;"	m
get	pilas-engine/declaraciones/phaser.d.ts	/^            get(key: string): Phaser.Animations.Animation;$/;"	m
get	pilas-engine/declaraciones/phaser.d.ts	/^            get(key: string): Phaser.Sound.BaseSound;$/;"	m
get	pilas-engine/declaraciones/phaser.d.ts	/^            get(key: string): any;$/;"	m
get	pilas-engine/declaraciones/phaser.d.ts	/^            get(key: string, autoStart?: boolean): Phaser.Plugins.BasePlugin | Function;$/;"	m
get	pilas-engine/declaraciones/phaser.d.ts	/^            get(name?: string | number): Phaser.Textures.Frame;$/;"	m
get	pilas-engine/declaraciones/phaser.d.ts	/^            get(property: string, value: T): T;$/;"	m
get	pilas-engine/declaraciones/phaser.d.ts	/^            get(x?: number, y?: number, key?: string, frame?: string | number, visible?: boolean): any;$/;"	m
getActive	pilas-engine/declaraciones/phaser.d.ts	/^            getActive(): T[];$/;"	m
getActiveValue	pilas-engine/declaraciones/phaser.d.ts	/^                getActiveValue: Phaser.Types.Tweens.GetActiveCallback;$/;"	m
getAliveParticleCount	pilas-engine/declaraciones/phaser.d.ts	/^                getAliveParticleCount(): number;$/;"	m
getAll	pilas-engine/declaraciones/phaser.d.ts	/^                getAll(): Phaser.Input.Gamepad.Gamepad[];$/;"	m
getAll	pilas-engine/declaraciones/phaser.d.ts	/^            getAll(): {[key: string]:  any};$/;"	m
getAll	pilas-engine/declaraciones/phaser.d.ts	/^            getAll(key: string): Phaser.Sound.BaseSound[];$/;"	m
getAll	pilas-engine/declaraciones/phaser.d.ts	/^            getAll(property?: string, value?: T, startIndex?: number, endIndex?: number): T[];$/;"	m
getAll	pilas-engine/declaraciones/phaser.d.ts	/^            getAll(property?: string, value?: any, startIndex?: number, endIndex?: number): Phaser.GameObjects.GameObject[];$/;"	m
getAllBodies	pilas-engine/declaraciones/phaser.d.ts	/^                getAllBodies(): MatterJS.BodyType[];$/;"	m
getAllComposites	pilas-engine/declaraciones/phaser.d.ts	/^                getAllComposites(): MatterJS.CompositeType[];$/;"	m
getAllConstraints	pilas-engine/declaraciones/phaser.d.ts	/^                getAllConstraints(): MatterJS.ConstraintType[];$/;"	m
getAllTweens	pilas-engine/declaraciones/phaser.d.ts	/^            getAllTweens(): Phaser.Tweens.Tween[];$/;"	m
getAngle	pilas-engine/declaraciones/phaser.d.ts	/^            getAngle(): number;$/;"	m
getAnim	pilas-engine/libs/spriter.ts	/^  getAnim(): string {$/;"	m
getAnimKeys	pilas-engine/libs/spriter.ts	/^  getAnimKeys(): string[] {$/;"	m
getAnimKeys	pilas-engine/libs/spriter.ts	/^  getAnimKeys(entity_key: string): string[] {$/;"	m
getAnims	pilas-engine/libs/spriter.ts	/^  getAnims(): { [key: string]: Animation } {$/;"	m
getAnims	pilas-engine/libs/spriter.ts	/^  getAnims(entity_key: string): { [key: string]: Animation } {$/;"	m
getArray	pilas-engine/declaraciones/phaser.d.ts	/^            getArray(): T[];$/;"	m
getArray	pilas-engine/declaraciones/phaser.d.ts	/^            getArray(): V[];$/;"	m
getAspectRatio	pilas-engine/declaraciones/phaser.d.ts	/^                getAspectRatio(): number;$/;"	m
getAt	pilas-engine/declaraciones/phaser.d.ts	/^            getAt(index: number): Phaser.GameObjects.GameObject;$/;"	m
getAt	pilas-engine/declaraciones/phaser.d.ts	/^            getAt(index: number): Phaser.Scene | undefined;$/;"	m
getAt	pilas-engine/declaraciones/phaser.d.ts	/^            getAt(index: number): T;$/;"	m
getAxisTotal	pilas-engine/declaraciones/phaser.d.ts	/^                getAxisTotal(): number;$/;"	m
getAxisValue	pilas-engine/declaraciones/phaser.d.ts	/^                getAxisValue(index: number): number;$/;"	m
getBase64	pilas-engine/declaraciones/phaser.d.ts	/^            getBase64(key: string, frame?: string | number, type?: string, encoderOptions?: number): string;$/;"	m
getBody	pilas-engine/declaraciones/phaser.d.ts	/^                getBody(): boolean;$/;"	m
getBottom	pilas-engine/declaraciones/phaser.d.ts	/^            getBottom(camera?: Phaser.Cameras.Scene2D.Camera): number;$/;"	m
getBottomCenter	pilas-engine/declaraciones/phaser.d.ts	/^                getBottomCenter(body: Phaser.Types.Physics.Matter.MatterBody, x?: number, y?: number): Phaser.Math.Vector2 | false;$/;"	m
getBottomLeft	pilas-engine/declaraciones/phaser.d.ts	/^                getBottomLeft(body: Phaser.Types.Physics.Matter.MatterBody, x?: number, y?: number): Phaser.Math.Vector2 | false;$/;"	m
getBottomRight	pilas-engine/declaraciones/phaser.d.ts	/^                getBottomRight(body: Phaser.Types.Physics.Matter.MatterBody, x?: number, y?: number): Phaser.Math.Vector2 | false;$/;"	m
getBounds	pilas-engine/declaraciones/phaser.d.ts	/^                getBounds(obj: Phaser.Types.Physics.Arcade.ArcadeBodyBounds): Phaser.Types.Physics.Arcade.ArcadeBodyBounds;$/;"	m
getBounds	pilas-engine/declaraciones/phaser.d.ts	/^                getBounds(out?: Phaser.Geom.Rectangle): Phaser.Geom.Rectangle;$/;"	m
getBounds	pilas-engine/declaraciones/phaser.d.ts	/^            getBounds(camera?: Phaser.Cameras.Scene2D.Camera, output?: Phaser.Geom.Rectangle): Phaser.Geom.Rectangle | object;$/;"	m
getBounds	pilas-engine/declaraciones/phaser.d.ts	/^            getBounds(out?: Phaser.Geom.Rectangle, accuracy?: number): Phaser.Geom.Rectangle;$/;"	m
getBounds	pilas-engine/declaraciones/phaser.d.ts	/^            getBounds(output?: Phaser.Geom.Rectangle): Phaser.Geom.Rectangle;$/;"	m
getBoundsTransformMatrix	pilas-engine/declaraciones/phaser.d.ts	/^            getBoundsTransformMatrix(): Phaser.GameObjects.Components.TransformMatrix;$/;"	m
getButtonTotal	pilas-engine/declaraciones/phaser.d.ts	/^                getButtonTotal(): number;$/;"	m
getButtonValue	pilas-engine/declaraciones/phaser.d.ts	/^                getButtonValue(index: number): number;$/;"	m
getByName	pilas-engine/declaraciones/phaser.d.ts	/^            getByName(name: string): Phaser.GameObjects.GameObject;$/;"	m
getByName	pilas-engine/declaraciones/phaser.d.ts	/^            getByName(name: string): T | null;$/;"	m
getCSSMatrix	pilas-engine/declaraciones/phaser.d.ts	/^                getCSSMatrix(): string;$/;"	m
getCamera	pilas-engine/declaraciones/phaser.d.ts	/^                getCamera(name: string): Phaser.Cameras.Scene2D.Camera;$/;"	m
getCamerasBelowPointer	pilas-engine/declaraciones/phaser.d.ts	/^                getCamerasBelowPointer(pointer: Phaser.Input.Pointer): Phaser.Cameras.Scene2D.Camera[];$/;"	m
getCanvas	pilas-engine/declaraciones/phaser.d.ts	/^            getCanvas(): HTMLCanvasElement;$/;"	m
getCaptures	pilas-engine/declaraciones/phaser.d.ts	/^                getCaptures(): number[];$/;"	m
getCatalog	pilas-engine/declaraciones/phaser.d.ts	/^        getCatalog(): this;$/;"	m
getCenter	pilas-engine/declaraciones/phaser.d.ts	/^                getCenter(body: Phaser.Types.Physics.Matter.MatterBody, x?: number, y?: number): Phaser.Math.Vector2 | false;$/;"	m
getCenterX	pilas-engine/declaraciones/phaser.d.ts	/^            getCenterX(camera?: Phaser.Cameras.Scene2D.Camera): number;$/;"	m
getCenterY	pilas-engine/declaraciones/phaser.d.ts	/^            getCenterY(camera?: Phaser.Cameras.Scene2D.Camera): number;$/;"	m
getCharacterAt	pilas-engine/declaraciones/phaser.d.ts	/^            getCharacterAt(x: number, y: number, camera?: Phaser.Cameras.Scene2D.Camera): Phaser.Types.GameObjects.BitmapText.BitmapTextCharacter;$/;"	m
getChildByID	pilas-engine/declaraciones/phaser.d.ts	/^            getChildByID(id: string): Element;$/;"	m
getChildByName	pilas-engine/declaraciones/phaser.d.ts	/^            getChildByName(name: string): Element;$/;"	m
getChildByProperty	pilas-engine/declaraciones/phaser.d.ts	/^            getChildByProperty(property: string, value: string): Element;$/;"	m
getChildren	pilas-engine/declaraciones/phaser.d.ts	/^            getChildren(): Phaser.GameObjects.GameObject[];$/;"	m
getClass	pilas-engine/declaraciones/phaser.d.ts	/^            getClass(key: string): Phaser.Plugins.BasePlugin;$/;"	m
getCollisionGroup	pilas-engine/declaraciones/phaser.d.ts	/^            getCollisionGroup(): object;$/;"	m
getCompressedTextureName	pilas-engine/declaraciones/phaser.d.ts	/^                getCompressedTextureName(baseFormat: string, format?: GLenum): string;$/;"	m
getCompressedTextures	pilas-engine/declaraciones/phaser.d.ts	/^                getCompressedTextures(): Phaser.Types.Renderer.WebGL.WebGLTextureCompression;$/;"	m
getConfig	pilas-engine/declaraciones/phaser.d.ts	/^                getConfig(): Phaser.Types.Physics.Arcade.ArcadeWorldConfig;$/;"	m
getConfig	pilas-engine/declaraciones/phaser.d.ts	/^                getConfig(): Phaser.Types.Physics.Matter.MatterWorldConfig;$/;"	m
getConnectedScores	pilas-engine/declaraciones/phaser.d.ts	/^        getConnectedScores(): this;$/;"	m
getConstraintLength	pilas-engine/declaraciones/phaser.d.ts	/^                getConstraintLength(constraint: MatterJS.ConstraintType): number;$/;"	m
getContext	pilas-engine/declaraciones/phaser.d.ts	/^            getContext(): CanvasRenderingContext2D;$/;"	m
getCore	pilas-engine/declaraciones/phaser.d.ts	/^            function getCore(key: string): Phaser.Types.Plugins.CorePluginContainer;$/;"	f
getCurrentTime	pilas-engine/declaraciones/phaser.d.ts	/^            getCurrentTime(): number;$/;"	m
getCurveLengths	pilas-engine/declaraciones/phaser.d.ts	/^            getCurveLengths(): number[];$/;"	m
getCustom	pilas-engine/declaraciones/phaser.d.ts	/^            function getCustom(key: string): Phaser.Types.Plugins.CustomPluginContainer;$/;"	f
getCustomClass	pilas-engine/declaraciones/phaser.d.ts	/^            function getCustomClass(key: string): Function;$/;"	f
getData	pilas-engine/declaraciones/phaser.d.ts	/^            getData(): Float32Array;$/;"	m
getData	pilas-engine/declaraciones/phaser.d.ts	/^            getData(): any;$/;"	m
getData	pilas-engine/declaraciones/phaser.d.ts	/^            getData(key: string | string[]): any;$/;"	m
getData	pilas-engine/declaraciones/phaser.d.ts	/^            getData(x: number, y: number, width: number, height: number): ImageData;$/;"	m
getData	pilas-engine/declaraciones/phaser.d.ts	/^        getData(keys: string | string[]): this;$/;"	m
getDataSourceImage	pilas-engine/declaraciones/phaser.d.ts	/^            getDataSourceImage(name?: string | number): HTMLImageElement | HTMLCanvasElement;$/;"	m
getDeadParticleCount	pilas-engine/declaraciones/phaser.d.ts	/^                getDeadParticleCount(): number;$/;"	m
getDefaultScenePlugins	pilas-engine/declaraciones/phaser.d.ts	/^            protected getDefaultScenePlugins(): string[];$/;"	m
getDelta	pilas-engine/declaraciones/phaser.d.ts	/^                getDelta: Function;$/;"	m
getDistance	pilas-engine/declaraciones/phaser.d.ts	/^            getDistance(): number;$/;"	m
getDistancePoints	pilas-engine/declaraciones/phaser.d.ts	/^            getDistancePoints(distance: number): Phaser.Geom.Point[];$/;"	m
getDistanceX	pilas-engine/declaraciones/phaser.d.ts	/^            getDistanceX(): number;$/;"	m
getDistanceY	pilas-engine/declaraciones/phaser.d.ts	/^            getDistanceY(): number;$/;"	m
getDragState	pilas-engine/declaraciones/phaser.d.ts	/^            getDragState(pointer: Phaser.Input.Pointer): number;$/;"	m
getDuration	pilas-engine/declaraciones/phaser.d.ts	/^                getDuration(): number;$/;"	m
getDuration	pilas-engine/declaraciones/phaser.d.ts	/^            getDuration(): number;$/;"	m
getDurationMS	pilas-engine/declaraciones/phaser.d.ts	/^            getDurationMS(): number;$/;"	m
getElapsed	pilas-engine/declaraciones/phaser.d.ts	/^            getElapsed(): number;$/;"	m
getElapsedSeconds	pilas-engine/declaraciones/phaser.d.ts	/^            getElapsedSeconds(): number;$/;"	m
getEndPoint	pilas-engine/declaraciones/phaser.d.ts	/^            getEndPoint(out?: Phaser.Math.Vector2): Phaser.Math.Vector2;$/;"	m
getEndValue	pilas-engine/declaraciones/phaser.d.ts	/^                getEndValue: Phaser.Types.Tweens.GetEndCallback;$/;"	m
getEntities	pilas-engine/libs/spriter.ts	/^  getEntities(): { [key: string]: Entity } {$/;"	m
getEntity	pilas-engine/libs/spriter.ts	/^  getEntity(): string {$/;"	m
getEntityKeys	pilas-engine/libs/spriter.ts	/^  getEntityKeys(): string[] {$/;"	m
getEntry	pilas-engine/declaraciones/phaser.d.ts	/^            protected getEntry(key: string): Phaser.Types.Plugins.GlobalPlugin;$/;"	m
getEntryCount	pilas-engine/declaraciones/phaser.d.ts	/^        getEntryCount(): this;$/;"	m
getExtension	pilas-engine/declaraciones/phaser.d.ts	/^                getExtension(extensionName: string): object;$/;"	m
getFace	pilas-engine/declaraciones/phaser.d.ts	/^            getFace(index: number): Phaser.Geom.Mesh.Face;$/;"	m
getFaceAt	pilas-engine/declaraciones/phaser.d.ts	/^            getFaceAt(x: number, y: number, camera?: Phaser.Cameras.Scene2D.Camera): Phaser.Geom.Mesh.Face[];$/;"	m
getFaceCount	pilas-engine/declaraciones/phaser.d.ts	/^            getFaceCount(): number;$/;"	m
getFirst	pilas-engine/declaraciones/phaser.d.ts	/^            getFirst(property: string, value: any, startIndex?: number, endIndex?: number): Phaser.GameObjects.GameObject;$/;"	m
getFirst	pilas-engine/declaraciones/phaser.d.ts	/^            getFirst(property: string, value: any, startIndex?: number, endIndex?: number): T | null;$/;"	m
getFirst	pilas-engine/declaraciones/phaser.d.ts	/^            getFirst(state?: boolean, createIfNull?: boolean, x?: number, y?: number, key?: string, frame?: string | number, visible?: boolean): any;$/;"	m
getFirstAlive	pilas-engine/declaraciones/phaser.d.ts	/^            getFirstAlive(createIfNull?: boolean, x?: number, y?: number, key?: string, frame?: string | number, visible?: boolean): any;$/;"	m
getFirstDead	pilas-engine/declaraciones/phaser.d.ts	/^            getFirstDead(createIfNull?: boolean, x?: number, y?: number, key?: string, frame?: string | number, visible?: boolean): any;$/;"	m
getFirstNth	pilas-engine/declaraciones/phaser.d.ts	/^            getFirstNth(nth: number, state?: boolean, createIfNull?: boolean, x?: number, y?: number, key?: string, frame?: string | number, visible?: boolean): any;$/;"	m
getFirstTick	pilas-engine/declaraciones/phaser.d.ts	/^            protected getFirstTick(state: Phaser.Animations.AnimationState): void;$/;"	m
getFloatsFromUintRGB	pilas-engine/declaraciones/phaser.d.ts	/^                function getFloatsFromUintRGB(rgb: number): any[];$/;"	f
getFrame	pilas-engine/declaraciones/phaser.d.ts	/^                getFrame(): Phaser.Textures.Frame;$/;"	m
getFrame	pilas-engine/declaraciones/phaser.d.ts	/^            getFrame(key: string, frame?: string | number): Phaser.Textures.Frame;$/;"	m
getFrame	pilas-engine/declaraciones/phaser.d.ts	/^        getFrame(): number;$/;"	m
getFrameAt	pilas-engine/declaraciones/phaser.d.ts	/^            protected getFrameAt(index: number): Phaser.Animations.AnimationFrame;$/;"	m
getFrameByProgress	pilas-engine/declaraciones/phaser.d.ts	/^            getFrameByProgress(value: number): Phaser.Animations.AnimationFrame;$/;"	m
getFrameName	pilas-engine/declaraciones/phaser.d.ts	/^            getFrameName(): string;$/;"	m
getFrameNames	pilas-engine/declaraciones/phaser.d.ts	/^            getFrameNames(includeBase?: boolean): string[];$/;"	m
getFrames	pilas-engine/declaraciones/phaser.d.ts	/^            getFrames(textureManager: Phaser.Textures.TextureManager, frames: string | Phaser.Types.Animations.AnimationFrame[], defaultTextureKey?: string): Phaser.Animations.AnimationFrame[];$/;"	m
getFramesFromTextureSource	pilas-engine/declaraciones/phaser.d.ts	/^            getFramesFromTextureSource(sourceIndex: number, includeBase?: boolean): Phaser.Textures.Frame[];$/;"	m
getFullscreenTarget	pilas-engine/declaraciones/phaser.d.ts	/^            getFullscreenTarget(): object;$/;"	m
getGlobalTimeScale	pilas-engine/declaraciones/phaser.d.ts	/^            getGlobalTimeScale(): number;$/;"	m
getID	pilas-engine/declaraciones/phaser.d.ts	/^        getID(): string;$/;"	m
getImageIndex	pilas-engine/declaraciones/phaser.d.ts	/^            getImageIndex(name: string): number;$/;"	m
getImageLayerNames	pilas-engine/declaraciones/phaser.d.ts	/^            getImageLayerNames(): string[];$/;"	m
getInCenter	pilas-engine/declaraciones/phaser.d.ts	/^                getInCenter(local?: boolean): Phaser.Math.Vector2;$/;"	m
getIndex	pilas-engine/declaraciones/phaser.d.ts	/^            getIndex(child: Phaser.GameObjects.GameObject): number;$/;"	m
getIndex	pilas-engine/declaraciones/phaser.d.ts	/^            getIndex(child: T): number;$/;"	m
getIndex	pilas-engine/declaraciones/phaser.d.ts	/^            getIndex(key: string | Phaser.Scene): number;$/;"	m
getIndex	pilas-engine/declaraciones/phaser.d.ts	/^            getIndex(key?: string | Phaser.Scene): number;$/;"	m
getIndex	pilas-engine/declaraciones/phaser.d.ts	/^            getIndex(location: any[], name: string): number;$/;"	m
getIndex	pilas-engine/declaraciones/phaser.d.ts	/^            getIndex(x: number, y: number): number;$/;"	m
getIndex	pilas-engine/declaraciones/phaser.d.ts	/^            protected getIndex(key: string): number;$/;"	m
getIndexList	pilas-engine/declaraciones/phaser.d.ts	/^            getIndexList(): number[];$/;"	m
getInterpolatedPosition	pilas-engine/declaraciones/phaser.d.ts	/^            getInterpolatedPosition(steps?: number, out?: any[]): any[];$/;"	m
getInverse	pilas-engine/declaraciones/phaser.d.ts	/^            getInverse(m: Phaser.Math.Matrix4): this;$/;"	m
getKeys	pilas-engine/declaraciones/phaser.d.ts	/^            getKeys(): string[];$/;"	m
getLast	pilas-engine/declaraciones/phaser.d.ts	/^            getLast(state?: boolean, createIfNull?: boolean, x?: number, y?: number, key?: string, frame?: string | number, visible?: boolean): any;$/;"	m
getLastFrame	pilas-engine/declaraciones/phaser.d.ts	/^            getLastFrame(): Phaser.Animations.AnimationFrame;$/;"	m
getLastNth	pilas-engine/declaraciones/phaser.d.ts	/^            getLastNth(nth: number, state?: boolean, createIfNull?: boolean, x?: number, y?: number, key?: string, frame?: string | number, visible?: boolean): any;$/;"	m
getLayer	pilas-engine/declaraciones/phaser.d.ts	/^            getLayer(layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Tilemaps.LayerData;$/;"	m
getLayerIndex	pilas-engine/declaraciones/phaser.d.ts	/^            getLayerIndex(layer?: string | number | Phaser.Tilemaps.TilemapLayer): number;$/;"	m
getLayerIndexByName	pilas-engine/declaraciones/phaser.d.ts	/^            getLayerIndexByName(name: string): number;$/;"	m
getLeaderboard	pilas-engine/declaraciones/phaser.d.ts	/^        getLeaderboard(name: string): this;$/;"	m
getLeft	pilas-engine/declaraciones/phaser.d.ts	/^            getLeft(camera?: Phaser.Cameras.Scene2D.Camera): number;$/;"	m
getLeftCenter	pilas-engine/declaraciones/phaser.d.ts	/^                getLeftCenter(body: Phaser.Types.Physics.Matter.MatterBody, x?: number, y?: number): Phaser.Math.Vector2 | false;$/;"	m
getLength	pilas-engine/declaraciones/phaser.d.ts	/^            getLength(): number;$/;"	m
getLengths	pilas-engine/declaraciones/phaser.d.ts	/^            getLengths(divisions?: number): number[];$/;"	m
getLightCount	pilas-engine/declaraciones/phaser.d.ts	/^            getLightCount(): number;$/;"	m
getLights	pilas-engine/declaraciones/phaser.d.ts	/^            getLights(camera: Phaser.Cameras.Scene2D.Camera): Phaser.GameObjects.Light[];$/;"	m
getLocalPoint	pilas-engine/declaraciones/phaser.d.ts	/^                getLocalPoint(x: number, y: number, point?: Phaser.Math.Vector2, camera?: Phaser.Cameras.Scene2D.Camera): Phaser.Math.Vector2;$/;"	m
getLocalPoint	pilas-engine/declaraciones/phaser.d.ts	/^            getLocalPoint(x: number, y: number, point?: Phaser.Math.Vector2, camera?: Phaser.Cameras.Scene2D.Camera): Phaser.Math.Vector2;$/;"	m
getLocalTransformMatrix	pilas-engine/declaraciones/phaser.d.ts	/^                getLocalTransformMatrix(tempMatrix?: Phaser.GameObjects.Components.TransformMatrix): Phaser.GameObjects.Components.TransformMatrix;$/;"	m
getLocalTransformMatrix	pilas-engine/declaraciones/phaser.d.ts	/^            getLocalTransformMatrix(tempMatrix?: Phaser.GameObjects.Components.TransformMatrix): Phaser.GameObjects.Components.TransformMatrix;$/;"	m
getLocale	pilas-engine/declaraciones/phaser.d.ts	/^        getLocale(): string;$/;"	m
getLoop	pilas-engine/declaraciones/phaser.d.ts	/^            getLoop(): boolean;$/;"	m
getMajorRadius	pilas-engine/declaraciones/phaser.d.ts	/^            getMajorRadius(): number;$/;"	m
getMatching	pilas-engine/declaraciones/phaser.d.ts	/^            getMatching(property?: string, value?: any, startIndex?: number, endIndex?: number): any[];$/;"	m
getMatterBodies	pilas-engine/declaraciones/phaser.d.ts	/^                getMatterBodies(bodies?: any[]): MatterJS.BodyType[];$/;"	m
getMaxScaleOnAxis	pilas-engine/declaraciones/phaser.d.ts	/^            getMaxScaleOnAxis(): number;$/;"	m
getMaxTextureSize	pilas-engine/declaraciones/phaser.d.ts	/^                getMaxTextureSize(): number;$/;"	m
getMaxVisibleLights	pilas-engine/declaraciones/phaser.d.ts	/^            getMaxVisibleLights(): number;$/;"	m
getMaxZoom	pilas-engine/declaraciones/phaser.d.ts	/^            getMaxZoom(): number;$/;"	m
getMinorRadius	pilas-engine/declaraciones/phaser.d.ts	/^            getMinorRadius(): number;$/;"	m
getMix	pilas-engine/declaraciones/phaser.d.ts	/^            getMix(animA: string | Phaser.Animations.Animation, animB: string | Phaser.Animations.Animation): number;$/;"	m
getName	pilas-engine/declaraciones/phaser.d.ts	/^            getName(): string;$/;"	m
getNewHeight	pilas-engine/declaraciones/phaser.d.ts	/^            getNewHeight(value: number, checkParent?: boolean): number;$/;"	m
getNewWidth	pilas-engine/declaraciones/phaser.d.ts	/^            getNewWidth(value: number, checkParent?: boolean): number;$/;"	m
getNextTick	pilas-engine/declaraciones/phaser.d.ts	/^            getNextTick(state: Phaser.Animations.AnimationState): void;$/;"	m
getNormalMap	pilas-engine/declaraciones/phaser.d.ts	/^                    getNormalMap(gameObject?: Phaser.GameObjects.GameObject): WebGLTexture;$/;"	m
getObjectLayer	pilas-engine/declaraciones/phaser.d.ts	/^            getObjectLayer(name?: string): Phaser.Tilemaps.ObjectLayer;$/;"	m
getObjectLayerNames	pilas-engine/declaraciones/phaser.d.ts	/^            getObjectLayerNames(): string[];$/;"	m
getOverallProgress	pilas-engine/declaraciones/phaser.d.ts	/^            getOverallProgress(): number;$/;"	m
getOverallRemaining	pilas-engine/declaraciones/phaser.d.ts	/^            getOverallRemaining(): number;$/;"	m
getOverallRemainingSeconds	pilas-engine/declaraciones/phaser.d.ts	/^            getOverallRemainingSeconds(): number;$/;"	m
getPad	pilas-engine/declaraciones/phaser.d.ts	/^                getPad(index: number): Phaser.Input.Gamepad.Gamepad;$/;"	m
getParent	pilas-engine/declaraciones/phaser.d.ts	/^            getParent(config: Phaser.Types.Core.GameConfig): void;$/;"	m
getParentBounds	pilas-engine/declaraciones/phaser.d.ts	/^            getParentBounds(): boolean;$/;"	m
getParentRotation	pilas-engine/declaraciones/phaser.d.ts	/^                getParentRotation(): number;$/;"	m
getParentRotation	pilas-engine/declaraciones/phaser.d.ts	/^            getParentRotation(): number;$/;"	m
getParticleCount	pilas-engine/declaraciones/phaser.d.ts	/^                getParticleCount(): number;$/;"	m
getPipelineName	pilas-engine/declaraciones/phaser.d.ts	/^                getPipelineName(): string;$/;"	m
getPipelineName	pilas-engine/declaraciones/phaser.d.ts	/^            getPipelineName(): string;$/;"	m
getPixel	pilas-engine/declaraciones/phaser.d.ts	/^            getPixel(x: number, y: number, key: string, frame?: string | number): Phaser.Display.Color;$/;"	m
getPixel	pilas-engine/declaraciones/phaser.d.ts	/^            getPixel(x: number, y: number, out?: Phaser.Display.Color): Phaser.Display.Color;$/;"	m
getPixelAlpha	pilas-engine/declaraciones/phaser.d.ts	/^            getPixelAlpha(x: number, y: number, key: string, frame?: string | number): number;$/;"	m
getPixels	pilas-engine/declaraciones/phaser.d.ts	/^            getPixels(x?: number, y?: number, width?: number, height?: number): Phaser.Types.Textures.PixelConfig[][];$/;"	m
getPlatform	pilas-engine/declaraciones/phaser.d.ts	/^        getPlatform(): string;$/;"	m
getPlaybackRate	pilas-engine/declaraciones/phaser.d.ts	/^            getPlaybackRate(): number;$/;"	m
getPlayerID	pilas-engine/declaraciones/phaser.d.ts	/^        getPlayerID(): string;$/;"	m
getPlayerName	pilas-engine/declaraciones/phaser.d.ts	/^        getPlayerName(): string;$/;"	m
getPlayerPhotoURL	pilas-engine/declaraciones/phaser.d.ts	/^        getPlayerPhotoURL(): string;$/;"	m
getPlayerScore	pilas-engine/declaraciones/phaser.d.ts	/^        getPlayerScore(): this;$/;"	m
getPlayers	pilas-engine/declaraciones/phaser.d.ts	/^        getPlayers(): this;$/;"	m
getPlugin	pilas-engine/declaraciones/phaser.d.ts	/^            function getPlugin(key: string): Phaser.Types.Input.InputPluginContainer;$/;"	f
getPoint	pilas-engine/declaraciones/phaser.d.ts	/^                    getPoint(particle: Phaser.GameObjects.Particles.Particle): void;$/;"	m
getPoints	pilas-engine/declaraciones/phaser.d.ts	/^                    getPoints: Phaser.Types.GameObjects.Particles.EdgeZoneSourceCallback;$/;"	m
getPoints	pilas-engine/declaraciones/phaser.d.ts	/^            getPoints(divisions?: number): Phaser.Math.Vector2[];$/;"	m
getPostPipeline	pilas-engine/declaraciones/phaser.d.ts	/^                getPostPipeline(pipeline: string | Function | Phaser.Renderer.WebGL.Pipelines.PostFXPipeline): Phaser.Renderer.WebGL.Pipelines.PostFXPipeline | Phaser.Renderer.WebGL.Pipelines.PostFXPipeline[];$/;"	m
getPostPipeline	pilas-engine/declaraciones/phaser.d.ts	/^                getPostPipeline(pipeline: string | Function | Phaser.Renderer.WebGL.Pipelines.PostFXPipeline, gameObject?: Phaser.GameObjects.GameObject): Phaser.Renderer.WebGL.Pipelines.PostFXPipeline;$/;"	m
getPostPipeline	pilas-engine/declaraciones/phaser.d.ts	/^            getPostPipeline(pipeline: string | Function | Phaser.Renderer.WebGL.Pipelines.PostFXPipeline): Phaser.Renderer.WebGL.Pipelines.PostFXPipeline | Phaser.Renderer.WebGL.Pipelines.PostFXPipeline[];$/;"	m
getPrefix	pilas-engine/declaraciones/phaser.d.ts	/^                function getPrefix(context: CanvasRenderingContext2D | WebGLRenderingContext): string;$/;"	f
getProcessors	pilas-engine/declaraciones/phaser.d.ts	/^                getProcessors(): Phaser.GameObjects.Particles.GravityWell[];$/;"	m
getProduct	pilas-engine/declaraciones/phaser.d.ts	/^        getProduct(productID: string): Product;$/;"	m
getProgress	pilas-engine/declaraciones/phaser.d.ts	/^            getProgress(): number;$/;"	m
getPurchases	pilas-engine/declaraciones/phaser.d.ts	/^        getPurchases(): this;$/;"	m
getRandom	pilas-engine/declaraciones/phaser.d.ts	/^            getRandom(startIndex?: number, length?: number): Phaser.GameObjects.GameObject;$/;"	m
getRandom	pilas-engine/declaraciones/phaser.d.ts	/^            getRandom(startIndex?: number, length?: number): T | null;$/;"	m
getRandomPoint	pilas-engine/declaraciones/phaser.d.ts	/^                    getRandomPoint: Phaser.Types.GameObjects.Particles.RandomZoneSourceCallback;$/;"	m
getRelativeOffset	pilas-engine/declaraciones/phaser.d.ts	/^            getRelativeOffset(value: string, base: number): number;$/;"	m
getRemaining	pilas-engine/declaraciones/phaser.d.ts	/^            getRemaining(): number;$/;"	m
getRemainingSeconds	pilas-engine/declaraciones/phaser.d.ts	/^            getRemainingSeconds(): number;$/;"	m
getRenderList	pilas-engine/declaraciones/phaser.d.ts	/^            getRenderList(): Phaser.GameObjects.Bob[];$/;"	m
getRepeatCount	pilas-engine/declaraciones/phaser.d.ts	/^            getRepeatCount(): number;$/;"	m
getResolution	pilas-engine/declaraciones/phaser.d.ts	/^            getResolution(): number;$/;"	m
getResolution	pilas-engine/declaraciones/phaser.d.ts	/^            getResolution(divisions: number): number;$/;"	m
getResolution	pilas-engine/declaraciones/phaser.d.ts	/^            getResolution(divisions?: number): number;$/;"	m
getRight	pilas-engine/declaraciones/phaser.d.ts	/^            getRight(camera?: Phaser.Cameras.Scene2D.Camera): number;$/;"	m
getRightCenter	pilas-engine/declaraciones/phaser.d.ts	/^                getRightCenter(body: Phaser.Types.Physics.Matter.MatterBody, x?: number, y?: number): Phaser.Math.Vector2 | false;$/;"	m
getSDKVersion	pilas-engine/declaraciones/phaser.d.ts	/^        getSDKVersion(): string;$/;"	m
getScene	pilas-engine/declaraciones/phaser.d.ts	/^            getScene(key: string | Phaser.Scene): Phaser.Scene;$/;"	m
getScenes	pilas-engine/declaraciones/phaser.d.ts	/^            getScenes(isActive?: boolean, inReverse?: boolean): Phaser.Scene[];$/;"	m
getScores	pilas-engine/declaraciones/phaser.d.ts	/^        getScores(count?: integer, offset?: integer): this;$/;"	m
getScroll	pilas-engine/declaraciones/phaser.d.ts	/^                getScroll(x: number, y: number, out?: Phaser.Math.Vector2): Phaser.Math.Vector2;$/;"	m
getShaderByName	pilas-engine/declaraciones/phaser.d.ts	/^                getShaderByName(name: string): Phaser.Renderer.WebGL.WebGLShader;$/;"	m
getShaderName	pilas-engine/declaraciones/phaser.d.ts	/^                getShaderName(headerSource: string[]): string;$/;"	m
getShaderType	pilas-engine/declaraciones/phaser.d.ts	/^                getShaderType(headerSource: string[]): string;$/;"	m
getShaderUniforms	pilas-engine/declaraciones/phaser.d.ts	/^                getShaderUniforms(headerSource: string[]): any;$/;"	m
getSourceImage	pilas-engine/declaraciones/phaser.d.ts	/^            getSourceImage(name?: string | number): HTMLImageElement | HTMLCanvasElement | Phaser.GameObjects.RenderTexture;$/;"	m
getSpacedPoints	pilas-engine/declaraciones/phaser.d.ts	/^            getSpacedPoints(divisions?: number): Phaser.Math.Vector2[];$/;"	m
getSpacedPoints	pilas-engine/declaraciones/phaser.d.ts	/^            getSpacedPoints(divisions?: number, stepRate?: number, out?: any[] | Phaser.Math.Vector2[]): Phaser.Math.Vector2[];$/;"	m
getStartValue	pilas-engine/declaraciones/phaser.d.ts	/^                getStartValue: Phaser.Types.Tweens.GetStartCallback;$/;"	m
getStats	pilas-engine/declaraciones/phaser.d.ts	/^        getStats(keys?: string[]): this;$/;"	m
getTFromDistance	pilas-engine/declaraciones/phaser.d.ts	/^            getTFromDistance(distance: number, divisions?: number): number;$/;"	m
getTextBounds	pilas-engine/declaraciones/phaser.d.ts	/^            getTextBounds(round?: boolean): Phaser.Types.GameObjects.BitmapText.BitmapTextSize;$/;"	m
getTextMetrics	pilas-engine/declaraciones/phaser.d.ts	/^            getTextMetrics(): Phaser.Types.GameObjects.Text.TextMetrics;$/;"	m
getTextureKeys	pilas-engine/declaraciones/phaser.d.ts	/^            getTextureKeys(): string[];$/;"	m
getTextureSourceIndex	pilas-engine/declaraciones/phaser.d.ts	/^            getTextureSourceIndex(source: Phaser.Textures.TextureSource): number;$/;"	m
getTileAt	pilas-engine/declaraciones/phaser.d.ts	/^            getTileAt(tileX: number, tileY: number, nonNull?: boolean): Phaser.Tilemaps.Tile;$/;"	m
getTileAt	pilas-engine/declaraciones/phaser.d.ts	/^            getTileAt(tileX: number, tileY: number, nonNull?: boolean, layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Tilemaps.Tile;$/;"	m
getTileAtWorldXY	pilas-engine/declaraciones/phaser.d.ts	/^            getTileAtWorldXY(worldX: number, worldY: number, nonNull?: boolean, camera?: Phaser.Cameras.Scene2D.Camera): Phaser.Tilemaps.Tile;$/;"	m
getTileAtWorldXY	pilas-engine/declaraciones/phaser.d.ts	/^            getTileAtWorldXY(worldX: number, worldY: number, nonNull?: boolean, camera?: Phaser.Cameras.Scene2D.Camera, layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Tilemaps.Tile;$/;"	m
getTileCollisionGroup	pilas-engine/declaraciones/phaser.d.ts	/^            getTileCollisionGroup(tileIndex: number): object;$/;"	m
getTileData	pilas-engine/declaraciones/phaser.d.ts	/^            getTileData(): object;$/;"	m
getTileData	pilas-engine/declaraciones/phaser.d.ts	/^            getTileData(tileIndex: number): object | undefined;$/;"	m
getTileLayerNames	pilas-engine/declaraciones/phaser.d.ts	/^            getTileLayerNames(): string[];$/;"	m
getTileProperties	pilas-engine/declaraciones/phaser.d.ts	/^            getTileProperties(tileIndex: number): object | undefined;$/;"	m
getTileTextureCoordinates	pilas-engine/declaraciones/phaser.d.ts	/^            getTileTextureCoordinates(tileIndex: number): object;$/;"	m
getTilesWithin	pilas-engine/declaraciones/phaser.d.ts	/^            getTilesWithin(tileX?: number, tileY?: number, width?: number, height?: number, filteringOptions?: Phaser.Types.Tilemaps.FilteringOptions): Phaser.Tilemaps.Tile[];$/;"	m
getTilesWithin	pilas-engine/declaraciones/phaser.d.ts	/^            getTilesWithin(tileX?: number, tileY?: number, width?: number, height?: number, filteringOptions?: Phaser.Types.Tilemaps.FilteringOptions, layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Tilemaps.Tile[];$/;"	m
getTilesWithinShape	pilas-engine/declaraciones/phaser.d.ts	/^            getTilesWithinShape(shape: Phaser.Geom.Circle | Phaser.Geom.Line | Phaser.Geom.Rectangle | Phaser.Geom.Triangle, filteringOptions?: Phaser.Types.Tilemaps.FilteringOptions, camera?: Phaser.Cameras.Scene2D.Camera): Phaser.Tilemaps.Tile[];$/;"	m
getTilesWithinShape	pilas-engine/declaraciones/phaser.d.ts	/^            getTilesWithinShape(shape: Phaser.Geom.Circle | Phaser.Geom.Line | Phaser.Geom.Rectangle | Phaser.Geom.Triangle, filteringOptions?: Phaser.Types.Tilemaps.FilteringOptions, camera?: Phaser.Cameras.Scene2D.Camera, layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Tilemaps.Tile[];$/;"	m
getTilesWithinWorldXY	pilas-engine/declaraciones/phaser.d.ts	/^            getTilesWithinWorldXY(worldX: number, worldY: number, width: number, height: number, filteringOptions?: Phaser.Types.Tilemaps.FilteringOptions, camera?: Phaser.Cameras.Scene2D.Camera): Phaser.Tilemaps.Tile[];$/;"	m
getTilesWithinWorldXY	pilas-engine/declaraciones/phaser.d.ts	/^            getTilesWithinWorldXY(worldX: number, worldY: number, width: number, height: number, filteringOptions?: Phaser.Types.Tilemaps.FilteringOptions, camera?: Phaser.Cameras.Scene2D.Camera, layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Tilemaps.Tile[];$/;"	m
getTileset	pilas-engine/declaraciones/phaser.d.ts	/^            getTileset(name: string): Phaser.Tilemaps.Tileset;$/;"	m
getTilesetIndex	pilas-engine/declaraciones/phaser.d.ts	/^            getTilesetIndex(name: string): number;$/;"	m
getTime	pilas-engine/declaraciones/phaser.d.ts	/^        getTime(): number;$/;"	m
getTime	pilas-engine/libs/spriter.ts	/^  getTime(): number {$/;"	m
getTimeScale	pilas-engine/declaraciones/phaser.d.ts	/^            getTimeScale(): number;$/;"	m
getTintAppendFloatAlpha	pilas-engine/declaraciones/phaser.d.ts	/^                function getTintAppendFloatAlpha(rgb: number, a: number): number;$/;"	f
getTintAppendFloatAlphaAndSwap	pilas-engine/declaraciones/phaser.d.ts	/^                function getTintAppendFloatAlphaAndSwap(rgb: number, a: number): number;$/;"	f
getTintFromFloats	pilas-engine/declaraciones/phaser.d.ts	/^                function getTintFromFloats(r: number, g: number, b: number, a: number): number;$/;"	f
getTop	pilas-engine/declaraciones/phaser.d.ts	/^            getTop(camera?: Phaser.Cameras.Scene2D.Camera): number;$/;"	m
getTopCenter	pilas-engine/declaraciones/phaser.d.ts	/^                getTopCenter(body: Phaser.Types.Physics.Matter.MatterBody, x?: number, y?: number): Phaser.Math.Vector2 | false;$/;"	m
getTopLeft	pilas-engine/declaraciones/phaser.d.ts	/^                getTopLeft(body: Phaser.Types.Physics.Matter.MatterBody, x?: number, y?: number): Phaser.Math.Vector2 | false;$/;"	m
getTopRight	pilas-engine/declaraciones/phaser.d.ts	/^                getTopRight(body: Phaser.Types.Physics.Matter.MatterBody, x?: number, y?: number): Phaser.Math.Vector2 | false;$/;"	m
getTotal	pilas-engine/declaraciones/phaser.d.ts	/^                getTotal(isVisible?: boolean): number;$/;"	m
getTotalFrames	pilas-engine/declaraciones/phaser.d.ts	/^            getTotalFrames(): number;$/;"	m
getTotalFree	pilas-engine/declaraciones/phaser.d.ts	/^            getTotalFree(): number;$/;"	m
getTotalUsed	pilas-engine/declaraciones/phaser.d.ts	/^            getTotalUsed(): number;$/;"	m
getTweensOf	pilas-engine/declaraciones/phaser.d.ts	/^            getTweensOf(target: object | any[], includePending?: boolean): Phaser.Tweens.Tween[];$/;"	m
getType	pilas-engine/declaraciones/phaser.d.ts	/^        getType(): string;$/;"	m
getTypeIncludingTile	pilas-engine/declaraciones/phaser.d.ts	/^            getTypeIncludingTile(obj: Phaser.Types.Tilemaps.TiledObject): string;$/;"	m
getUniform	pilas-engine/declaraciones/phaser.d.ts	/^            getUniform(key: string): any;$/;"	m
getUserMedia	pilas-engine/declaraciones/phaser.d.ts	/^            getUserMedia: boolean;$/;"	m
getUtoTmapping	pilas-engine/declaraciones/phaser.d.ts	/^            getUtoTmapping(u: number, distance: number, divisions?: number): number;$/;"	m
getValue	pilas-engine/declaraciones/phaser.d.ts	/^                getValue(): number;$/;"	m
getValue	pilas-engine/declaraciones/phaser.d.ts	/^            getValue(index?: number): number;$/;"	m
getVertexCount	pilas-engine/declaraciones/phaser.d.ts	/^            getVertexCount(): number;$/;"	m
getVideoKey	pilas-engine/declaraciones/phaser.d.ts	/^            getVideoKey(): string;$/;"	m
getViewPort	pilas-engine/declaraciones/phaser.d.ts	/^            getViewPort(out?: Phaser.Geom.Rectangle): Phaser.Geom.Rectangle;$/;"	m
getVisibleChildren	pilas-engine/declaraciones/phaser.d.ts	/^                getVisibleChildren(children: Phaser.GameObjects.GameObject[], camera: Phaser.Cameras.Scene2D.Camera): Phaser.GameObjects.GameObject[];$/;"	m
getVolume	pilas-engine/declaraciones/phaser.d.ts	/^            getVolume(): number;$/;"	m
getWorldTransformMatrix	pilas-engine/declaraciones/phaser.d.ts	/^                getWorldTransformMatrix(tempMatrix?: Phaser.GameObjects.Components.TransformMatrix, parentMatrix?: Phaser.GameObjects.Components.TransformMatrix): Phaser.GameObjects.Components.TransformMatrix;$/;"	m
getWorldTransformMatrix	pilas-engine/declaraciones/phaser.d.ts	/^            getWorldTransformMatrix(tempMatrix?: Phaser.GameObjects.Components.TransformMatrix, parentMatrix?: Phaser.GameObjects.Components.TransformMatrix): Phaser.GameObjects.Components.TransformMatrix;$/;"	m
getWrappedText	pilas-engine/declaraciones/phaser.d.ts	/^            getWrappedText(text: string): string[];$/;"	m
getX	pilas-engine/declaraciones/phaser.d.ts	/^                getX(x: number, y: number): number;$/;"	m
getXRound	pilas-engine/declaraciones/phaser.d.ts	/^                getXRound(x: number, y: number, round?: boolean): number;$/;"	m
getY	pilas-engine/declaraciones/phaser.d.ts	/^                getY(x: number, y: number): number;$/;"	m
getYRound	pilas-engine/declaraciones/phaser.d.ts	/^                getYRound(x: number, y: number, round?: boolean): number;$/;"	m
gid	pilas-engine/declaraciones/phaser.d.ts	/^                gid: number;$/;"	m
gidMap	pilas-engine/declaraciones/phaser.d.ts	/^            gidMap: Phaser.Tilemaps.Tileset[];$/;"	m
gids	pilas-engine/declaraciones/phaser.d.ts	/^            gids: any[];$/;"	m
gl	pilas-engine/declaraciones/phaser.d.ts	/^                gl: WebGLRenderingContext;$/;"	m
gl	pilas-engine/declaraciones/phaser.d.ts	/^            gl: WebGLRenderingContext;$/;"	m
gl	pilas-engine/declaraciones/phaser.d.ts	/^            gl: number[];$/;"	m
glFormats	pilas-engine/declaraciones/phaser.d.ts	/^                glFormats: any[];$/;"	m
glFuncMap	pilas-engine/declaraciones/phaser.d.ts	/^                glFuncMap: any;$/;"	m
glIndex	pilas-engine/declaraciones/phaser.d.ts	/^            glIndex: number;$/;"	m
glIndexCounter	pilas-engine/declaraciones/phaser.d.ts	/^            glIndexCounter: number;$/;"	m
glReset	pilas-engine/declaraciones/phaser.d.ts	/^                glReset: boolean;$/;"	m
glTexture	pilas-engine/declaraciones/phaser.d.ts	/^            glTexture: WebGLTexture;$/;"	m
glTexture	pilas-engine/declaraciones/phaser.d.ts	/^            readonly glTexture: WebGLTexture;$/;"	m
global	pilas-engine/declaraciones/phaser.d.ts	/^                    global: Phaser.Types.GameObjects.BitmapText.GlobalBitmapTextSize;$/;"	m
global	pilas-engine/pilas.ts	/^        global: [NineSlice.Plugin.DefaultCfg]$/;"	m
globalAlpha	pilas-engine/declaraciones/phaser.d.ts	/^            globalAlpha: number;$/;"	m
globalRemove	pilas-engine/declaraciones/phaser.d.ts	/^            globalRemove(key?: string, animation?: Phaser.Animations.Animation): void;$/;"	m
globalTimeScale	pilas-engine/declaraciones/phaser.d.ts	/^                globalTimeScale: number;$/;"	m
globalTimeScale	pilas-engine/declaraciones/phaser.d.ts	/^            globalTimeScale: number;$/;"	m
globalTint	pilas-engine/declaraciones/phaser.d.ts	/^            globalTint: number;$/;"	m
globalTopOnly	pilas-engine/declaraciones/phaser.d.ts	/^            globalTopOnly: boolean;$/;"	m
glsl	pilas-engine/declaraciones/phaser.d.ts	/^            glsl(key: string | Phaser.Types.Loader.FileTypes.GLSLFileConfig | Phaser.Types.Loader.FileTypes.GLSLFileConfig[], url?: string, shaderType?: string, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject): this;$/;"	m
glyph	pilas-engine/declaraciones/phaser.d.ts	/^                    glyph: Phaser.Types.GameObjects.BitmapText.BitmapFontCharacterData;$/;"	m
golpe	pilas-engine/actores/golpe.ts	/^class golpe extends Actor {$/;"	c
graphics	pilas-engine/declaraciones/phaser.d.ts	/^            graphics(config: Phaser.Types.GameObjects.Graphics.Options, addToScene?: boolean): Phaser.GameObjects.Graphics;$/;"	m
graphics	pilas-engine/declaraciones/phaser.d.ts	/^            graphics(config?: Phaser.Types.GameObjects.Graphics.Options): Phaser.GameObjects.Graphics;$/;"	m
graphics	pilas-engine/modos/modo.ts	/^  graphics: any;$/;"	m
graphics	pilas-engine/modos/modo_ejecucion.ts	/^  graphics: any;$/;"	m
graphics_modo_pausa	pilas-engine/modos/modo_pausa.ts	/^  graphics_modo_pausa: any;$/;"	m
gravedad_x	pilas-engine/escenas/-escena-base.ts	/^  get gravedad_x() {$/;"	m
gravedad_x	pilas-engine/escenas/-escena-base.ts	/^  set gravedad_x(v: number) {$/;"	m
gravedad_x	pilas-engine/fisica.ts	/^  get gravedad_x() {$/;"	m
gravedad_x	pilas-engine/fisica.ts	/^  set gravedad_x(v: number) {$/;"	m
gravedad_y	pilas-engine/escenas/-escena-base.ts	/^  get gravedad_y() {$/;"	m
gravedad_y	pilas-engine/escenas/-escena-base.ts	/^  set gravedad_y(v: number) {$/;"	m
gravedad_y	pilas-engine/fisica.ts	/^  get gravedad_y() {$/;"	m
gravedad_y	pilas-engine/fisica.ts	/^  set gravedad_y(v: number) {$/;"	m
gravity	pilas-engine/declaraciones/phaser.d.ts	/^                gravity: Phaser.Math.Vector2;$/;"	m
gravity	pilas-engine/declaraciones/phaser.d.ts	/^                readonly gravity: Phaser.Math.Vector2;$/;"	m
gravityX	pilas-engine/declaraciones/phaser.d.ts	/^                gravityX: number;$/;"	m
gravityY	pilas-engine/declaraciones/phaser.d.ts	/^                gravityY: number;$/;"	m
gray	pilas-engine/declaraciones/phaser.d.ts	/^            gray(shade: number): Phaser.Display.Color;$/;"	m
grayscale	pilas-engine/declaraciones/phaser.d.ts	/^            grayscale(value?: number, multiply?: boolean): this;$/;"	m
green	pilas-engine/declaraciones/phaser.d.ts	/^            green: number;$/;"	m
greenGL	pilas-engine/declaraciones/phaser.d.ts	/^            greenGL: number;$/;"	m
grid	pilas-engine/declaraciones/phaser.d.ts	/^                grid: MatterJS.GridFactory;$/;"	m
grid	pilas-engine/declaraciones/phaser.d.ts	/^            grid(x?: number, y?: number, width?: number, height?: number, cellWidth?: number, cellHeight?: number, fillColor?: number, fillAlpha?: number, outlineFillColor?: number, outlineFillAlpha?: number): Phaser.GameObjects.Grid;$/;"	m
group	pilas-engine/declaraciones/phaser.d.ts	/^                    group: string;$/;"	m
group	pilas-engine/declaraciones/phaser.d.ts	/^                group(children?: Phaser.GameObjects.GameObject[] | Phaser.Types.Physics.Arcade.PhysicsGroupConfig | Phaser.Types.GameObjects.Group.GroupCreateConfig, config?: Phaser.Types.Physics.Arcade.PhysicsGroupConfig | Phaser.Types.GameObjects.Group.GroupCreateConfig): Phaser.Physics.Arcade.Group;$/;"	m
group	pilas-engine/declaraciones/phaser.d.ts	/^            group(children?: Phaser.GameObjects.GameObject[] | Phaser.Types.GameObjects.Group.GroupConfig | Phaser.Types.GameObjects.Group.GroupConfig[], config?: Phaser.Types.GameObjects.Group.GroupConfig | Phaser.Types.GameObjects.Group.GroupCreateConfig): Phaser.GameObjects.Group;$/;"	m
group	pilas-engine/declaraciones/phaser.d.ts	/^            group(config: Phaser.Types.GameObjects.Group.GroupConfig | Phaser.Types.GameObjects.Group.GroupCreateConfig): Phaser.GameObjects.Group;$/;"	m
guardar_foto_de_entidades	pilas-engine/modos/modo_ejecucion.ts	/^  guardar_foto_de_entidades() {$/;"	m
guardar_foto_de_entidades	pilas-engine/modos/modo_error.ts	/^  guardar_foto_de_entidades() {}$/;"	m
guardar_parametros_en_atributos	pilas-engine/modos/modo_ejecucion.ts	/^  guardar_parametros_en_atributos(datos: any) {$/;"	m
h	pilas-engine/declaraciones/phaser.d.ts	/^                    h: number;$/;"	m
h	pilas-engine/declaraciones/phaser.d.ts	/^                h: number;$/;"	m
h	pilas-engine/declaraciones/phaser.d.ts	/^            h: number;$/;"	m
h	pilas-engine/libs/spriter.ts	/^  h: number = 0;$/;"	m
h264	pilas-engine/declaraciones/phaser.d.ts	/^            h264: boolean;$/;"	m
habilidad	pilas-engine/habilidades.ts	/^        habilidad: h$/;"	m
habilidades	pilas-engine/pilas.ts	/^  habilidades: Habilidades;$/;"	m
habilitado	pilas-engine/actores/boton_activable.ts	/^  habilitado: boolean = true;$/;"	m
habilitar	pilas-engine/actores/boton_activable.ts	/^  habilitar() {$/;"	m
hacer	pilas-engine/actores/-actor-base.ts	/^  hacer(nombre_del_comportamiento, argumentos: any = undefined) {$/;"	m
hacer_arratrable_el_fondo	pilas-engine/modos/modo_pausa.ts	/^  hacer_arratrable_el_fondo() {$/;"	m
hacer_inmediatamente	pilas-engine/actores/-actor-base.ts	/^  hacer_inmediatamente(nombre_del_comportamiento, argumentos: any = undefined) {$/;"	m
hacer_interactivo	pilas-engine/modos/actor_en_modo_edicion.ts	/^  private hacer_interactivo() {$/;"	m
hacer_que_el_fondo_se_pueda_arrastrar	pilas-engine/modos/modo_deprecated.ts	/^  hacer_que_el_fondo_se_pueda_arrastrar() {$/;"	m
hacer_recorrido	pilas-engine/actores/-actor-base.ts	/^  hacer_recorrido(posiciones, duracion = 1, veces = 1, seguir_rotacion = false) {$/;"	m
halfFrame1	pilas-engine/declaraciones/phaser.d.ts	/^                    halfFrame1: Phaser.Renderer.WebGL.RenderTarget;$/;"	m
halfFrame1	pilas-engine/declaraciones/phaser.d.ts	/^                halfFrame1: Phaser.Renderer.WebGL.RenderTarget;$/;"	m
halfFrame2	pilas-engine/declaraciones/phaser.d.ts	/^                    halfFrame2: Phaser.Renderer.WebGL.RenderTarget;$/;"	m
halfFrame2	pilas-engine/declaraciones/phaser.d.ts	/^                halfFrame2: Phaser.Renderer.WebGL.RenderTarget;$/;"	m
halfHeight	pilas-engine/declaraciones/phaser.d.ts	/^                halfHeight: number;$/;"	m
halfHeight	pilas-engine/declaraciones/phaser.d.ts	/^            halfHeight: number;$/;"	m
halfWidth	pilas-engine/declaraciones/phaser.d.ts	/^                halfWidth: number;$/;"	m
halfWidth	pilas-engine/declaraciones/phaser.d.ts	/^            halfWidth: number;$/;"	m
has	pilas-engine/declaraciones/phaser.d.ts	/^                has(body: MatterJS.Body | Phaser.GameObjects.GameObject): MatterJS.BodyType[];$/;"	m
has	pilas-engine/declaraciones/phaser.d.ts	/^                has(object: object, key: string): boolean;$/;"	m
has	pilas-engine/declaraciones/phaser.d.ts	/^                has(pipeline: string | Phaser.Renderer.WebGL.WebGLPipeline): boolean;$/;"	m
has	pilas-engine/declaraciones/phaser.d.ts	/^            has(key: K): boolean;$/;"	m
has	pilas-engine/declaraciones/phaser.d.ts	/^            has(key: string): boolean;$/;"	m
has	pilas-engine/declaraciones/phaser.d.ts	/^            has(name: string): boolean;$/;"	m
hasActiveStencilMask	pilas-engine/declaraciones/phaser.d.ts	/^                hasActiveStencilMask(): boolean;$/;"	m
hasBooted	pilas-engine/declaraciones/phaser.d.ts	/^                readonly hasBooted: boolean;$/;"	m
hasBoth	pilas-engine/declaraciones/phaser.d.ts	/^                hasBoth(object: object, key1: string, key2: string): boolean;$/;"	m
hasCacheConflict	pilas-engine/declaraciones/phaser.d.ts	/^            hasCacheConflict(): boolean;$/;"	m
hasCore	pilas-engine/declaraciones/phaser.d.ts	/^            function hasCore(key: string): boolean;$/;"	f
hasCustom	pilas-engine/declaraciones/phaser.d.ts	/^            function hasCustom(key: string): boolean;$/;"	f
hasDispatched	pilas-engine/declaraciones/phaser.d.ts	/^            hasDispatched: boolean;$/;"	m
hasEither	pilas-engine/declaraciones/phaser.d.ts	/^                hasEither(object: object, key1: string, key2: string): boolean;$/;"	m
hasEnded	pilas-engine/declaraciones/phaser.d.ts	/^            readonly hasEnded: boolean;$/;"	m
hasExtension	pilas-engine/declaraciones/phaser.d.ts	/^                hasExtension(extensionName: string): boolean;$/;"	m
hasFocus	pilas-engine/declaraciones/phaser.d.ts	/^        readonly hasFocus: boolean;$/;"	m
hasInterestingFace	pilas-engine/declaraciones/phaser.d.ts	/^            readonly hasInterestingFace: boolean;$/;"	m
hasLoaded	pilas-engine/declaraciones/phaser.d.ts	/^        hasLoaded: boolean;$/;"	m
hasLooped	pilas-engine/declaraciones/phaser.d.ts	/^            readonly hasLooped: boolean;$/;"	m
hasOffset	pilas-engine/declaraciones/phaser.d.ts	/^            hasOffset(tween: Phaser.Tweens.Tween): boolean;$/;"	m
hasPostPipeline	pilas-engine/declaraciones/phaser.d.ts	/^                hasPostPipeline: boolean;$/;"	m
hasPostPipeline	pilas-engine/declaraciones/phaser.d.ts	/^            hasPostPipeline: boolean;$/;"	m
hasStarted	pilas-engine/declaraciones/phaser.d.ts	/^            hasStarted: boolean;$/;"	m
hasStarted	pilas-engine/declaraciones/phaser.d.ts	/^            readonly hasStarted: boolean;$/;"	m
hasTarget	pilas-engine/declaraciones/phaser.d.ts	/^            hasTarget(target: object): boolean;$/;"	m
hasTileAt	pilas-engine/declaraciones/phaser.d.ts	/^            hasTileAt(tileX: number, tileY: number): boolean;$/;"	m
hasTileAt	pilas-engine/declaraciones/phaser.d.ts	/^            hasTileAt(tileX: number, tileY: number, layer?: string | number | Phaser.Tilemaps.TilemapLayer): boolean;$/;"	m
hasTileAtWorldXY	pilas-engine/declaraciones/phaser.d.ts	/^            hasTileAtWorldXY(worldX: number, worldY: number, camera?: Phaser.Cameras.Scene2D.Camera): boolean;$/;"	m
hasTileAtWorldXY	pilas-engine/declaraciones/phaser.d.ts	/^            hasTileAtWorldXY(worldX: number, worldY: number, camera?: Phaser.Cameras.Scene2D.Camera, layer?: string | number | Phaser.Tilemaps.TilemapLayer): boolean;$/;"	m
hasUniform	pilas-engine/declaraciones/phaser.d.ts	/^                hasUniform(name: string): boolean;$/;"	m
hay_sonidos_cargados	pilas-engine/sonidos.ts	/^  hay_sonidos_cargados() {$/;"	m
headlessStep	pilas-engine/declaraciones/phaser.d.ts	/^        headlessStep(time: number, delta: number): void;$/;"	m
height	pilas-engine/declaraciones/phaser.d.ts	/^                    height: number;$/;"	m
height	pilas-engine/declaraciones/phaser.d.ts	/^                height: number;$/;"	m
height	pilas-engine/declaraciones/phaser.d.ts	/^                readonly height: number;$/;"	m
height	pilas-engine/declaraciones/phaser.d.ts	/^            height: number;$/;"	m
height	pilas-engine/declaraciones/phaser.d.ts	/^            readonly height: number | string;$/;"	m
height	pilas-engine/declaraciones/phaser.d.ts	/^            readonly height: number;$/;"	m
height	pilas-engine/libs/spriter.ts	/^  height: number = 0;$/;"	m
height	pilas-engine/pilas.ts	/^      height: "100%",$/;"	m
height	pilas-engine/pilas.ts	/^      height: alto,$/;"	m
heightInPixels	pilas-engine/declaraciones/phaser.d.ts	/^            heightInPixels: number;$/;"	m
hexSideLength	pilas-engine/declaraciones/phaser.d.ts	/^            hexSideLength: number;$/;"	m
hexa	pilas-engine/colores.ts	/^        hexa: 0x000000,$/;"	m
hexa	pilas-engine/colores.ts	/^        hexa: 0x0000ff,$/;"	m
hexa	pilas-engine/colores.ts	/^        hexa: 0x00ff00,$/;"	m
hexa	pilas-engine/colores.ts	/^        hexa: 0x00ffff,$/;"	m
hexa	pilas-engine/colores.ts	/^        hexa: 0x808080,$/;"	m
hexa	pilas-engine/colores.ts	/^        hexa: 0xa52a2a,$/;"	m
hexa	pilas-engine/colores.ts	/^        hexa: 0xee82ee,$/;"	m
hexa	pilas-engine/colores.ts	/^        hexa: 0xff0000,$/;"	m
hexa	pilas-engine/colores.ts	/^        hexa: 0xffa500,$/;"	m
hexa	pilas-engine/colores.ts	/^        hexa: 0xffc0cb,$/;"	m
hexa	pilas-engine/colores.ts	/^        hexa: 0xffff00,$/;"	m
hexa	pilas-engine/colores.ts	/^        hexa: 0xffffff,$/;"	m
hexa	pilas-engine/colores.ts	/^  hexa: number;$/;"	m
hideBanner	pilas-engine/declaraciones/phaser.d.ts	/^            readonly hideBanner: boolean;$/;"	m
hideCCW	pilas-engine/declaraciones/phaser.d.ts	/^            hideCCW: boolean;$/;"	m
hideOnComplete	pilas-engine/declaraciones/phaser.d.ts	/^                hideOnComplete: boolean;$/;"	m
hideOnComplete	pilas-engine/declaraciones/phaser.d.ts	/^            hideOnComplete: boolean;$/;"	m
hidePhaser	pilas-engine/declaraciones/phaser.d.ts	/^            readonly hidePhaser: boolean;$/;"	m
historia	pilas-engine/pilas.ts	/^  historia: Historia;$/;"	m
hitArea	pilas-engine/declaraciones/phaser.d.ts	/^                hitArea: any;$/;"	m
hitArea	pilas-engine/modos/actor_en_modo_edicion.ts	/^      hitArea: new Phaser.Geom.Rectangle(borde.x, borde.y, this.sprite.width, this.sprite.height),$/;"	m
hitArea	pilas-engine/modos/camara_en_modo_edicion.ts	/^      hitArea: new Phaser.Geom.Rectangle(manejador_x-manejador_ancho\/2, manejador_y-manejador_alto\/2, manejador_ancho, manejador_alto),$/;"	m
hitAreaCallback	pilas-engine/declaraciones/phaser.d.ts	/^                hitAreaCallback: Phaser.Types.Input.HitAreaCallback;$/;"	m
hitAreaCallback	pilas-engine/modos/actor_en_modo_edicion.ts	/^      hitAreaCallback: Phaser.Geom.Rectangle.Contains,$/;"	m
hitAreaCallback	pilas-engine/modos/camara_en_modo_edicion.ts	/^      hitAreaCallback: Phaser.Geom.Rectangle.Contains,$/;"	m
hitAreaDebug	pilas-engine/declaraciones/phaser.d.ts	/^                hitAreaDebug: Phaser.GameObjects.Shape;$/;"	m
hitTest	pilas-engine/declaraciones/phaser.d.ts	/^                hitTest(x: number, y: number): boolean;$/;"	m
hitTest	pilas-engine/declaraciones/phaser.d.ts	/^            hitTest(pointer: Phaser.Input.Pointer, gameObjects: any[], camera: Phaser.Cameras.Scene2D.Camera, output?: any[]): any[];$/;"	m
hitTestBody	pilas-engine/declaraciones/phaser.d.ts	/^                hitTestBody(body: MatterJS.BodyType, position: Phaser.Math.Vector2): boolean;$/;"	m
hitTestPointer	pilas-engine/declaraciones/phaser.d.ts	/^            hitTestPointer(pointer: Phaser.Input.Pointer): Phaser.GameObjects.GameObject[];$/;"	m
hls	pilas-engine/declaraciones/phaser.d.ts	/^            hls: boolean;$/;"	m
hold	pilas-engine/declaraciones/phaser.d.ts	/^                hold: Function;$/;"	m
horizontal	pilas-engine/declaraciones/phaser.d.ts	/^            readonly horizontal: boolean;$/;"	m
html	pilas-engine/declaraciones/phaser.d.ts	/^            html(key: string | Phaser.Types.Loader.FileTypes.HTMLFileConfig | Phaser.Types.Loader.FileTypes.HTMLFileConfig[], url?: string, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject): this;$/;"	m
html	pilas-engine/declaraciones/phaser.d.ts	/^            html: Phaser.Cache.BaseCache;$/;"	m
htmlTexture	pilas-engine/declaraciones/phaser.d.ts	/^            htmlTexture(key: string | Phaser.Types.Loader.FileTypes.HTMLTextureFileConfig | Phaser.Types.Loader.FileTypes.HTMLTextureFileConfig[], url?: string, width?: number, height?: number, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject): this;$/;"	m
hue	pilas-engine/declaraciones/phaser.d.ts	/^            hue(rotation?: number, multiply?: boolean): this;$/;"	m
huesos	pilas-engine/actores/robot.ts	/^  huesos: Huesos;$/;"	m
humo	pilas-engine/actores/humo.ts	/^class humo extends Actor {$/;"	c
i	pilas-engine/declaraciones/phaser.d.ts	/^                    i: number;$/;"	m
iOS	pilas-engine/declaraciones/phaser.d.ts	/^            iOS: boolean;$/;"	m
iOSVersion	pilas-engine/declaraciones/phaser.d.ts	/^            iOSVersion: number;$/;"	m
iPad	pilas-engine/declaraciones/phaser.d.ts	/^            iPad: boolean;$/;"	m
iPhone	pilas-engine/declaraciones/phaser.d.ts	/^            iPhone: boolean;$/;"	m
id	pilas-engine/actores/-actor-base.ts	/^      id: this.id,$/;"	m
id	pilas-engine/actores/-actor-base.ts	/^  get id() {$/;"	m
id	pilas-engine/actores/-actor-base.ts	/^  set id(a: any) {$/;"	m
id	pilas-engine/declaraciones/phaser.d.ts	/^                    id: string;$/;"	m
id	pilas-engine/declaraciones/phaser.d.ts	/^                id: number;$/;"	m
id	pilas-engine/declaraciones/phaser.d.ts	/^                id: string;$/;"	m
id	pilas-engine/declaraciones/phaser.d.ts	/^                readonly id: number;$/;"	m
id	pilas-engine/declaraciones/phaser.d.ts	/^            readonly id: number;$/;"	m
id	pilas-engine/escenas/-escena-base.ts	/^  id: number;$/;"	m
id	pilas-engine/libs/spriter.ts	/^  id: number = -1;$/;"	m
id	pilas-engine/modos/actor_en_modo_edicion.ts	/^        id: this.identificador,$/;"	m
id	pilas-engine/modos/actor_en_modo_edicion.ts	/^  id: number;$/;"	m
id	pilas-engine/modos/modo_cargador.ts	/^              id: 3,$/;"	m
id	pilas-engine/utilidades.ts	/^  id: number;$/;"	m
id_color	pilas-engine/actores/-actor-base.ts	/^      id_color: this.id_color,$/;"	m
id_color	pilas-engine/actores/-actor-base.ts	/^  id_color: number;$/;"	m
identificador	pilas-engine/actores/-actor-base.ts	/^  private identificador: any;$/;"	m
identificador	pilas-engine/modos/actor_en_modo_edicion.ts	/^  identificador: number;$/;"	m
identifier	pilas-engine/declaraciones/phaser.d.ts	/^            identifier: number;$/;"	m
identity	pilas-engine/declaraciones/phaser.d.ts	/^            identity(): Phaser.Math.Matrix3;$/;"	m
identity	pilas-engine/declaraciones/phaser.d.ts	/^            identity(): Phaser.Math.Quaternion;$/;"	m
identity	pilas-engine/declaraciones/phaser.d.ts	/^            identity(): this;$/;"	m
identity	pilas-engine/libs/spriter.ts	/^  static identity(out: Space = new Space()): Space {$/;"	m
ie	pilas-engine/declaraciones/phaser.d.ts	/^            ie: boolean;$/;"	m
ieVersion	pilas-engine/declaraciones/phaser.d.ts	/^            ieVersion: number;$/;"	m
if	pilas-engine/actores.ts	/^    if (!clase) {$/;"	m
if	pilas-engine/actores.ts	/^    if (!nombre || !clase) {$/;"	m
if	pilas-engine/actores.ts	/^    if (!p.nombre) {$/;"	m
if	pilas-engine/actores.ts	/^    if (imagen) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^          if (nombre.includes("-")) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^          if (seguir_rotacion) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^        if (e.stack.includes("Tween")) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^        if (frame.isFirst) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^        if (galeria) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^        if (texto === this._dialogo) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^        if (this._comportamientos.length > 0) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^        if (this.esta_vivo()) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^      if (!this.tiene_habilidad(clase.name)) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^      if (animacion.frames.length === 0) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^      if (nombres_de_lasers.length > 0) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^      if (nombres_de_sensores.length > 0) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^      if (propiedades.fondo) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^      if (termina) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^      if (texto.esta_vivo()) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^      if (texto.x + 20 > texto.pilas.camara.borde_derecho) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^      if (texto.x - texto.sprite.width < texto.pilas.camara.borde_izquierdo) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^      if (texto.y + texto.sprite.height > texto.pilas.camara.borde_arriba) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^      if (texto.y - 15 < texto.pilas.camara.borde_abajo) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^      if (this._comportamientos.length > 0) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^      if (this._texto) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^      if (this.esta_vivo()) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^      if (this.pilas.animaciones.existe_animacion(nombre)) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^      if (this.sprite.body) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^      if (this.tiene_habilidad(clase.name)) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (!actor.esta_vivo()) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (!animacion) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (!figura) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (!laser) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (!this.figura) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if ((this.sprite as any).body && (this.sprite.body as any).isSensor !== undefined) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if ((this.sprite as any).isStatic !== undefined) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if ((this.sprite as any).setStatic !== undefined) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (activo) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (clase) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (comunes[x] !== undefined) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (comunes[y] !== undefined) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (figura) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (galeria) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (imagen_inicial.indexOf(":") > -1) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (nombre.indexOf(":") > -1) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (propiedades.es_texto) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (propiedades.lasers) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (radio < 1) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (rotacion === null) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (this._animacion_en_curso !== nombre) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (this._comportamiento_actual) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (this._dialogo) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (this._es_texto) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (this._vivo) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (this.animacion_pausada) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (this.esta_vivo()) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (this.figura && this.sin_rotacion) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (this.figura) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (this.pilas.utilidades.es_animacion(_x)) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (this.pilas.utilidades.es_animacion(_y)) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (this.pilas.utilidades.es_animacion(angulo)) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (this.pilas.utilidades.es_animacion(escala)) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (this.pilas.utilidades.es_animacion(s)) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (this.pilas.utilidades.es_animacion(t)) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (this.sensores) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (this.sprite) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (this.sprite.frame.name === "__BASE") {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (this.sprite.input && this.sprite.input.hitArea) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (this[`cuando_llega_el_mensaje_${mensaje}`]) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (valor) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (velocidad < 0) {$/;"	m
if	pilas-engine/actores/-actor-base.ts	/^    if (velocidad > 0) {$/;"	m
if	pilas-engine/actores/-actor-texto-base.ts	/^      if (this._fondo_imagen.includes("dialogo")) {$/;"	m
if	pilas-engine/actores/-actor-texto-base.ts	/^      if (this.fijo) {$/;"	m
if	pilas-engine/actores/-actor-texto-base.ts	/^    if (!this._fondo) {$/;"	m
if	pilas-engine/actores/-actor-texto-base.ts	/^    if (!this._texto) {$/;"	m
if	pilas-engine/actores/-actor-texto-base.ts	/^    if (fondo.indexOf(":") > -1) {$/;"	m
if	pilas-engine/actores/-actor-texto-base.ts	/^    if (this._fondo) {$/;"	m
if	pilas-engine/actores/-actor-texto-base.ts	/^    if (this._texto) {$/;"	m
if	pilas-engine/actores/-pizarra-base.ts	/^    if (valor) {$/;"	m
if	pilas-engine/actores/barra_de_energia.ts	/^    if (this.vida_actual === this.vida_anterior) {$/;"	m
if	pilas-engine/actores/boton_abajo.ts	/^    if (this.pulsado) {$/;"	m
if	pilas-engine/actores/boton_activable.ts	/^    if (this.habilitado) {$/;"	m
if	pilas-engine/actores/boton_arriba.ts	/^    if (this.pulsado) {$/;"	m
if	pilas-engine/actores/boton_derecha.ts	/^    if (this.pulsado) {$/;"	m
if	pilas-engine/actores/boton_espacio.ts	/^    if (this.pulsado) {$/;"	m
if	pilas-engine/actores/boton_izquierda.ts	/^    if (this.pulsado) {$/;"	m
if	pilas-engine/actores/conejo.ts	/^      if (this.velocidad_y > 0.1) {$/;"	m
if	pilas-engine/actores/conejo.ts	/^    if (!this.pilas.control.derecha && !this.pilas.control.izquierda) {$/;"	m
if	pilas-engine/actores/conejo.ts	/^    if (!this.toca_el_suelo) {$/;"	m
if	pilas-engine/actores/conejo.ts	/^    if (actor.etiqueta === "moneda") {$/;"	m
if	pilas-engine/actores/conejo.ts	/^    if (actor.etiqueta === "plataforma") {$/;"	m
if	pilas-engine/actores/conejo.ts	/^    if (this.pies.colisiones.length > 0) {$/;"	m
if	pilas-engine/actores/conejo.ts	/^    if (this.pilas.control.arriba && this.toca_el_suelo) {$/;"	m
if	pilas-engine/actores/conejo.ts	/^    if (this.pilas.control.derecha) {$/;"	m
if	pilas-engine/actores/conejo.ts	/^    if (this.pilas.control.izquierda || this.pilas.control.derecha) {$/;"	m
if	pilas-engine/actores/conejo.ts	/^    if (this.pilas.control.izquierda) {$/;"	m
if	pilas-engine/actores/conejo.ts	/^    if (this.toca_el_suelo) {$/;"	m
if	pilas-engine/actores/deslizador.ts	/^    if (this.esta_arrastrando_el_deslizador) {$/;"	m
if	pilas-engine/actores/interruptor_de_gravedad.ts	/^    if (this.imagen == "imagenes:botones\/interruptor-no") {$/;"	m
if	pilas-engine/actores/laser.ts	/^    if (this.x > derecha || this.x < izquierda || this.y > arriba || this.y < abajo) {$/;"	m
if	pilas-engine/actores/nave.ts	/^      if (!this.pilas.control.izquierda && !this.pilas.control.derecha) {$/;"	m
if	pilas-engine/actores/nave.ts	/^    if (this.pilas.control.arriba) {$/;"	m
if	pilas-engine/actores/nave.ts	/^    if (this.pilas.control.derecha) {$/;"	m
if	pilas-engine/actores/nave.ts	/^    if (this.pilas.control.espacio && this.cuadros_desde_el_ultimo_disparo > 5) {$/;"	m
if	pilas-engine/actores/nave.ts	/^    if (this.pilas.control.izquierda) {$/;"	m
if	pilas-engine/actores/nube_animada.ts	/^    if (this.x < -400) {$/;"	m
if	pilas-engine/animacion_de_propiedad.ts	/^      if (d.onStart) {$/;"	m
if	pilas-engine/animacion_de_propiedad.ts	/^      if (this.veces_que_ejecuto == this.veces) {$/;"	m
if	pilas-engine/animacion_de_propiedad.ts	/^    if (duraci√≥n === 0) {$/;"	m
if	pilas-engine/animacion_de_propiedad.ts	/^    if (this.timeline) {$/;"	m
if	pilas-engine/animacion_de_propiedad.ts	/^    if (veces < -1 || veces === 0) {$/;"	m
if	pilas-engine/animaciones.ts	/^      if (cuadro.indexOf(":") > -1) {$/;"	m
if	pilas-engine/animaciones.ts	/^      if (this.pilas.imagenes_precargadas.indexOf(cuadro) === -1) {$/;"	m
if	pilas-engine/animaciones.ts	/^    if (!this.animaciones[nombre]) {$/;"	m
if	pilas-engine/automata.ts	/^      if (metodo) {$/;"	m
if	pilas-engine/automata.ts	/^      if (this.actor.cuadro_del_estado > 0 && this.actor.cuadro_del_estado % 60 === 0) {$/;"	m
if	pilas-engine/automata.ts	/^    if (!this.actor[nombre_del_metodo_actualizar]) {$/;"	m
if	pilas-engine/automata.ts	/^    if (!this.actor[nombre_del_metodo_iniciar]) {$/;"	m
if	pilas-engine/automata.ts	/^    if (this._estado !== "") {$/;"	m
if	pilas-engine/camara.ts	/^      if (this.contador === undefined) {$/;"	m
if	pilas-engine/camara.ts	/^      if (this.contador > tiempo * 60) {$/;"	m
if	pilas-engine/camara.ts	/^    if (!actor._vivo) {$/;"	m
if	pilas-engine/camara.ts	/^    if (!ignorar_limites) {$/;"	m
if	pilas-engine/camara.ts	/^    if (x >= 1 && x <= 10) {$/;"	m
if	pilas-engine/colores.ts	/^    if (this.colores.indexOf(color) > -1) {$/;"	m
if	pilas-engine/colores.ts	/^    if (typeof color === "number") {$/;"	m
if	pilas-engine/comportamientos.ts	/^      if (a.similitud > b.similitud) {$/;"	m
if	pilas-engine/comportamientos.ts	/^    if (!clase || !nombre) {$/;"	m
if	pilas-engine/comportamientos.ts	/^    if (!encontrado) {$/;"	m
if	pilas-engine/comportamientos.ts	/^    if (todos_los_nombres.indexOf(nombre) === -1) {$/;"	m
if	pilas-engine/comportamientos/aparecer.ts	/^    if (argumentos) {$/;"	m
if	pilas-engine/comportamientos/aparecer.ts	/^    if (this.actor.transparencia <= 0) {$/;"	m
if	pilas-engine/comportamientos/desaparecer.ts	/^    if (argumentos) {$/;"	m
if	pilas-engine/comportamientos/desaparecer.ts	/^    if (this.actor.transparencia >= 100) {$/;"	m
if	pilas-engine/comportamientos/mover.ts	/^    if (!argumentos) {$/;"	m
if	pilas-engine/comportamientos/mover.ts	/^    if (this.tiempo >= this.demora * 60) {$/;"	m
if	pilas-engine/control.ts	/^      if (indice < control.getButtonTotal()) {$/;"	m
if	pilas-engine/control.ts	/^    if (control && control[stick]) {$/;"	m
if	pilas-engine/control.ts	/^    if (control) {$/;"	m
if	pilas-engine/control.ts	/^    if (simulacion) {$/;"	m
if	pilas-engine/control.ts	/^    if (this._simulaciones[nombre] === undefined) {$/;"	m
if	pilas-engine/escenas/-escena-base.ts	/^          if (actor._fondo) {$/;"	m
if	pilas-engine/escenas/-escena-base.ts	/^          if (actor._texto) {$/;"	m
if	pilas-engine/escenas/-escena-base.ts	/^          if (actor["_canvas"]) {$/;"	m
if	pilas-engine/escenas/-escena-base.ts	/^        if (!actor._vivo) {$/;"	m
if	pilas-engine/escenas/-escena-base.ts	/^        if (actor._bloques_actualizar) {$/;"	m
if	pilas-engine/escenas/-escena-base.ts	/^      if (!this._sonidos_en_reproduccion[nombre]) {$/;"	m
if	pilas-engine/escenas/-escena-base.ts	/^      if (animacion.actor === actor) {$/;"	m
if	pilas-engine/escenas/-escena-base.ts	/^      if (campos.length > 8) {$/;"	m
if	pilas-engine/escenas/-escena-base.ts	/^      if (this._sonidos_en_reproduccion[nombre] < maximo) {$/;"	m
if	pilas-engine/escenas/-escena-base.ts	/^    if (Array.isArray(variable)) {$/;"	m
if	pilas-engine/escenas/-escena-base.ts	/^    if (`${variable}` === "[object Object]") {$/;"	m
if	pilas-engine/escenas/-escena-base.ts	/^    if (posicion !== -1) {$/;"	m
if	pilas-engine/escenas/-escena-base.ts	/^    if (this._observables === null) {$/;"	m
if	pilas-engine/escenas/-escena-base.ts	/^    if (this.animaciones_pendientes_de_ejecucion.length > 0) {$/;"	m
if	pilas-engine/escenas/-escena-base.ts	/^    if (this[`cuando_llega_el_mensaje_${mensaje}`]) {$/;"	m
if	pilas-engine/escenas/-escena-base.ts	/^    if (typeof variable == "number" && !Number.isInteger(variable)) {$/;"	m
if	pilas-engine/escenas/-escena-base.ts	/^    if (typeof variable === "number") {$/;"	m
if	pilas-engine/escenas/-escena-base.ts	/^    if (variable === null) {$/;"	m
if	pilas-engine/escenas/-escena-base.ts	/^    if (variable === undefined) {$/;"	m
if	pilas-engine/escenas/-escena.ts	/^      if (this._bloques_cada_segundo) {$/;"	m
if	pilas-engine/escenas/-escena.ts	/^    if (this.cuadro > 0 && this.cuadro % 60 === 0) {$/;"	m
if	pilas-engine/eventos_de_escena.ts	/^      if (c.nombre_del_evento === identificador) {$/;"	m
if	pilas-engine/eventos_de_escena.ts	/^    if (indice > -1) {$/;"	m
if	pilas-engine/eventos_de_escena.ts	/^    if (this.nombres_de_eventos.indexOf(nombre_del_evento) === -1) {$/;"	m
if	pilas-engine/habilidades.ts	/^      if (a.similitud > b.similitud) {$/;"	m
if	pilas-engine/habilidades.ts	/^    if (!habilidad) {$/;"	m
if	pilas-engine/habilidades/arrastrable.ts	/^    if (this.actor !== objeto.actor) {$/;"	m
if	pilas-engine/habilidades/arrastrable.ts	/^    if (this.actor.figura) {$/;"	m
if	pilas-engine/habilidades/mover-con-el-teclado.ts	/^    if (this.pilas.control.abajo) {$/;"	m
if	pilas-engine/habilidades/mover-con-el-teclado.ts	/^    if (this.pilas.control.arriba) {$/;"	m
if	pilas-engine/habilidades/mover-con-el-teclado.ts	/^    if (this.pilas.control.derecha) {$/;"	m
if	pilas-engine/habilidades/mover-con-el-teclado.ts	/^    if (this.pilas.control.izquierda) {$/;"	m
if	pilas-engine/historia.ts	/^          if (filtro_actor.nombre !== entidad.nombre) {$/;"	m
if	pilas-engine/historia.ts	/^        if (filtro_actor) {$/;"	m
if	pilas-engine/huesos.ts	/^      if (this.atlas) {$/;"	m
if	pilas-engine/huesos.ts	/^      if (this.prefijo_de_imagenes) {$/;"	m
if	pilas-engine/huesos.ts	/^    if (indice >= animaciones.length) {$/;"	m
if	pilas-engine/huesos.ts	/^    if (nombre != this.animacion_actual) {$/;"	m
if	pilas-engine/huesos.ts	/^    if (this.sprites[nombre]) {$/;"	m
if	pilas-engine/laser.ts	/^        if (k2 >= body.parts[i].vertices.length) k2 = 0;$/;"	m
if	pilas-engine/laser.ts	/^      if (!colpoint) continue;$/;"	m
if	pilas-engine/laser.ts	/^    if (!intersection) return null;$/;"	m
if	pilas-engine/laser.ts	/^    if (!rayA.pointInBounds(intersection)) return null;$/;"	m
if	pilas-engine/laser.ts	/^    if (!rayB.pointInBounds(intersection)) return null;$/;"	m
if	pilas-engine/laser.ts	/^    if (colisiones.length > 0) {$/;"	m
if	pilas-engine/laser.ts	/^    if (compareNum(rayA.slope, rayB.slope)) return null;$/;"	m
if	pilas-engine/laser.ts	/^    if (rayA.isHorizontal) return new vec2(rayB.xValueAt(rayA.start.y), rayA.start.y);$/;"	m
if	pilas-engine/laser.ts	/^    if (rayA.isVertical && rayB.isVertical) return null;$/;"	m
if	pilas-engine/laser.ts	/^    if (rayA.isVertical) return new vec2(rayA.start.x, rayB.yValueAt(rayA.start.x));$/;"	m
if	pilas-engine/laser.ts	/^    if (rayB.isHorizontal) return new vec2(rayA.xValueAt(rayB.start.y), rayB.start.y);$/;"	m
if	pilas-engine/laser.ts	/^    if (rayB.isVertical) return new vec2(rayB.start.x, rayA.yValueAt(rayB.start.x));$/;"	m
if	pilas-engine/laser.ts	/^    if (this.start.plus(norm1).distance(ref) < this.start.plus(norm2).distance(ref)) return norm1;$/;"	m
if	pilas-engine/laser.ts	/^  if (sort) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^                  if (sprite_object.folder_index === map_instruction.folder_index && sprite_object.file_index === map_instruction.file_index) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^                if ((anim.min_time <= tag_keyframe.time && tag_keyframe.time < prev_time) || (time <= tag_keyframe.time && tag_keyframe.time <= anim.max_time)) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^                if ((anim.min_time <= tag_keyframe.time && tag_keyframe.time <= time) || (prev_time < tag_keyframe.time && tag_keyframe.time <= anim.max_time)) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^                if (file) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^                if (prev_time < tag_keyframe.time && tag_keyframe.time <= time) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^                if (time <= tag_keyframe.time && tag_keyframe.time < prev_time) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^              if ((anim.min_time <= event_keyframe.time && event_keyframe.time < prev_time) || (time <= event_keyframe.time && event_keyframe.time <= anim.max_time)) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^              if ((anim.min_time <= event_keyframe.time && event_keyframe.time <= time) || (prev_time < event_keyframe.time && event_keyframe.time <= anim.max_time)) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^              if ((anim.min_time <= sound_keyframe.time && sound_keyframe.time < prev_time) || (time <= sound_keyframe.time && sound_keyframe.time <= anim.max_time)) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^              if ((anim.min_time <= sound_keyframe.time && sound_keyframe.time <= time) || (prev_time < sound_keyframe.time && sound_keyframe.time <= anim.max_time)) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^              if (prev_time < event_keyframe.time && event_keyframe.time <= time) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^              if (prev_time < sound_keyframe.time && sound_keyframe.time <= time) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^              if (sprite.default_pivot) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^              if (time <= event_keyframe.time && event_keyframe.time < prev_time) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^              if (time <= sound_keyframe.time && sound_keyframe.time < prev_time) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^            if (bone) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^            if (file) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^            if (obj_info) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^            if (sub_anim_key !== sub_pose.getAnim()) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^            if (sub_entity_key !== sub_pose.getEntity()) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^            if (time1 !== time2) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^            if (time2 < time1) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^            if (timeline_keyframe instanceof SpriteTimelineKeyframe) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^            if (wrapped_max) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^            if (wrapped_min) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^          if (elapsed_time < 0) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^          if (keyframe_index1 !== -1) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^          if (wrapped_max) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^          if (wrapped_min) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^        if (anim.meta.tagline) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^        if (character_map) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^        if (elapsed_time < 0) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^        if (parent_bone) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^        if (time1 !== time2) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^        if (time2 < time1) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^      if (!(var_def.name in pose.var_map)) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^      if (Math.abs(d2) < epsilon) break;$/;"	m
if	pilas-engine/libs/spriter.ts	/^      if (Math.abs(x2 - x) < epsilon) return t2;$/;"	m
if	pilas-engine/libs/spriter.ts	/^      if (Math.abs(x2) < epsilon) return t2;$/;"	m
if	pilas-engine/libs/spriter.ts	/^      if (anim) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^      if (anim.meta) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^      if (array[current + 1].time <= time) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^      if (lo === hi) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^      if (mainline_time1 !== mainline_time2) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^      if (mainline_time2 < mainline_time1) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^      if (x > x2) t0 = t2;$/;"	m
if	pilas-engine/libs/spriter.ts	/^    if (!pose.dirty) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^    if (!this.default_pivot) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^    if (Math.abs(a.position.x - b.position.x) > epsilon) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^    if (Math.abs(a.position.y - b.position.y) > epsilon) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^    if (Math.abs(a.rotation.rad - b.rotation.rad) > epsilon) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^    if (Math.abs(a.scale.x - b.scale.x) > epsilon) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^    if (Math.abs(a.scale.y - b.scale.y) > epsilon) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^    if (Math.abs(a.x - b.x) > epsilon) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^    if (Math.abs(a.y - b.y) > epsilon) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^    if (a.scale.x * a.scale.y < 0.0) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^    if (anim) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^    if (array.length <= 0) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^    if (b - a < 0.0) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^    if (b - a > 0.0) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^    if (entity) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^    if (hi === 0) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^    if (json.meta) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^    if (json.tagline) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^    if (json.varline) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^    if (num < min) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^    if (t2 < t0) return t0;$/;"	m
if	pilas-engine/libs/spriter.ts	/^    if (t2 > t1) return t1;$/;"	m
if	pilas-engine/libs/spriter.ts	/^    if (this.anim_key !== anim_key) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^    if (this.data) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^    if (this.entity_key !== entity_key) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^    if (this.time !== time) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^    if (this.type !== type) throw new Error();$/;"	m
if	pilas-engine/libs/spriter.ts	/^    if (time < array[0].time) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^    if (time >= array[last].time) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^    if (typeof json.i === "object") {$/;"	m
if	pilas-engine/libs/spriter.ts	/^    if (typeof json["pivot_x"] !== "undefined" || typeof json["pivot_y"] !== "undefined") {$/;"	m
if	pilas-engine/libs/spriter.ts	/^  if (angle <= 0.0) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^  if (min < max) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^  if (spin === 0) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^  if (typeof def !== "boolean" || value !== def) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^  if (typeof def !== "number" || value !== def) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^  if (typeof def !== "string" || value !== def) {$/;"	m
if	pilas-engine/libs/spriter.ts	/^  if (typeof value !== "undefined") {$/;"	m
if	pilas-engine/libs/spriter.ts	/^  if (typeof value === "object" && typeof value.length === "number") {$/;"	m
if	pilas-engine/mensajes.ts	/^      if (DEPURAR_MENSAJES) {$/;"	m
if	pilas-engine/mensajes.ts	/^      if (DEPURAR_MENSAJES_DE_CARGA) {$/;"	m
if	pilas-engine/mensajes.ts	/^      if (metodo !== "atender_mensaje_cambiar_prefijo_de_variante" && metodo !== "atender_mensaje_cambiar_animacion") {$/;"	m
if	pilas-engine/mensajes.ts	/^      if (nombre === "codigo_ejecutado" || nombre === "termina_de_reproducir_sonido") {$/;"	m
if	pilas-engine/mensajes.ts	/^    if (!contexto) {$/;"	m
if	pilas-engine/mensajes.ts	/^    if (!nombre) {$/;"	m
if	pilas-engine/mensajes.ts	/^    if (DEPURAR_MENSAJES) {$/;"	m
if	pilas-engine/mensajes.ts	/^    if (nombre === "progreso_de_carga") {$/;"	m
if	pilas-engine/mensajes.ts	/^    if (this[metodo]) {$/;"	m
if	pilas-engine/modos/actor_en_modo_edicion.ts	/^      if (!this.seleccionado) {$/;"	m
if	pilas-engine/modos/actor_en_modo_edicion.ts	/^      if (data.buttons) {$/;"	m
if	pilas-engine/modos/actor_en_modo_edicion.ts	/^      if (this.figura && !entidad.figura) {$/;"	m
if	pilas-engine/modos/actor_en_modo_edicion.ts	/^      if (this.figura.geom.type !== 0) {$/;"	m
if	pilas-engine/modos/actor_en_modo_edicion.ts	/^      if (this.figura.geom.type !== 5) {$/;"	m
if	pilas-engine/modos/actor_en_modo_edicion.ts	/^    if (entidad.activo === false) {$/;"	m
if	pilas-engine/modos/actor_en_modo_edicion.ts	/^    if (entidad.figura && !this.figura) {$/;"	m
if	pilas-engine/modos/actor_en_modo_edicion.ts	/^    if (entidad.figura === "circulo") {$/;"	m
if	pilas-engine/modos/actor_en_modo_edicion.ts	/^    if (entidad.figura === "rectangulo") {$/;"	m
if	pilas-engine/modos/actor_en_modo_edicion.ts	/^    if (entidad.figura_dinamica) {$/;"	m
if	pilas-engine/modos/actor_en_modo_edicion.ts	/^    if (entidad.imagen.indexOf(":") > -1) {$/;"	m
if	pilas-engine/modos/actor_en_modo_edicion.ts	/^    if (imagen.indexOf(":") > -1) {$/;"	m
if	pilas-engine/modos/actor_en_modo_edicion.ts	/^    if (this.figura) {$/;"	m
if	pilas-engine/modos/actor_en_modo_edicion.ts	/^    if (this.fondo) {$/;"	m
if	pilas-engine/modos/actor_en_modo_edicion.ts	/^    if (this.sensores) {$/;"	m
if	pilas-engine/modos/actor_en_modo_edicion.ts	/^    if (this.texto) {$/;"	m
if	pilas-engine/modos/camara_en_modo_edicion.ts	/^      if (data.buttons) {$/;"	m
if	pilas-engine/modos/modo.ts	/^        if (actor.fondo) {$/;"	m
if	pilas-engine/modos/modo.ts	/^        if (figura.es_dinamica) {$/;"	m
if	pilas-engine/modos/modo.ts	/^        if (sprite["fondo"]) {$/;"	m
if	pilas-engine/modos/modo.ts	/^      if (!sprite["texto"]) {$/;"	m
if	pilas-engine/modos/modo.ts	/^      if (!vertices[j - 1].isInternal) {$/;"	m
if	pilas-engine/modos/modo.ts	/^      if (actor && actor.figura && actor.figura.id === col.body.id) {$/;"	m
if	pilas-engine/modos/modo.ts	/^      if (actor.fondo !== sprite["fondo_imagen"]) {$/;"	m
if	pilas-engine/modos/modo.ts	/^      if (col.body && col.body.actor_id && col.body.actor_id === actor.id) {$/;"	m
if	pilas-engine/modos/modo.ts	/^      if (col.body.es_sensor) {$/;"	m
if	pilas-engine/modos/modo.ts	/^      if (figura.es_sensor) {$/;"	m
if	pilas-engine/modos/modo.ts	/^      if (ids.includes(col.body.id)) {$/;"	m
if	pilas-engine/modos/modo.ts	/^      if (sprite.input) {$/;"	m
if	pilas-engine/modos/modo.ts	/^      if (sprite["fondo_imagen"].includes("dialogo")) {$/;"	m
if	pilas-engine/modos/modo.ts	/^      if (sprite["texto"] && sprite["texto_fuente"] !== actor.fuente) {$/;"	m
if	pilas-engine/modos/modo.ts	/^      if (vertices[j].isInternal) {$/;"	m
if	pilas-engine/modos/modo.ts	/^    if (!datos.pilas.opciones.modo_simple) {$/;"	m
if	pilas-engine/modos/modo.ts	/^    if (!dx) {$/;"	m
if	pilas-engine/modos/modo.ts	/^    if (!dy) {$/;"	m
if	pilas-engine/modos/modo.ts	/^    if (actor && actor.destacar) {$/;"	m
if	pilas-engine/modos/modo.ts	/^    if (actor.activo === false) {$/;"	m
if	pilas-engine/modos/modo.ts	/^    if (actor.es_texto) {$/;"	m
if	pilas-engine/modos/modo.ts	/^    if (actor.figura === "circulo") {$/;"	m
if	pilas-engine/modos/modo.ts	/^    if (actor.figura === "rectangulo") {$/;"	m
if	pilas-engine/modos/modo.ts	/^    if (actor.figura) {$/;"	m
if	pilas-engine/modos/modo.ts	/^    if (actor.imagen.indexOf(":") > -1) {$/;"	m
if	pilas-engine/modos/modo.ts	/^    if (actor.lasers) {$/;"	m
if	pilas-engine/modos/modo.ts	/^    if (actor.sensores) {$/;"	m
if	pilas-engine/modos/modo.ts	/^    if (datos.proyecto && datos.proyecto.fps === 30) {$/;"	m
if	pilas-engine/modos/modo.ts	/^    if (fondo !== this._nombre_del_fondo) {$/;"	m
if	pilas-engine/modos/modo.ts	/^    if (fondo) {$/;"	m
if	pilas-engine/modos/modo.ts	/^    if (fondo.indexOf(":") > -1) {$/;"	m
if	pilas-engine/modos/modo.ts	/^    if (imagen.indexOf(":") > -1) {$/;"	m
if	pilas-engine/modos/modo.ts	/^    if (sprite.figura) {$/;"	m
if	pilas-engine/modos/modo.ts	/^    if (sprite.input) {$/;"	m
if	pilas-engine/modos/modo.ts	/^    if (sprite.sensores) {$/;"	m
if	pilas-engine/modos/modo.ts	/^    if (this.actor_seleccionado === sprite) {$/;"	m
if	pilas-engine/modos/modo.ts	/^    if (this.actor_seleccionado) {$/;"	m
if	pilas-engine/modos/modo.ts	/^    if (this.fondo) {$/;"	m
if	pilas-engine/modos/modo.ts	/^    if (this.pilas && this.pilas.modo && this.pilas.actores) {$/;"	m
if	pilas-engine/modos/modo.ts	/^    if (this.pilas.depurador.modo_posicion_activado && !this.es_modo_ejecucion) {$/;"	m
if	pilas-engine/modos/modo_cargador.ts	/^          if (enc3 != 64) uarray[i + 1] = chr2;$/;"	m
if	pilas-engine/modos/modo_cargador.ts	/^          if (enc4 != 64) uarray[i + 2] = chr3;$/;"	m
if	pilas-engine/modos/modo_cargador.ts	/^          if (item.ruta) {$/;"	m
if	pilas-engine/modos/modo_cargador.ts	/^        if (contenido.frameTotal === 1) {$/;"	m
if	pilas-engine/modos/modo_cargador.ts	/^        if (item.contenido) {$/;"	m
if	pilas-engine/modos/modo_cargador.ts	/^        if (lkey == 64) {$/;"	m
if	pilas-engine/modos/modo_cargador.ts	/^        if (sonido.contenido) {$/;"	m
if	pilas-engine/modos/modo_cargador.ts	/^      if (key.indexOf("__") === -1 && key) {$/;"	m
if	pilas-engine/modos/modo_cargador.ts	/^      if (this.pilas.recursos.huesos === undefined) {$/;"	m
if	pilas-engine/modos/modo_cargador.ts	/^    if (!this.pilas.opciones.omitir_imagenes_de_pilas) {$/;"	m
if	pilas-engine/modos/modo_cargador.ts	/^    if (this.contador === 60) {$/;"	m
if	pilas-engine/modos/modo_cargador.ts	/^    if (this.pilas.imagenes) {$/;"	m
if	pilas-engine/modos/modo_cargador.ts	/^    if (this.pilas.opciones.modo_simple) {$/;"	m
if	pilas-engine/modos/modo_cargador.ts	/^    if (this.pilas.recursos.atlas) {$/;"	m
if	pilas-engine/modos/modo_cargador.ts	/^    if (this.pilas.recursos.huesos) {$/;"	m
if	pilas-engine/modos/modo_cargador.ts	/^    if (this.pilas.recursos.imagenes) {$/;"	m
if	pilas-engine/modos/modo_cargador.ts	/^    if (this.pilas.recursos.sonidos) {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^        if (this.usar_grilla) {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^      if (!actor_que_se_esta_arrastrando) {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^      if (!gameObject) {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^      if (!gameObject["es_fondo"]) {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^      if (actor_que_se_esta_arrastrando) {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^      if (escena.pilas.utilidades.es_firefox()) {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^      if (gameObject["es_fondo"]) {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^      if (pointer.downElement && pointer.downElement.tagName !== "CANVAS") {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^      if (this.actor_seleccionado) {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^      if (this.pilas.depurador.mostrar_fps) {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^      if (this.tecla_meta_pulsada) {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^    if (!this.pilas.game.hasFocus) {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^    if (actor.imagen.indexOf(":") > -1) {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^    if (actor_a_eliminar[0].figura) {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^    if (actor_a_eliminar[0].sensores) {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^    if (actor_a_eliminar[0]["fondo"]) {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^    if (actor_a_eliminar[0]["texto"]) {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^    if (emitir_evento) {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^    if (evento.key === "ArrowDown") {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^    if (evento.key === "ArrowLeft") {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^    if (evento.key === "ArrowRight") {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^    if (evento.key === "ArrowUp") {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^    if (evento.key === "Meta") {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^    if (evento.key === "d") {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^    if (evento.key === "n") {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^    if (evento.key === "x") {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^    if (fondo.indexOf(":") > -1) {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^    if (gameObject.figura) {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^    if (grilla === 0) {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^    if (sprite.sensores) {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^    if (this.actor_seleccionado && this.actor_seleccionado.id == actor_a_eliminar[0].id) {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^    if (this.fps) {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^    if (this.pilas.depurador.minimapa) {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^    if (this.pilas.depurador.mostrar_fisica) {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^    if (this.sprite_cursor_de_la_grilla) {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^    if (x < bordes.x) {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^    if (x > bordes.width - width \/ 2) {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^    if (y < bordes.y) {$/;"	m
if	pilas-engine/modos/modo_deprecated.ts	/^    if (y > bordes.height - height) {$/;"	m
if	pilas-engine/modos/modo_editor.ts	/^        if (camera.zoom < 0.6) {$/;"	m
if	pilas-engine/modos/modo_editor.ts	/^        if (deltaY < 0) {$/;"	m
if	pilas-engine/modos/modo_editor.ts	/^      if (!boton_medio || !pulsa_sobre_pantalla) {$/;"	m
if	pilas-engine/modos/modo_editor.ts	/^      if (boton_medio || pulsa_sobre_pantalla) {$/;"	m
if	pilas-engine/modos/modo_editor.ts	/^      if (camera.zoom > 3) {$/;"	m
if	pilas-engine/modos/modo_editor.ts	/^      if (deltaY > 0) {$/;"	m
if	pilas-engine/modos/modo_editor.ts	/^      if (p.leftButtonReleased()) {$/;"	m
if	pilas-engine/modos/modo_editor.ts	/^      if (p.middleButtonReleased()) {$/;"	m
if	pilas-engine/modos/modo_editor.ts	/^      if (salir) {$/;"	m
if	pilas-engine/modos/modo_editor.ts	/^    if (actor.imagen.indexOf(":") > -1) {$/;"	m
if	pilas-engine/modos/modo_editor.ts	/^    if (evento.key === "ArrowDown") {$/;"	m
if	pilas-engine/modos/modo_editor.ts	/^    if (evento.key === "ArrowLeft") {$/;"	m
if	pilas-engine/modos/modo_editor.ts	/^    if (evento.key === "ArrowRight") {$/;"	m
if	pilas-engine/modos/modo_editor.ts	/^    if (evento.key === "ArrowUp") {$/;"	m
if	pilas-engine/modos/modo_editor.ts	/^    if (evento.key === "Meta") {$/;"	m
if	pilas-engine/modos/modo_editor.ts	/^    if (evento.key === "d") {$/;"	m
if	pilas-engine/modos/modo_editor.ts	/^    if (evento.key === "n") {$/;"	m
if	pilas-engine/modos/modo_editor.ts	/^    if (evento.key === "x") {$/;"	m
if	pilas-engine/modos/modo_editor.ts	/^    if (pulsa_shift) {$/;"	m
if	pilas-engine/modos/modo_editor.ts	/^    if (this.actor_seleccionado && this.actor_seleccionado.id == actor.id) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^                if (actor_a._bloques_cuando_colisiona) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^                if (actor_b._bloques_cuando_colisiona) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^                if (cancelar_1 || cancelar_2) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^              if (actor_a._vivo && actor_b._vivo) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^            if (figura_1.gameObject && figura_1.gameObject.actor && figura_2.gameObject && figura_2.gameObject.actor) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^          if (actor_a.colisiones.indexOf(actor_b) === -1) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^          if (actor_b.colisiones.indexOf(actor_a) === -1) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^          if (colision) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^        if (cancelar_1 || cancelar_2) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^        if (datos) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^        if (e.activo === false) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^        if (figura_1 && figura_2 && figura_1.gameObject && figura_1.gameObject.actor && figura_2.gameObject && figura_2.gameObject.actor) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^        if (figura_1 && figura_2 && figura_1.sensor_del_actor && figura_2.gameObject && figura_1.colisiones.indexOf(figura_2.gameObject.actor) > -1) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^        if (figura_1 && figura_2 && figura_1.sensor_del_actor && figura_2.gameObject && figura_1.sensor_del_actor !== figura_2.gameObject.actor) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^        if (figura_1 && figura_2 && figura_2.sensor_del_actor && figura_1.gameObject && figura_2.colisiones.indexOf(figura_1.gameObject.actor) > -1) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^        if (figura_1 && figura_2 && figura_2.sensor_del_actor && figura_1.gameObject && figura_2.sensor_del_actor !== figura_1.gameObject.actor) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^        if (this._escena_en_ejecucion._bloques_cuando_hace_click) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^        if (this.pilas["onready"]) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^      if (!datos.es_cambio_de_escena) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^      if (escenas_encontradas.length > 1) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^      if (figura_1 && figura_2 && figura_1.gameObject && figura_1.gameObject.actor && figura_2.gameObject && figura_2.gameObject.actor) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^      if (items_bloques.length > 0) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^      if (this.pilas.depurador.fisica_en_modo_ejecucion) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^      if (this.pilas.escena._bloques_al_actualizar) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^      if (this.pilas.opciones.modo_simple) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^    if (!this.clases[nombre]) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^    if (!this.teclas.has(evento.code)) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^    if (actor._bloques_iniciar) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^    if (animaciones) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^    if (clase) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^    if (codigo.match(re_creacion_de_clase)) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^    if (datos_de_la_escena.gravedad_x !== undefined) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^    if (datos_de_la_escena.gravedad_y !== undefined) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^    if (entidad.habilidades) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^    if (escena._bloques_al_iniciar) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^    if (escena.fondo) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^    if (escenas_encontradas.length === 0) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^    if (evento.key === "Escape") {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^    if (nombres_de_todos_los_actores.indexOf(nombre) === -1) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^    if (proyecto.iniciar) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^    if (this._escena_en_ejecucion) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^    if (this.bloques && this.bloques.escenas) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^    if (this.con_error) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^    if (this.permitir_modo_pausa) {$/;"	m
if	pilas-engine/modos/modo_ejecucion.ts	/^    if (this.pilas.instrumentacion) {$/;"	m
if	pilas-engine/modos/modo_error.ts	/^    if (evento.key === "Escape") {$/;"	m
if	pilas-engine/modos/modo_error.ts	/^    if (mensaje.match(error_funcion)) {$/;"	m
if	pilas-engine/modos/modo_error.ts	/^    if (mensaje.match(error_metodo)) {$/;"	m
if	pilas-engine/modos/modo_error.ts	/^    if (mensaje.match(error_position)) {$/;"	m
if	pilas-engine/modos/modo_error.ts	/^    if (mensaje.match(error_undefined)) {$/;"	m
if	pilas-engine/modos/modo_error.ts	/^    if (this.pilas.opciones.modo_simple) {$/;"	m
if	pilas-engine/modos/modo_pausa.ts	/^        if (entidad.fijo) {$/;"	m
if	pilas-engine/modos/modo_pausa.ts	/^        if (entidad.fondo.includes("dialogo")) {$/;"	m
if	pilas-engine/modos/modo_pausa.ts	/^      if (entidad.fijo) {$/;"	m
if	pilas-engine/modos/modo_pausa.ts	/^      if (entidad.fondo) {$/;"	m
if	pilas-engine/modos/modo_pausa.ts	/^      if (escena.pilas.utilidades.es_firefox()) {$/;"	m
if	pilas-engine/modos/modo_pausa.ts	/^      if (sprite.figura) {$/;"	m
if	pilas-engine/modos/modo_pausa.ts	/^      if (sprite["fondo"]) {$/;"	m
if	pilas-engine/modos/modo_pausa.ts	/^      if (sprite["texto"]) {$/;"	m
if	pilas-engine/modos/modo_pausa.ts	/^      if (this.pilas.depurador.modo_posicion_activado) {$/;"	m
if	pilas-engine/modos/modo_pausa.ts	/^    if (entidad.figura) {$/;"	m
if	pilas-engine/modos/modo_pausa.ts	/^    if (entidad.fijo) {$/;"	m
if	pilas-engine/modos/modo_pausa.ts	/^    if (entidad.hit_activado) {$/;"	m
if	pilas-engine/modos/modo_pausa.ts	/^    if (entidad.texto) {$/;"	m
if	pilas-engine/modos/modo_pausa.ts	/^    if (galeria) {$/;"	m
if	pilas-engine/modos/modo_pausa.ts	/^    if (nombre.indexOf(":") > -1) {$/;"	m
if	pilas-engine/modos/modo_pausa.ts	/^    if (this._anterior_posicion_x_de_la_camara !== x || this._anterior_posicion_y_de_la_camara !== y) {$/;"	m
if	pilas-engine/modos/modo_pausa.ts	/^    if (this._anterior_valor_del_modo_posicion_activado !== this.pilas.depurador.modo_posicion_activado) {$/;"	m
if	pilas-engine/modos/modo_pausa.ts	/^    if (this.fondo) {$/;"	m
if	pilas-engine/modos/modo_pausa.ts	/^    if (this.pilas.depurador.mostrar_fisica) {$/;"	m
if	pilas-engine/modos/modo_pausa.ts	/^    if (this.posicion + 1 < this.pilas.historia.obtener_cantidad_de_posiciones()) {$/;"	m
if	pilas-engine/modos/modo_pausa.ts	/^    if (this.posicion - 1 > 0) {$/;"	m
if	pilas-engine/modos/modo_pausa.ts	/^    if (this.tecla_derecha.isDown) {$/;"	m
if	pilas-engine/modos/modo_pausa.ts	/^    if (this.tecla_izquierda.isDown) {$/;"	m
if	pilas-engine/pilas.ts	/^          if (["-", " ", "."].indexOf(letra) == -1) {$/;"	m
if	pilas-engine/pilas.ts	/^          if (tarea()) {$/;"	m
if	pilas-engine/pilas.ts	/^          if (veces && veces_que_se_ejecuto >= veces) {$/;"	m
if	pilas-engine/pilas.ts	/^        if (!this.existe_un_actor_llamado_en_el_proyecto(diccionario[key])) {$/;"	m
if	pilas-engine/pilas.ts	/^        if ([".", "-", " "].indexOf(key) !== -1) {$/;"	m
if	pilas-engine/pilas.ts	/^        if (this.referencia_de_mapa[letra]) {$/;"	m
if	pilas-engine/pilas.ts	/^        if (typeof key !== "string" || key.length > 1) {$/;"	m
if	pilas-engine/pilas.ts	/^      if (actor._vivo) {$/;"	m
if	pilas-engine/pilas.ts	/^      if (diccionario.hasOwnProperty(key)) {$/;"	m
if	pilas-engine/pilas.ts	/^      if (ids.includes(col.body.gameObject.actor.id)) {$/;"	m
if	pilas-engine/pilas.ts	/^      if (this.sonidos.hay_sonidos_cargados()) {$/;"	m
if	pilas-engine/pilas.ts	/^    if (!actor1.esta_vivo() || !actor2.esta_vivo()) {$/;"	m
if	pilas-engine/pilas.ts	/^    if (!recursos) {$/;"	m
if	pilas-engine/pilas.ts	/^    if (!this.referencia_de_mapa) {$/;"	m
if	pilas-engine/pilas.ts	/^    if (1 \/ dx < 0) {$/;"	m
if	pilas-engine/pilas.ts	/^    if (1 \/ radianes < 0) {$/;"	m
if	pilas-engine/pilas.ts	/^    if (actor === undefined) {$/;"	m
if	pilas-engine/pilas.ts	/^    if (actores.length > 0) {$/;"	m
if	pilas-engine/pilas.ts	/^    if (colisiones.length > 0) {$/;"	m
if	pilas-engine/pilas.ts	/^    if (desde > hasta) {$/;"	m
if	pilas-engine/pilas.ts	/^    if (etiqueta) {$/;"	m
if	pilas-engine/pilas.ts	/^    if (grilla < 1) {$/;"	m
if	pilas-engine/pilas.ts	/^    if (nombre !== "ModoEjecucion") {$/;"	m
if	pilas-engine/pilas.ts	/^    if (opciones === undefined) {$/;"	m
if	pilas-engine/pilas.ts	/^    if (opciones.esperar_antes_de_iniciar) {$/;"	m
if	pilas-engine/pilas.ts	/^    if (opciones.fps === 30) {$/;"	m
if	pilas-engine/pilas.ts	/^    if (opciones.maximizar === undefined) {$/;"	m
if	pilas-engine/pilas.ts	/^    if (opciones.modo_simple) {$/;"	m
if	pilas-engine/pilas.ts	/^    if (pixelart === undefined) {$/;"	m
if	pilas-engine/pilas.ts	/^    if (recursos === undefined || recursos === null) {$/;"	m
if	pilas-engine/pilas.ts	/^    if (this.instrumentacion === undefined) {$/;"	m
if	pilas-engine/pilas.ts	/^    if (this.instrumentacion[id]) {$/;"	m
if	pilas-engine/pilas.ts	/^    if (this.instrumentacion_de_bloques[id]) {$/;"	m
if	pilas-engine/pilas.ts	/^    if (this.musica_en_reproduccion) {$/;"	m
if	pilas-engine/pilas.ts	/^    if (this.sonidos.existe_sonido(nombre)) {$/;"	m
if	pilas-engine/pilas.ts	/^    if (transparente === undefined) {$/;"	m
if	pilas-engine/pilas.ts	/^    if (transparente) {$/;"	m
if	pilas-engine/pilas.ts	/^if (window.location.host) {$/;"	m
if	pilas-engine/sensor.ts	/^    if (this._figura.colisiones.find((actor: Actor) => actor.tiene_etiqueta(etiqueta))) {$/;"	m
if	pilas-engine/utilidades.ts	/^          if (b.charAt(i - 1) == a.charAt(j - 1)) {$/;"	m
if	pilas-engine/utilidades.ts	/^        if (src.hasOwnProperty(key)) obj[key] = src[key];$/;"	m
if	pilas-engine/utilidades.ts	/^      if (a.length == 0) return b.length;$/;"	m
if	pilas-engine/utilidades.ts	/^      if (a.similitud > b.similitud) {$/;"	m
if	pilas-engine/utilidades.ts	/^      if (b.length == 0) return a.length;$/;"	m
if	pilas-engine/utilidades.ts	/^      if (this.pilas.imagenes_precargadas.length === 0) {$/;"	m
if	pilas-engine/utilidades.ts	/^    if (!Array.isArray(valor)) {$/;"	m
if	pilas-engine/utilidades.ts	/^    if (!actor || !actor.esta_vivo()) {$/;"	m
if	pilas-engine/utilidades.ts	/^    if (!tecla) {$/;"	m
if	pilas-engine/utilidades.ts	/^    if (sprite.flipX) {$/;"	m
if	pilas-engine/utilidades.ts	/^    if (sprite.flipY) {$/;"	m
if	pilas-engine/utilidades.ts	/^    if (this.pilas.imagenes_precargadas.indexOf(nombre) === -1) {$/;"	m
if	pilas-engine/utilidades.ts	/^    if (traducciones[tecla]) {$/;"	m
if	pilas-engine/utilidades.ts	/^    if (typeof valor !== "boolean") {$/;"	m
if	pilas-engine/utilidades.ts	/^    if (typeof valor !== "number" || valor !== parseInt(`${valor}`, 10) || valor < 0) {$/;"	m
if	pilas-engine/utilidades.ts	/^    if (typeof valor !== "number" || valor < 0) {$/;"	m
if	pilas-engine/utilidades.ts	/^    if (typeof valor !== "number") {$/;"	m
if	pilas-engine/utilidades.ts	/^    if (valor.length % 2 !== 0) {$/;"	m
ignore	pilas-engine/declaraciones/phaser.d.ts	/^                ignore(entries: Phaser.GameObjects.GameObject | Phaser.GameObjects.GameObject[] | Phaser.GameObjects.Group): this;$/;"	m
ignoreDestroy	pilas-engine/declaraciones/phaser.d.ts	/^            ignoreDestroy: boolean;$/;"	m
ignoreDirtyCache	pilas-engine/declaraciones/phaser.d.ts	/^            ignoreDirtyCache: boolean;$/;"	m
image	pilas-engine/declaraciones/phaser.d.ts	/^                    image: string;$/;"	m
image	pilas-engine/declaraciones/phaser.d.ts	/^                image(x: number, y: number, key: string, frame?: string | number, options?: Phaser.Types.Physics.Matter.MatterBodyConfig): Phaser.Physics.Matter.Image;$/;"	m
image	pilas-engine/declaraciones/phaser.d.ts	/^                image(x: number, y: number, texture: string | Phaser.Textures.Texture, frame?: string | number): Phaser.Types.Physics.Arcade.ImageWithDynamicBody;$/;"	m
image	pilas-engine/declaraciones/phaser.d.ts	/^            image(config: Phaser.Types.GameObjects.Sprite.SpriteConfig, addToScene?: boolean): Phaser.GameObjects.Image;$/;"	m
image	pilas-engine/declaraciones/phaser.d.ts	/^            image(key: string | Phaser.Types.Loader.FileTypes.ImageFileConfig | Phaser.Types.Loader.FileTypes.ImageFileConfig[], url?: string | string[], xhrSettings?: Phaser.Types.Loader.XHRSettingsObject): this;$/;"	m
image	pilas-engine/declaraciones/phaser.d.ts	/^            image(x: number, y: number, texture: string | Phaser.Textures.Texture, frame?: string | number): Phaser.GameObjects.Image;$/;"	m
image	pilas-engine/declaraciones/phaser.d.ts	/^            image: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement;$/;"	m
image	pilas-engine/declaraciones/phaser.d.ts	/^            readonly image: Phaser.Textures.Texture;$/;"	m
imageCollections	pilas-engine/declaraciones/phaser.d.ts	/^            imageCollections: Phaser.Tilemaps.ImageCollection[];$/;"	m
imageCollections	pilas-engine/declaraciones/phaser.d.ts	/^            imageCollections: any[];$/;"	m
imageData	pilas-engine/declaraciones/phaser.d.ts	/^            imageData: ImageData;$/;"	m
imageHeight	pilas-engine/declaraciones/phaser.d.ts	/^            readonly imageHeight: number;$/;"	m
imageLoadType	pilas-engine/declaraciones/phaser.d.ts	/^            imageLoadType: string;$/;"	m
imageMarge	pilas-engine/declaraciones/phaser.d.ts	/^            readonly imageMarge: number;$/;"	m
imageSpacing	pilas-engine/declaraciones/phaser.d.ts	/^            readonly imageSpacing: number;$/;"	m
imageStack	pilas-engine/declaraciones/phaser.d.ts	/^                imageStack(key: string, frame: string | number, x: number, y: number, columns: number, rows: number, columnGap?: number, rowGap?: number, options?: Phaser.Types.Physics.Matter.MatterBodyConfig): MatterJS.CompositeType;$/;"	m
imageWidth	pilas-engine/declaraciones/phaser.d.ts	/^            readonly imageWidth: number;$/;"	m
imagen	pilas-engine/actores/-actor-base.ts	/^      imagen: this.imagen,$/;"	m
imagen	pilas-engine/actores/-actor-base.ts	/^    imagen: "imagenes:basicos\/sin_imagen",$/;"	m
imagen	pilas-engine/actores/-actor-base.ts	/^  get imagen(): string {$/;"	m
imagen	pilas-engine/actores/-actor-base.ts	/^  set imagen(nombre: string) {$/;"	m
imagen	pilas-engine/actores/-actor-texto-base.ts	/^    imagen: "imagenes:basicos\/invisible",$/;"	m
imagen	pilas-engine/actores/-pizarra-base.ts	/^    imagen: "imagenes:basicos\/sin_imagen"$/;"	m
imagen	pilas-engine/actores/aceituna.ts	/^    imagen: "imagenes:objetos\/aceituna"$/;"	m
imagen	pilas-engine/actores/actor.ts	/^    imagen: "imagenes:basicos\/sin_imagen"$/;"	m
imagen	pilas-engine/actores/barra_de_energia.ts	/^    imagen: "imagenes:basicos\/barra_de_energia"$/;"	m
imagen	pilas-engine/actores/boton.ts	/^    imagen: "imagenes:basicos\/invisible",$/;"	m
imagen	pilas-engine/actores/boton_abajo.ts	/^    imagen: "imagenes:botones\/botones_abajo",$/;"	m
imagen	pilas-engine/actores/boton_activable.ts	/^    imagen: "imagenes:basicos\/invisible",$/;"	m
imagen	pilas-engine/actores/boton_arriba.ts	/^    imagen: "imagenes:botones\/botones_arriba",$/;"	m
imagen	pilas-engine/actores/boton_derecha.ts	/^    imagen: "imagenes:botones\/botones_derecha",$/;"	m
imagen	pilas-engine/actores/boton_espacio.ts	/^    imagen: "imagenes:botones\/botones_a",$/;"	m
imagen	pilas-engine/actores/boton_izquierda.ts	/^    imagen: "imagenes:botones\/botones_izquierda",$/;"	m
imagen	pilas-engine/actores/caja.ts	/^    imagen: "imagenes:objetos\/caja",$/;"	m
imagen	pilas-engine/actores/chispa.ts	/^    imagen: "imagenes:efectos\/chispa-3",$/;"	m
imagen	pilas-engine/actores/conejo.ts	/^    imagen: "imagenes:conejo\/conejo_parado1",$/;"	m
imagen	pilas-engine/actores/deslizador.ts	/^    imagen: "imagenes:interfaz\/interfaz_linea",$/;"	m
imagen	pilas-engine/actores/explosion.ts	/^    imagen: "imagenes:explosion\/explosion_001",$/;"	m
imagen	pilas-engine/actores/gallina.ts	/^    imagen: "imagenes:gallina\/gallina_vuela_3",$/;"	m
imagen	pilas-engine/actores/golpe.ts	/^    imagen: "imagenes:efectos\/golpe-3",$/;"	m
imagen	pilas-engine/actores/humo.ts	/^    imagen: "imagenes:efectos\/humo-03",$/;"	m
imagen	pilas-engine/actores/interruptor_de_gravedad.ts	/^    imagen: "imagenes:botones\/interruptor-si",$/;"	m
imagen	pilas-engine/actores/laser.ts	/^    imagen: "imagenes:disparos\/laser",$/;"	m
imagen	pilas-engine/actores/logo.ts	/^    imagen: "imagenes:basicos\/logo"$/;"	m
imagen	pilas-engine/actores/moneda.ts	/^    imagen: "imagenes:objetos\/moneda",$/;"	m
imagen	pilas-engine/actores/nave.ts	/^    imagen: "imagenes:nave\/nave_reposo"$/;"	m
imagen	pilas-engine/actores/nube.ts	/^    imagen: "decoracion:objetos\/nube"$/;"	m
imagen	pilas-engine/actores/nube_animada.ts	/^    imagen: "decoracion:objetos\/decoracion_nube_1",$/;"	m
imagen	pilas-engine/actores/pantalla_completa.ts	/^    imagen: "imagenes:botones\/pantalla-completa",$/;"	m
imagen	pilas-engine/actores/pared.ts	/^    imagen: "imagenes:plataformas\/pared",$/;"	m
imagen	pilas-engine/actores/pelota.ts	/^    imagen: "imagenes:objetos\/pelota",$/;"	m
imagen	pilas-engine/actores/pizarra.ts	/^    imagen: "imagenes:basicos\/sin_imagen"$/;"	m
imagen	pilas-engine/actores/plataforma.ts	/^    imagen: "imagenes:plataformas\/plataforma",$/;"	m
imagen	pilas-engine/actores/puntaje.ts	/^    imagen: "imagenes:basicos\/invisible",$/;"	m
imagen	pilas-engine/actores/reiniciar_escena.ts	/^    imagen: "imagenes:basicos\/invisible",$/;"	m
imagen	pilas-engine/actores/robot.ts	/^    imagen: "imagenes:objetos\/robot",$/;"	m
imagen	pilas-engine/actores/suelo.ts	/^    imagen: "imagenes:plataformas\/suelo",$/;"	m
imagen	pilas-engine/actores/techo.ts	/^    imagen: "imagenes:plataformas\/techo",$/;"	m
imagen	pilas-engine/actores/texto.ts	/^    imagen: "imagenes:basicos\/invisible",$/;"	m
imagenes	pilas-engine/pilas.ts	/^        imagenes: [],$/;"	m
imagenes	pilas-engine/pilas.ts	/^  imagenes: any = [];$/;"	m
imagenes_precargadas	pilas-engine/pilas.ts	/^  imagenes_precargadas: string[] = [];$/;"	m
images	pilas-engine/declaraciones/phaser.d.ts	/^            images: any[];$/;"	m
images	pilas-engine/declaraciones/phaser.d.ts	/^            readonly images: any[];$/;"	m
immovable	pilas-engine/declaraciones/phaser.d.ts	/^                immovable: boolean;$/;"	m
imprimir_en_consola	pilas-engine/pilas.ts	/^  imprimir_en_consola(mensaje: any) {$/;"	m
impulsar	pilas-engine/actores/-actor-base.ts	/^  impulsar(x: number, y: number) {$/;"	m
inFocus	pilas-engine/declaraciones/phaser.d.ts	/^            readonly inFocus: boolean;$/;"	m
inReverse	pilas-engine/declaraciones/phaser.d.ts	/^            inReverse: boolean;$/;"	m
inc	pilas-engine/declaraciones/phaser.d.ts	/^            inc(key: string | object, data?: any): Phaser.Data.DataManager;$/;"	m
incData	pilas-engine/declaraciones/phaser.d.ts	/^            incData(key: string | object, data?: any): this;$/;"	m
incStats	pilas-engine/declaraciones/phaser.d.ts	/^        incStats(data: object): this;$/;"	m
incX	pilas-engine/declaraciones/phaser.d.ts	/^            incX(value: number, step?: number): this;$/;"	m
incXY	pilas-engine/declaraciones/phaser.d.ts	/^            incXY(x: number, y?: number, stepX?: number, stepY?: number): this;$/;"	m
incY	pilas-engine/declaraciones/phaser.d.ts	/^            incY(value: number, step?: number): this;$/;"	m
index	pilas-engine/declaraciones/phaser.d.ts	/^                    index: number;$/;"	m
index	pilas-engine/declaraciones/phaser.d.ts	/^                index: number;$/;"	m
index	pilas-engine/declaraciones/phaser.d.ts	/^            index: number;$/;"	m
indexes	pilas-engine/declaraciones/phaser.d.ts	/^            indexes: any[];$/;"	m
indicador_de_texto	pilas-engine/modos/modo_pausa.ts	/^  indicador_de_texto: any;$/;"	m
indice	pilas-engine/control.ts	/^  indice: number;$/;"	m
indices	pilas-engine/declaraciones/phaser.d.ts	/^                    indices: number[];$/;"	m
infinite	pilas-engine/declaraciones/phaser.d.ts	/^            infinite: boolean;$/;"	m
inflight	pilas-engine/declaraciones/phaser.d.ts	/^            inflight: Phaser.Structs.Set<Phaser.Loader.File>;$/;"	m
ingles	pilas-engine/colores.ts	/^        ingles: "PINK"$/;"	m
ingles	pilas-engine/colores.ts	/^        ingles: "black"$/;"	m
ingles	pilas-engine/colores.ts	/^        ingles: "blue"$/;"	m
ingles	pilas-engine/colores.ts	/^        ingles: "brown"$/;"	m
ingles	pilas-engine/colores.ts	/^        ingles: "cyan"$/;"	m
ingles	pilas-engine/colores.ts	/^        ingles: "gray"$/;"	m
ingles	pilas-engine/colores.ts	/^        ingles: "green"$/;"	m
ingles	pilas-engine/colores.ts	/^        ingles: "orange"$/;"	m
ingles	pilas-engine/colores.ts	/^        ingles: "red"$/;"	m
ingles	pilas-engine/colores.ts	/^        ingles: "violet"$/;"	m
ingles	pilas-engine/colores.ts	/^        ingles: "white"$/;"	m
ingles	pilas-engine/colores.ts	/^        ingles: "yellow"$/;"	m
ingles	pilas-engine/colores.ts	/^  ingles: string;$/;"	m
inicializar_actor	pilas-engine/modos/modo_ejecucion.ts	/^  inicializar_actor(actor: any, entidad: any) {$/;"	m
iniciar	pilas-engine/actores/-actor-base.ts	/^  iniciar() {}$/;"	m
iniciar	pilas-engine/actores/-actor-texto-base.ts	/^  iniciar() {}$/;"	m
iniciar	pilas-engine/actores/-actor.ts	/^  iniciar() {}$/;"	m
iniciar	pilas-engine/actores/-pizarra-base.ts	/^  iniciar() {$/;"	m
iniciar	pilas-engine/actores/aceituna.ts	/^  iniciar() {$/;"	m
iniciar	pilas-engine/actores/actor.ts	/^  iniciar() {}$/;"	m
iniciar	pilas-engine/actores/barra_de_energia.ts	/^  iniciar() {$/;"	m
iniciar	pilas-engine/actores/boton_abajo.ts	/^  iniciar() {$/;"	m
iniciar	pilas-engine/actores/boton_arriba.ts	/^  iniciar() {$/;"	m
iniciar	pilas-engine/actores/boton_derecha.ts	/^  iniciar() {$/;"	m
iniciar	pilas-engine/actores/boton_espacio.ts	/^  iniciar() {$/;"	m
iniciar	pilas-engine/actores/boton_izquierda.ts	/^  iniciar() {$/;"	m
iniciar	pilas-engine/actores/caja.ts	/^  iniciar() {}$/;"	m
iniciar	pilas-engine/actores/chispa.ts	/^  iniciar() {$/;"	m
iniciar	pilas-engine/actores/conejo.ts	/^  iniciar() {$/;"	m
iniciar	pilas-engine/actores/deslizador.ts	/^  iniciar() {$/;"	m
iniciar	pilas-engine/actores/explosion.ts	/^  iniciar() {$/;"	m
iniciar	pilas-engine/actores/gallina.ts	/^  iniciar() {$/;"	m
iniciar	pilas-engine/actores/golpe.ts	/^  iniciar() {$/;"	m
iniciar	pilas-engine/actores/humo.ts	/^  iniciar() {$/;"	m
iniciar	pilas-engine/actores/laser.ts	/^  iniciar() {$/;"	m
iniciar	pilas-engine/actores/logo.ts	/^  iniciar() {}$/;"	m
iniciar	pilas-engine/actores/moneda.ts	/^  iniciar() {$/;"	m
iniciar	pilas-engine/actores/nave.ts	/^  iniciar() {$/;"	m
iniciar	pilas-engine/actores/nube.ts	/^  iniciar() {}$/;"	m
iniciar	pilas-engine/actores/nube_animada.ts	/^  iniciar() {$/;"	m
iniciar	pilas-engine/actores/pantalla_completa.ts	/^  iniciar() {$/;"	m
iniciar	pilas-engine/actores/pared.ts	/^  iniciar() {}$/;"	m
iniciar	pilas-engine/actores/pelota.ts	/^  iniciar() {}$/;"	m
iniciar	pilas-engine/actores/pizarra.ts	/^  iniciar() {$/;"	m
iniciar	pilas-engine/actores/plataforma.ts	/^  iniciar() {}$/;"	m
iniciar	pilas-engine/actores/puntaje.ts	/^  iniciar() {$/;"	m
iniciar	pilas-engine/actores/reiniciar_escena.ts	/^  iniciar() {$/;"	m
iniciar	pilas-engine/actores/robot.ts	/^  iniciar() {$/;"	m
iniciar	pilas-engine/actores/suelo.ts	/^  iniciar() {}$/;"	m
iniciar	pilas-engine/actores/techo.ts	/^  iniciar() {}$/;"	m
iniciar	pilas-engine/comportamientos/-comportamiento.ts	/^  iniciar(parametros: any) {}$/;"	m
iniciar	pilas-engine/comportamientos/aparecer.ts	/^  iniciar(argumentos) {$/;"	m
iniciar	pilas-engine/comportamientos/desaparecer.ts	/^  iniciar(argumentos) {$/;"	m
iniciar	pilas-engine/comportamientos/eliminar.ts	/^  iniciar() {}$/;"	m
iniciar	pilas-engine/comportamientos/mover.ts	/^  iniciar(argumentos) {$/;"	m
iniciar	pilas-engine/escenas/-escena.ts	/^  iniciar() {}$/;"	m
iniciar	pilas-engine/escenas/normal.ts	/^  iniciar() {}$/;"	m
iniciar	pilas-engine/habilidades/-habilidad.ts	/^  iniciar() {}$/;"	m
iniciar	pilas-engine/habilidades/arrastrable.ts	/^  iniciar() {$/;"	m
iniciar	pilas-engine/habilidades/mover-con-el-teclado.ts	/^  iniciar() {}$/;"	m
iniciar	pilas-engine/habilidades/oscilar-rotacion.ts	/^  iniciar() {}$/;"	m
iniciar	pilas-engine/habilidades/oscilar-transparencia.ts	/^  iniciar() {}$/;"	m
iniciar	pilas-engine/habilidades/oscilar-verticalmente.ts	/^  iniciar() {}$/;"	m
iniciar	pilas-engine/habilidades/rotar-constantemente.ts	/^  iniciar() {}$/;"	m
iniciar	pilas-engine/habilidades/seguir-al-mouse-lentamente.ts	/^  iniciar() {}$/;"	m
iniciar	pilas-engine/habilidades/seguir-al-mouse.ts	/^  iniciar() {}$/;"	m
iniciar	pilas-engine/modos/modo_cargador.ts	/^                    iniciar() {$/;"	m
iniciar	pilas-engine/pilas.ts	/^  iniciar(ancho: number, alto: number, recursos: any, opciones: any = {}, imagenes: any = [], omitir_imagenes_de_pilas: boolean = false) {$/;"	m
iniciar_animaciones_pendientes	pilas-engine/escenas/-escena-base.ts	/^  iniciar_animaciones_pendientes() {$/;"	m
iniciar_estado	pilas-engine/automata.ts	/^  iniciar_estado(nombre: string) {$/;"	m
iniciar_phaser	pilas-engine/pilas.ts	/^  iniciar_phaser(ancho: number, alto: number, recursos: any, opciones: any, imagenes: any) {$/;"	m
iniciar_phaser_desde_configuracion_y_cargar_escenas	pilas-engine/pilas.ts	/^  private iniciar_phaser_desde_configuracion_y_cargar_escenas(configuracion) {$/;"	m
init	pilas-engine/declaraciones/phaser.d.ts	/^                init(): void;$/;"	m
init	pilas-engine/declaraciones/phaser.d.ts	/^                init(config: object): this;$/;"	m
init	pilas-engine/declaraciones/phaser.d.ts	/^            init(): boolean;$/;"	m
init	pilas-engine/declaraciones/phaser.d.ts	/^            init(data?: any): void;$/;"	m
init	pilas-engine/declaraciones/phaser.d.ts	/^            init(game: Phaser.Game): void;$/;"	m
init	pilas-engine/declaraciones/phaser.d.ts	/^            init(seeds: string | string[]): void;$/;"	m
init	pilas-engine/declaraciones/phaser.d.ts	/^            protected init(game: Phaser.Game): void;$/;"	m
init	pilas-engine/modos/modo_cargador.ts	/^  init(data) {$/;"	m
initPipeline	pilas-engine/declaraciones/phaser.d.ts	/^                initPipeline(pipeline: string | Phaser.Renderer.WebGL.WebGLPipeline): boolean;$/;"	m
initPipeline	pilas-engine/declaraciones/phaser.d.ts	/^            initPipeline(pipeline: string | Phaser.Renderer.WebGL.WebGLPipeline): boolean;$/;"	m
initRTL	pilas-engine/declaraciones/phaser.d.ts	/^            initRTL(): void;$/;"	m
innerRadius	pilas-engine/declaraciones/phaser.d.ts	/^            innerRadius: number;$/;"	m
input	pilas-engine/declaraciones/phaser.d.ts	/^            input: Phaser.Types.Input.InteractiveObject;$/;"	m
input	pilas-engine/declaraciones/phaser.d.ts	/^        input: Phaser.Device.Input;$/;"	m
input	pilas-engine/declaraciones/phaser.d.ts	/^        input: Phaser.Input.InputManager;$/;"	m
input	pilas-engine/declaraciones/phaser.d.ts	/^        input: Phaser.Input.InputPlugin;$/;"	m
input	pilas-engine/pilas.ts	/^      input: {$/;"	m
inputActivePointers	pilas-engine/declaraciones/phaser.d.ts	/^            readonly inputActivePointers: number;$/;"	m
inputEnabled	pilas-engine/declaraciones/phaser.d.ts	/^                inputEnabled: boolean;$/;"	m
inputGamepad	pilas-engine/declaraciones/phaser.d.ts	/^            readonly inputGamepad: boolean;$/;"	m
inputGamepadEventTarget	pilas-engine/declaraciones/phaser.d.ts	/^            readonly inputGamepadEventTarget: any;$/;"	m
inputKeyboard	pilas-engine/declaraciones/phaser.d.ts	/^            readonly inputKeyboard: boolean;$/;"	m
inputKeyboardCapture	pilas-engine/declaraciones/phaser.d.ts	/^            readonly inputKeyboardCapture: number[];$/;"	m
inputKeyboardEventTarget	pilas-engine/declaraciones/phaser.d.ts	/^            readonly inputKeyboardEventTarget: any;$/;"	m
inputMouse	pilas-engine/declaraciones/phaser.d.ts	/^            readonly inputMouse: boolean | object;$/;"	m
inputMouseEventTarget	pilas-engine/declaraciones/phaser.d.ts	/^            readonly inputMouseEventTarget: any;$/;"	m
inputMousePreventDefaultDown	pilas-engine/declaraciones/phaser.d.ts	/^            readonly inputMousePreventDefaultDown: boolean;$/;"	m
inputMousePreventDefaultMove	pilas-engine/declaraciones/phaser.d.ts	/^            readonly inputMousePreventDefaultMove: boolean;$/;"	m
inputMousePreventDefaultUp	pilas-engine/declaraciones/phaser.d.ts	/^            readonly inputMousePreventDefaultUp: boolean;$/;"	m
inputMousePreventDefaultWheel	pilas-engine/declaraciones/phaser.d.ts	/^            readonly inputMousePreventDefaultWheel: boolean;$/;"	m
inputSmoothFactor	pilas-engine/declaraciones/phaser.d.ts	/^            readonly inputSmoothFactor: number;$/;"	m
inputTouch	pilas-engine/declaraciones/phaser.d.ts	/^            readonly inputTouch: boolean;$/;"	m
inputTouchCapture	pilas-engine/declaraciones/phaser.d.ts	/^            readonly inputTouchCapture: boolean;$/;"	m
inputTouchEventTarget	pilas-engine/declaraciones/phaser.d.ts	/^            readonly inputTouchEventTarget: any;$/;"	m
inputWindowEvents	pilas-engine/declaraciones/phaser.d.ts	/^            readonly inputWindowEvents: boolean;$/;"	m
install	pilas-engine/declaraciones/phaser.d.ts	/^            function install(loader: Phaser.Loader.LoaderPlugin): void;$/;"	f
install	pilas-engine/declaraciones/phaser.d.ts	/^            function install(target: Phaser.Input.InputPlugin): void;$/;"	f
install	pilas-engine/declaraciones/phaser.d.ts	/^            install(key: string, plugin: Function, start?: boolean, mapping?: string, data?: any): Phaser.Plugins.BasePlugin;$/;"	m
installGlobalPlugins	pilas-engine/declaraciones/phaser.d.ts	/^            readonly installGlobalPlugins: any;$/;"	m
installScenePlugin	pilas-engine/declaraciones/phaser.d.ts	/^            installScenePlugin(key: string, plugin: Function, mapping?: string, addToScene?: Phaser.Scene, fromLoader?: boolean): void;$/;"	m
installScenePlugins	pilas-engine/declaraciones/phaser.d.ts	/^            readonly installScenePlugins: any;$/;"	m
instance	pilas-engine/declaraciones/phaser.d.ts	/^    instance: any;$/;"	m
instancedArraysExtension	pilas-engine/declaraciones/phaser.d.ts	/^                instancedArraysExtension: ANGLE_instanced_arrays;$/;"	m
instancia_de_proyecto	pilas-engine/modos/modo_ejecucion.ts	/^  instancia_de_proyecto: any = null;$/;"	m
instanciar_escena	pilas-engine/modos/modo_ejecucion.ts	/^  instanciar_escena(nombre: string) {$/;"	m
instanciar_proyecto	pilas-engine/modos/modo_ejecucion.ts	/^  instanciar_proyecto() {$/;"	m
instrumentacion	pilas-engine/modos/modo_ejecucion.ts	/^      instrumentacion: this.pilas.instrumentacion,$/;"	m
instrumentacion	pilas-engine/pilas.ts	/^  instrumentacion: any;$/;"	m
instrumentacion_de_bloques	pilas-engine/modos/modo_ejecucion.ts	/^      instrumentacion_de_bloques: this.pilas.instrumentacion_de_bloques$/;"	m
instrumentacion_de_bloques	pilas-engine/pilas.ts	/^  instrumentacion_de_bloques: any;$/;"	m
integer	pilas-engine/declaraciones/phaser.d.ts	/^            integer(): number;$/;"	m
integerInRange	pilas-engine/declaraciones/phaser.d.ts	/^            integerInRange(min: number, max: number): number;$/;"	m
intensity	pilas-engine/declaraciones/phaser.d.ts	/^                    intensity: Phaser.Math.Vector2;$/;"	m
intensity	pilas-engine/declaraciones/phaser.d.ts	/^            intensity: number;$/;"	m
interactivo	pilas-engine/actores/-actor-base.ts	/^  get interactivo() {$/;"	m
interactivo	pilas-engine/actores/-actor-base.ts	/^  set interactivo(activo: boolean) {$/;"	m
intercambiar_posiciones_al_azar	pilas-engine/pilas.ts	/^  intercambiar_posiciones_al_azar(lista_de_actores) {$/;"	m
internalFormat	pilas-engine/declaraciones/phaser.d.ts	/^                internalFormat: GLenum;$/;"	m
interpolateBezier	pilas-engine/libs/spriter.ts	/^function interpolateBezier(x1, y1, x2, y2, t) {$/;"	f
interpolateCubic	pilas-engine/libs/spriter.ts	/^function interpolateCubic(a, b, c, d, t) {$/;"	f
interpolateLinear	pilas-engine/libs/spriter.ts	/^function interpolateLinear(a, b, t) {$/;"	f
interpolateQuadratic	pilas-engine/libs/spriter.ts	/^function interpolateQuadratic(a, b, c, t) {$/;"	f
interpolateQuartic	pilas-engine/libs/spriter.ts	/^function interpolateQuartic(a, b, c, d, e, t) {$/;"	f
interpolateQuintic	pilas-engine/libs/spriter.ts	/^function interpolateQuintic(a, b, c, d, e, f, t) {$/;"	f
interruptor_de_gravedad	pilas-engine/actores.ts	/^  interruptor_de_gravedad() {$/;"	m
interruptor_de_gravedad	pilas-engine/actores/interruptor_de_gravedad.ts	/^class interruptor_de_gravedad extends Actor {$/;"	c
intersect	pilas-engine/declaraciones/phaser.d.ts	/^            intersect(set: Phaser.Structs.Set<T>): Phaser.Structs.Set<T>;$/;"	m
intersect	pilas-engine/laser.ts	/^  static intersect(rayA: any, rayB: any) {$/;"	m
intersectBody	pilas-engine/declaraciones/phaser.d.ts	/^                intersectBody(body: Phaser.Types.Physics.Matter.MatterBody, bodies?: Phaser.Types.Physics.Matter.MatterBody[]): Phaser.Types.Physics.Matter.MatterBody[];$/;"	m
intersectPoint	pilas-engine/declaraciones/phaser.d.ts	/^                intersectPoint(x: number, y: number, bodies?: Phaser.Types.Physics.Matter.MatterBody[]): Phaser.Types.Physics.Matter.MatterBody[];$/;"	m
intersectRay	pilas-engine/declaraciones/phaser.d.ts	/^                intersectRay(x1: number, y1: number, x2: number, y2: number, rayWidth?: number, bodies?: Phaser.Types.Physics.Matter.MatterBody[]): Phaser.Types.Physics.Matter.MatterBody[];$/;"	m
intersectRect	pilas-engine/declaraciones/phaser.d.ts	/^                intersectRect(x: number, y: number, width: number, height: number, outside?: boolean, bodies?: Phaser.Types.Physics.Matter.MatterBody[]): Phaser.Types.Physics.Matter.MatterBody[];$/;"	m
intersects	pilas-engine/declaraciones/phaser.d.ts	/^                intersects(body1: Phaser.Physics.Arcade.Body, body2: Phaser.Physics.Arcade.Body): boolean;$/;"	m
intersects	pilas-engine/declaraciones/phaser.d.ts	/^            intersects(x: number, y: number, right: number, bottom: number): boolean;$/;"	m
inverseMass	pilas-engine/declaraciones/phaser.d.ts	/^                    inverseMass: number;$/;"	m
invert	pilas-engine/declaraciones/phaser.d.ts	/^                invert(): this;$/;"	m
invert	pilas-engine/declaraciones/phaser.d.ts	/^            invert(): Phaser.Math.Matrix3;$/;"	m
invert	pilas-engine/declaraciones/phaser.d.ts	/^            invert(): Phaser.Math.Quaternion;$/;"	m
invert	pilas-engine/declaraciones/phaser.d.ts	/^            invert(): this;$/;"	m
invert	pilas-engine/libs/spriter.ts	/^  static invert(space, out) {$/;"	m
invertAlpha	pilas-engine/declaraciones/phaser.d.ts	/^                invertAlpha: boolean;$/;"	m
inverted	pilas-engine/laser.ts	/^  get inverted() {$/;"	m
isActive	pilas-engine/declaraciones/phaser.d.ts	/^                    isActive: boolean;$/;"	m
isActive	pilas-engine/declaraciones/phaser.d.ts	/^                isActive(): boolean;$/;"	m
isActive	pilas-engine/declaraciones/phaser.d.ts	/^            isActive(): boolean;$/;"	m
isActive	pilas-engine/declaraciones/phaser.d.ts	/^            isActive(key: string | Phaser.Scene): boolean;$/;"	m
isActive	pilas-engine/declaraciones/phaser.d.ts	/^            isActive(key: string): boolean;$/;"	m
isActive	pilas-engine/declaraciones/phaser.d.ts	/^            isActive(key?: string | Phaser.Scene): boolean;$/;"	m
isAlive	pilas-engine/declaraciones/phaser.d.ts	/^                isAlive(): boolean;$/;"	m
isBooted	pilas-engine/declaraciones/phaser.d.ts	/^                isBooted: boolean;$/;"	m
isBooted	pilas-engine/declaraciones/phaser.d.ts	/^            readonly isBooted: boolean;$/;"	m
isBooted	pilas-engine/declaraciones/phaser.d.ts	/^        readonly isBooted: boolean;$/;"	m
isButtonDown	pilas-engine/declaraciones/phaser.d.ts	/^                isButtonDown(index: number): boolean;$/;"	m
isCanvas	pilas-engine/declaraciones/phaser.d.ts	/^            isCanvas: boolean;$/;"	m
isCircle	pilas-engine/declaraciones/phaser.d.ts	/^                isCircle: boolean;$/;"	m
isComplete	pilas-engine/declaraciones/phaser.d.ts	/^                    readonly isComplete: boolean;$/;"	m
isCounterClockwise	pilas-engine/declaraciones/phaser.d.ts	/^                isCounterClockwise(z: number): boolean;$/;"	m
isCounterClockwise	pilas-engine/declaraciones/phaser.d.ts	/^                isCounterClockwise: boolean;$/;"	m
isCropped	pilas-engine/declaraciones/phaser.d.ts	/^                isCropped: boolean;$/;"	m
isCropped	pilas-engine/declaraciones/phaser.d.ts	/^            isCropped: boolean;$/;"	m
isCurrent	pilas-engine/declaraciones/phaser.d.ts	/^                isCurrent(pipeline: Phaser.Renderer.WebGL.WebGLPipeline, currentShader?: Phaser.Renderer.WebGL.WebGLShader): boolean;$/;"	m
isDirty	pilas-engine/declaraciones/phaser.d.ts	/^            isDirty(): boolean;$/;"	m
isDown	pilas-engine/declaraciones/phaser.d.ts	/^                isDown: boolean;$/;"	m
isDown	pilas-engine/declaraciones/phaser.d.ts	/^            isDown: boolean;$/;"	m
isEmpty	pilas-engine/declaraciones/phaser.d.ts	/^            isEmpty(): boolean;$/;"	m
isEnabled	pilas-engine/declaraciones/phaser.d.ts	/^                function isEnabled(context: CanvasRenderingContext2D | WebGLRenderingContext): boolean;$/;"	f
isFilled	pilas-engine/declaraciones/phaser.d.ts	/^            isFilled: boolean;$/;"	m
isFirst	pilas-engine/declaraciones/phaser.d.ts	/^            readonly isFirst: boolean;$/;"	m
isFollowing	pilas-engine/declaraciones/phaser.d.ts	/^                isFollowing(): boolean;$/;"	m
isFollowing	pilas-engine/declaraciones/phaser.d.ts	/^            isFollowing(): boolean;$/;"	m
isFull	pilas-engine/declaraciones/phaser.d.ts	/^            isFull(): boolean;$/;"	m
isFullscreen	pilas-engine/declaraciones/phaser.d.ts	/^            readonly isFullscreen: boolean;$/;"	m
isGLTexture	pilas-engine/declaraciones/phaser.d.ts	/^            isGLTexture: boolean;$/;"	m
isGameLandscape	pilas-engine/declaraciones/phaser.d.ts	/^            readonly isGameLandscape: boolean;$/;"	m
isGamePortrait	pilas-engine/declaraciones/phaser.d.ts	/^            readonly isGamePortrait: boolean;$/;"	m
isHorizontal	pilas-engine/laser.ts	/^  get isHorizontal() {$/;"	m
isInView	pilas-engine/declaraciones/phaser.d.ts	/^                isInView(camera: Phaser.Cameras.Scene2D.Camera, hideCCW: boolean, z: number, alpha: number, a: number, b: number, c: number, d: number, e: number, f: number, roundPixels: boolean): boolean;$/;"	m
isInteresting	pilas-engine/declaraciones/phaser.d.ts	/^            isInteresting(collides: boolean, faces: boolean): boolean;$/;"	m
isInternal	pilas-engine/actores/-actor-base.ts	/^            isInternal: e.isInternal$/;"	m
isKeyFrame	pilas-engine/declaraciones/phaser.d.ts	/^            isKeyFrame: boolean;$/;"	m
isLandscape	pilas-engine/declaraciones/phaser.d.ts	/^            readonly isLandscape: boolean;$/;"	m
isLast	pilas-engine/declaraciones/phaser.d.ts	/^            readonly isLast: boolean;$/;"	m
isLoading	pilas-engine/declaraciones/phaser.d.ts	/^            isLoading(): boolean;$/;"	m
isLocked	pilas-engine/declaraciones/phaser.d.ts	/^            protected isLocked(sound: Phaser.Sound.HTML5AudioSound, prop: string, value?: any): boolean;$/;"	m
isMuted	pilas-engine/declaraciones/phaser.d.ts	/^            isMuted(): boolean;$/;"	m
isNewNormalMap	pilas-engine/declaraciones/phaser.d.ts	/^                isNewNormalMap(texture: WebGLTexture, normalMap: WebGLTexture): boolean;$/;"	m
isOffsetAbsolute	pilas-engine/declaraciones/phaser.d.ts	/^            isOffsetAbsolute(value: number): boolean;$/;"	m
isOffsetRelative	pilas-engine/declaraciones/phaser.d.ts	/^            isOffsetRelative(value: string): boolean;$/;"	m
isOver	pilas-engine/declaraciones/phaser.d.ts	/^            readonly isOver: boolean;$/;"	m
isParent	pilas-engine/declaraciones/phaser.d.ts	/^            isParent: boolean;$/;"	m
isPaused	pilas-engine/declaraciones/phaser.d.ts	/^                isPaused: boolean;$/;"	m
isPaused	pilas-engine/declaraciones/phaser.d.ts	/^            isPaused(): boolean;$/;"	m
isPaused	pilas-engine/declaraciones/phaser.d.ts	/^            isPaused(key: string | Phaser.Scene): boolean;$/;"	m
isPaused	pilas-engine/declaraciones/phaser.d.ts	/^            isPaused(key?: string | Phaser.Scene): boolean;$/;"	m
isPaused	pilas-engine/declaraciones/phaser.d.ts	/^            readonly isPaused: boolean;$/;"	m
isPlaying	pilas-engine/declaraciones/phaser.d.ts	/^            isPlaying(): boolean;$/;"	m
isPlaying	pilas-engine/declaraciones/phaser.d.ts	/^            isPlaying: boolean;$/;"	m
isPlaying	pilas-engine/declaraciones/phaser.d.ts	/^            readonly isPlaying: boolean;$/;"	m
isPortrait	pilas-engine/declaraciones/phaser.d.ts	/^            readonly isPortrait: boolean;$/;"	m
isPostFX	pilas-engine/declaraciones/phaser.d.ts	/^                readonly isPostFX: boolean;$/;"	m
isPowerOf2	pilas-engine/declaraciones/phaser.d.ts	/^            isPowerOf2: boolean;$/;"	m
isProcessing	pilas-engine/declaraciones/phaser.d.ts	/^            readonly isProcessing: boolean;$/;"	m
isReady	pilas-engine/declaraciones/phaser.d.ts	/^            isReady(): boolean;$/;"	m
isReadyToProcess	pilas-engine/declaraciones/phaser.d.ts	/^            isReadyToProcess(): boolean;$/;"	m
isRenderTexture	pilas-engine/declaraciones/phaser.d.ts	/^            isRenderTexture: boolean;$/;"	m
isReversed	pilas-engine/declaraciones/phaser.d.ts	/^            isReversed: boolean;$/;"	m
isRunning	pilas-engine/declaraciones/phaser.d.ts	/^                    readonly isRunning: boolean;$/;"	m
isRunning	pilas-engine/declaraciones/phaser.d.ts	/^            isRunning: boolean;$/;"	m
isRunning	pilas-engine/declaraciones/phaser.d.ts	/^        readonly isRunning: boolean;$/;"	m
isSeeking	pilas-engine/declaraciones/phaser.d.ts	/^            isSeeking(): boolean;$/;"	m
isSeeking	pilas-engine/declaraciones/phaser.d.ts	/^            readonly isSeeking: boolean;$/;"	m
isSensor	pilas-engine/actores/-actor-base.ts	/^      isSensor: true,$/;"	m
isSensor	pilas-engine/declaraciones/phaser.d.ts	/^                    isSensor(): boolean;$/;"	m
isSensor	pilas-engine/declaraciones/phaser.d.ts	/^                    isSensor: boolean;$/;"	m
isSensor	pilas-engine/declaraciones/phaser.d.ts	/^                isSensor(): boolean;$/;"	m
isSetTimeOut	pilas-engine/declaraciones/phaser.d.ts	/^            isSetTimeOut: boolean;$/;"	m
isSizeBetween	pilas-engine/declaraciones/phaser.d.ts	/^        isSizeBetween(min?: integer, max?: integer): object;$/;"	m
isSleeping	pilas-engine/declaraciones/phaser.d.ts	/^            isSleeping(): boolean;$/;"	m
isSleeping	pilas-engine/declaraciones/phaser.d.ts	/^            isSleeping(key: string | Phaser.Scene): boolean;$/;"	m
isSleeping	pilas-engine/declaraciones/phaser.d.ts	/^            isSleeping(key?: string | Phaser.Scene): boolean;$/;"	m
isStatic	pilas-engine/actores/-actor-base.ts	/^      isStatic: false$/;"	m
isStatic	pilas-engine/declaraciones/phaser.d.ts	/^                    isStatic(): boolean;$/;"	m
isStatic	pilas-engine/declaraciones/phaser.d.ts	/^                isStatic(): boolean;$/;"	m
isStatic	pilas-engine/modos/modo.ts	/^            isStatic: true$/;"	m
isStatic	pilas-engine/modos/modo.ts	/^          isStatic: true,$/;"	m
isStencil	pilas-engine/declaraciones/phaser.d.ts	/^                readonly isStencil: boolean;$/;"	m
isStroked	pilas-engine/declaraciones/phaser.d.ts	/^            isStroked: boolean;$/;"	m
isTextureClean	pilas-engine/declaraciones/phaser.d.ts	/^                isTextureClean: boolean;$/;"	m
isTilemap	pilas-engine/declaraciones/phaser.d.ts	/^            readonly isTilemap: boolean;$/;"	m
isTimeline	pilas-engine/declaraciones/phaser.d.ts	/^            isTimeline: boolean;$/;"	m
isTinted	pilas-engine/declaraciones/phaser.d.ts	/^                readonly isTinted: boolean;$/;"	m
isTinted	pilas-engine/declaraciones/phaser.d.ts	/^            readonly isTinted: boolean;$/;"	m
isTop	pilas-engine/declaraciones/phaser.d.ts	/^                readonly isTop: boolean;$/;"	m
isTransition	pilas-engine/declaraciones/phaser.d.ts	/^                isTransition: boolean;$/;"	m
isTransitionIn	pilas-engine/declaraciones/phaser.d.ts	/^            isTransitionIn(): boolean;$/;"	m
isTransitionOut	pilas-engine/declaraciones/phaser.d.ts	/^            isTransitionOut(): boolean;$/;"	m
isTransitioning	pilas-engine/declaraciones/phaser.d.ts	/^            isTransitioning(): boolean;$/;"	m
isTweening	pilas-engine/declaraciones/phaser.d.ts	/^            isTweening(target: object): boolean;$/;"	m
isUp	pilas-engine/declaraciones/phaser.d.ts	/^                isUp: boolean;$/;"	m
isVertical	pilas-engine/laser.ts	/^  get isVertical() {$/;"	m
isVideo	pilas-engine/declaraciones/phaser.d.ts	/^            isVideo: boolean;$/;"	m
isVisible	pilas-engine/declaraciones/phaser.d.ts	/^            isVisible(): boolean;$/;"	m
isVisible	pilas-engine/declaraciones/phaser.d.ts	/^            isVisible(key: string | Phaser.Scene): boolean;$/;"	m
isVisible	pilas-engine/declaraciones/phaser.d.ts	/^            isVisible(key?: string | Phaser.Scene): boolean;$/;"	m
isobox	pilas-engine/declaraciones/phaser.d.ts	/^            isobox(x?: number, y?: number, size?: number, height?: number, fillTop?: number, fillLeft?: number, fillRight?: number): Phaser.GameObjects.IsoBox;$/;"	m
isotriangle	pilas-engine/declaraciones/phaser.d.ts	/^            isotriangle(x?: number, y?: number, size?: number, height?: number, reversed?: boolean, fillTop?: number, fillLeft?: number, fillRight?: number): Phaser.GameObjects.IsoTriangle;$/;"	m
iterate	pilas-engine/declaraciones/phaser.d.ts	/^            iterate(callback: EachSetCallback<T>, callbackScope?: any): Phaser.Structs.Set<T>;$/;"	m
iterate	pilas-engine/declaraciones/phaser.d.ts	/^            iterate(callback: Function, context?: object, ...args: any[]): this;$/;"	m
iterateLocal	pilas-engine/declaraciones/phaser.d.ts	/^            iterateLocal(callbackKey: string, ...args: any[]): Phaser.Structs.Set<T>;$/;"	m
iterations	pilas-engine/declaraciones/phaser.d.ts	/^            iterations: number;$/;"	m
izquierda	pilas-engine/actores/-actor-base.ts	/^      izquierda: 0,$/;"	m
izquierda	pilas-engine/control.ts	/^      izquierda: false,$/;"	m
izquierda	pilas-engine/control.ts	/^  get izquierda() {$/;"	m
izquierda	pilas-engine/control.ts	/^  get izquierda(): boolean {$/;"	m
joint	pilas-engine/declaraciones/phaser.d.ts	/^                joint(bodyA: MatterJS.BodyType, bodyB: MatterJS.BodyType, length?: number, stiffness?: number, options?: Phaser.Types.Physics.Matter.MatterConstraintConfig): MatterJS.ConstraintType;$/;"	m
json	pilas-engine/declaraciones/phaser.d.ts	/^            json(key: string | Phaser.Types.Loader.FileTypes.JSONFileConfig | Phaser.Types.Loader.FileTypes.JSONFileConfig[], url?: object | string, dataKey?: string, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject): this;$/;"	m
json	pilas-engine/declaraciones/phaser.d.ts	/^            json: Phaser.Cache.BaseCache;$/;"	m
jsonCache	pilas-engine/declaraciones/phaser.d.ts	/^            readonly jsonCache: Phaser.Cache.BaseCache;$/;"	m
jsonURL	pilas-engine/declaraciones/phaser.d.ts	/^                    jsonURL: string;$/;"	m
kerning	pilas-engine/declaraciones/phaser.d.ts	/^                    kerning: {[key: string]: number};$/;"	m
key	pilas-engine/animaciones.ts	/^          key: cuadro.split(":")[0],$/;"	m
key	pilas-engine/animaciones.ts	/^      key: nombre,$/;"	m
key	pilas-engine/declaraciones/phaser.d.ts	/^                    key: string | Phaser.Display.BaseShader;$/;"	m
key	pilas-engine/declaraciones/phaser.d.ts	/^                    key: string | Phaser.Types.Loader.FileTypes.VideoFileConfig;$/;"	m
key	pilas-engine/declaraciones/phaser.d.ts	/^                    key: string;$/;"	m
key	pilas-engine/declaraciones/phaser.d.ts	/^                key: string | Phaser.Animations.Animation;$/;"	m
key	pilas-engine/declaraciones/phaser.d.ts	/^                key: string;$/;"	m
key	pilas-engine/declaraciones/phaser.d.ts	/^            key: string;$/;"	m
key	pilas-engine/declaraciones/phaser.d.ts	/^            readonly key: string;$/;"	m
keyCode	pilas-engine/declaraciones/phaser.d.ts	/^                keyCode: number;$/;"	m
keyCodes	pilas-engine/declaraciones/phaser.d.ts	/^                keyCodes: any[];$/;"	m
keyExists	pilas-engine/declaraciones/phaser.d.ts	/^            keyExists(file: Phaser.Loader.File): boolean;$/;"	m
keyboard	pilas-engine/declaraciones/phaser.d.ts	/^            keyboard: Phaser.Input.Keyboard.KeyboardManager;$/;"	m
keyboard	pilas-engine/declaraciones/phaser.d.ts	/^            keyboard: Phaser.Input.Keyboard.KeyboardPlugin;$/;"	m
keyboard	pilas-engine/declaraciones/phaser.d.ts	/^            keyboard: boolean;$/;"	m
keyboard	pilas-engine/pilas.ts	/^        keyboard: true,$/;"	m
keyframe_array	pilas-engine/libs/spriter.ts	/^  keyframe_array: EventlineKeyframe[];$/;"	m
keyframe_array	pilas-engine/libs/spriter.ts	/^  keyframe_array: MainlineKeyframe[];$/;"	m
keyframe_array	pilas-engine/libs/spriter.ts	/^  keyframe_array: SoundlineKeyframe[];$/;"	m
keyframe_array	pilas-engine/libs/spriter.ts	/^  keyframe_array: TaglineKeyframe[] = [];$/;"	m
keyframe_array	pilas-engine/libs/spriter.ts	/^  keyframe_array: TimelineKeyframe[];$/;"	m
keyframe_array	pilas-engine/libs/spriter.ts	/^  keyframe_array: VarlineKeyframe[];$/;"	m
keyframe_index	pilas-engine/libs/spriter.ts	/^  keyframe_index: number = -1;$/;"	m
keys	pilas-engine/declaraciones/phaser.d.ts	/^                keys: Phaser.Input.Keyboard.Key[];$/;"	m
keys	pilas-engine/declaraciones/phaser.d.ts	/^            keys(): K[];$/;"	m
keys	pilas-engine/declaraciones/phaser.d.ts	/^            keys: Record<string, Phaser.Scene>;$/;"	m
kill	pilas-engine/declaraciones/phaser.d.ts	/^            kill(gameObject: Phaser.GameObjects.GameObject): void;$/;"	m
killAll	pilas-engine/declaraciones/phaser.d.ts	/^                killAll(): this;$/;"	m
killAll	pilas-engine/declaraciones/phaser.d.ts	/^            killAll(): Phaser.Tweens.TweenManager;$/;"	m
killAndHide	pilas-engine/declaraciones/phaser.d.ts	/^            killAndHide(gameObject: Phaser.GameObjects.GameObject): void;$/;"	m
killOnEnter	pilas-engine/declaraciones/phaser.d.ts	/^                    killOnEnter: boolean;$/;"	m
killTweensOf	pilas-engine/declaraciones/phaser.d.ts	/^            killTweensOf(target: object | any[]): Phaser.Tweens.TweenManager;$/;"	m
kindle	pilas-engine/declaraciones/phaser.d.ts	/^            kindle: boolean;$/;"	m
kodachrome	pilas-engine/declaraciones/phaser.d.ts	/^            kodachrome(multiply?: boolean): this;$/;"	m
laser	pilas-engine/actores.ts	/^  laser() {$/;"	m
laser	pilas-engine/actores/laser.ts	/^class laser extends Actor {$/;"	c
laser	pilas-engine/pilas.ts	/^  laser(actor: Actor, x1: number, y1: number, x2: number, y2: number): Intersecci√≥n[] {$/;"	m
laser_al_primer_actor	pilas-engine/pilas.ts	/^  laser_al_primer_actor(actor: Actor, x1: number, y1: number, x2: number, y2: number, etiqueta = ""): Intersecci√≥n {$/;"	m
lasers	pilas-engine/actores/-actor-base.ts	/^      lasers: this.lasers_serializados$/;"	m
lasers	pilas-engine/actores/-actor-base.ts	/^  lasers: Laser[];$/;"	m
lasers_serializados	pilas-engine/actores/-actor-base.ts	/^  lasers_serializados: any[] = [];$/;"	m
last	pilas-engine/declaraciones/phaser.d.ts	/^            readonly last: Phaser.GameObjects.GameObject;$/;"	m
last	pilas-engine/declaraciones/phaser.d.ts	/^            readonly last: T;$/;"	m
lastTime	pilas-engine/declaraciones/phaser.d.ts	/^            lastTime: number;$/;"	m
launch	pilas-engine/declaraciones/phaser.d.ts	/^            launch(key: string | Phaser.Scene, data?: object): this;$/;"	m
layer	pilas-engine/declaraciones/phaser.d.ts	/^            layer(children?: Phaser.GameObjects.GameObject | Phaser.GameObjects.GameObject[]): Phaser.GameObjects.Layer;$/;"	m
layer	pilas-engine/declaraciones/phaser.d.ts	/^            layer(config: Phaser.Types.GameObjects.Sprite.SpriteConfig, addToScene?: boolean): Phaser.GameObjects.Layer;$/;"	m
layer	pilas-engine/declaraciones/phaser.d.ts	/^            layer: Phaser.Tilemaps.LayerData;$/;"	m
layerIndex	pilas-engine/declaraciones/phaser.d.ts	/^            layerIndex: number;$/;"	m
layers	pilas-engine/declaraciones/phaser.d.ts	/^            layers: Phaser.Tilemaps.LayerData[] | Phaser.Tilemaps.ObjectLayer;$/;"	m
layers	pilas-engine/declaraciones/phaser.d.ts	/^            layers: Phaser.Tilemaps.LayerData[];$/;"	m
leaderboards	pilas-engine/declaraciones/phaser.d.ts	/^        leaderboards: Phaser.FacebookInstantGamesLeaderboard[];$/;"	m
left	pilas-engine/declaraciones/phaser.d.ts	/^                    left: Phaser.Input.Keyboard.Key;$/;"	m
left	pilas-engine/declaraciones/phaser.d.ts	/^                    left: boolean;$/;"	m
left	pilas-engine/declaraciones/phaser.d.ts	/^                left: Phaser.Input.Keyboard.Key;$/;"	m
left	pilas-engine/declaraciones/phaser.d.ts	/^                left: boolean;$/;"	m
left	pilas-engine/declaraciones/phaser.d.ts	/^                readonly left: number;$/;"	m
left	pilas-engine/declaraciones/phaser.d.ts	/^            left: number;$/;"	m
leftButtonDown	pilas-engine/declaraciones/phaser.d.ts	/^            leftButtonDown(): boolean;$/;"	m
leftButtonReleased	pilas-engine/declaraciones/phaser.d.ts	/^            leftButtonReleased(): boolean;$/;"	m
leftStick	pilas-engine/declaraciones/phaser.d.ts	/^                leftStick: Phaser.Math.Vector2;$/;"	m
length	pilas-engine/declaraciones/phaser.d.ts	/^                length: number;$/;"	m
length	pilas-engine/declaraciones/phaser.d.ts	/^            length(): number;$/;"	m
length	pilas-engine/declaraciones/phaser.d.ts	/^            readonly length: number;$/;"	m
length	pilas-engine/libs/spriter.ts	/^  length: number = 0;$/;"	m
lengthSq	pilas-engine/declaraciones/phaser.d.ts	/^            lengthSq(): number;$/;"	m
lengths	pilas-engine/declaraciones/phaser.d.ts	/^                    lengths: number[];$/;"	m
lerp	pilas-engine/declaraciones/phaser.d.ts	/^                lerp: Phaser.Math.Vector2;$/;"	m
lerp	pilas-engine/declaraciones/phaser.d.ts	/^            lerp(src: Phaser.Types.Math.Vector2Like, t?: number): Phaser.Math.Vector2;$/;"	m
lerp	pilas-engine/declaraciones/phaser.d.ts	/^            lerp(v: Phaser.Math.Quaternion | Phaser.Math.Vector4, t?: number): Phaser.Math.Quaternion;$/;"	m
lerp	pilas-engine/declaraciones/phaser.d.ts	/^            lerp(v: Phaser.Math.Vector3, t?: number): Phaser.Math.Vector3;$/;"	m
lerp	pilas-engine/declaraciones/phaser.d.ts	/^            lerp(v: Phaser.Math.Vector4, t?: number): Phaser.Math.Vector4;$/;"	m
letterSpacing	pilas-engine/declaraciones/phaser.d.ts	/^                    letterSpacing: number;$/;"	m
letterSpacing	pilas-engine/declaraciones/phaser.d.ts	/^            letterSpacing: number;$/;"	m
levenshtein_distance_b	pilas-engine/utilidades.ts	/^    function levenshtein_distance_b(a, b) {$/;"	f
life	pilas-engine/declaraciones/phaser.d.ts	/^                life: number;$/;"	m
lifeCurrent	pilas-engine/declaraciones/phaser.d.ts	/^                lifeCurrent: number;$/;"	m
lifeT	pilas-engine/declaraciones/phaser.d.ts	/^                lifeT: number;$/;"	m
lifespan	pilas-engine/declaraciones/phaser.d.ts	/^                lifespan: Phaser.GameObjects.Particles.EmitterOp;$/;"	m
lighten	pilas-engine/declaraciones/phaser.d.ts	/^            lighten(amount: number): Phaser.Display.Color;$/;"	m
lights	pilas-engine/declaraciones/phaser.d.ts	/^            lights: Phaser.GameObjects.Light[];$/;"	m
lights	pilas-engine/declaraciones/phaser.d.ts	/^        lights: Phaser.GameObjects.LightsManager;$/;"	m
lightsActive	pilas-engine/declaraciones/phaser.d.ts	/^                    readonly lightsActive: boolean;$/;"	m
limit	pilas-engine/declaraciones/phaser.d.ts	/^            limit(max: number): Phaser.Math.Vector2;$/;"	m
limitar	pilas-engine/utilidades.ts	/^  limitar(valor: number, minimo: number, maximo: number) {$/;"	m
limitar_movimiento_de_la_camara_a_los_bordes_actuales	pilas-engine/modos/modo_pausa.ts	/^  limitar_movimiento_de_la_camara_a_los_bordes_actuales(escena) {$/;"	m
limpiar	pilas-engine/actores/-pizarra-base.ts	/^  limpiar() {$/;"	m
limpiar	pilas-engine/historia.ts	/^  limpiar() {$/;"	m
limpiar_traza_de_ejecucion	pilas-engine/pilas.ts	/^  limpiar_traza_de_ejecucion() {$/;"	m
line	pilas-engine/declaraciones/phaser.d.ts	/^                    line: number;$/;"	m
line	pilas-engine/declaraciones/phaser.d.ts	/^            line(x?: number, y?: number, x1?: number, y1?: number, x2?: number, y2?: number, strokeColor?: number, strokeAlpha?: number): Phaser.GameObjects.Line;$/;"	m
lineBetween	pilas-engine/declaraciones/phaser.d.ts	/^            lineBetween(x1: number, y1: number, x2: number, y2: number): this;$/;"	m
lineGradientStyle	pilas-engine/declaraciones/phaser.d.ts	/^            lineGradientStyle(lineWidth: number, topLeft: number, topRight: number, bottomLeft: number, bottomRight: number, alpha?: number): this;$/;"	m
lineHeight	pilas-engine/declaraciones/phaser.d.ts	/^                    lineHeight: number;$/;"	m
lineSpacing	pilas-engine/declaraciones/phaser.d.ts	/^                    lineSpacing: number;$/;"	m
lineSpacing	pilas-engine/declaraciones/phaser.d.ts	/^            lineSpacing: number;$/;"	m
lineStyle	pilas-engine/declaraciones/phaser.d.ts	/^            lineStyle(lineWidth: number, color: number, alpha?: number): this;$/;"	m
lineTo	pilas-engine/declaraciones/phaser.d.ts	/^            lineTo(x: number | Phaser.Math.Vector2, y?: number): this;$/;"	m
lineTo	pilas-engine/declaraciones/phaser.d.ts	/^            lineTo(x: number, y: number): this;$/;"	m
lineWidth	pilas-engine/declaraciones/phaser.d.ts	/^            lineWidth: number;$/;"	m
lineWidths	pilas-engine/declaraciones/phaser.d.ts	/^                    lineWidths: number[];$/;"	m
linearShader	pilas-engine/declaraciones/phaser.d.ts	/^                    linearShader: Phaser.Renderer.WebGL.WebGLShader;$/;"	m
lines	pilas-engine/declaraciones/phaser.d.ts	/^                    lines: Phaser.Types.GameObjects.BitmapText.BitmapTextLines;$/;"	m
lines	pilas-engine/declaraciones/phaser.d.ts	/^                    lines: number;$/;"	m
linkFile	pilas-engine/declaraciones/phaser.d.ts	/^            linkFile: Phaser.Loader.File;$/;"	m
linux	pilas-engine/declaraciones/phaser.d.ts	/^            linux: boolean;$/;"	m
list	pilas-engine/declaraciones/phaser.d.ts	/^            list: Phaser.GameObjects.GameObject[];$/;"	m
list	pilas-engine/declaraciones/phaser.d.ts	/^            list: Phaser.Structs.Set<Phaser.Loader.File>;$/;"	m
list	pilas-engine/declaraciones/phaser.d.ts	/^            list: T[];$/;"	m
list	pilas-engine/declaraciones/phaser.d.ts	/^            list: object;$/;"	m
list	pilas-engine/declaraciones/phaser.d.ts	/^            list: {[key: string]:  any};$/;"	m
listar	pilas-engine/comportamientos.ts	/^  listar() {$/;"	m
listar	pilas-engine/habilidades.ts	/^  listar() {$/;"	m
listar_imagenes	pilas-engine/pilas.ts	/^  listar_imagenes() {$/;"	m
listenerCount	pilas-engine/declaraciones/phaser.d.ts	/^            listenerCount(event: string | symbol): number;$/;"	m
listeners	pilas-engine/declaraciones/phaser.d.ts	/^            listeners(event: string | symbol): Function[];$/;"	m
littleEndian	pilas-engine/declaraciones/phaser.d.ts	/^            littleEndian: boolean;$/;"	m
load	pilas-engine/declaraciones/phaser.d.ts	/^                load(): void;$/;"	m
load	pilas-engine/declaraciones/phaser.d.ts	/^                load(F32: Float32Array, U32: Uint32Array, offset: number, textureUnit: number, tintEffect: number): number;$/;"	m
load	pilas-engine/declaraciones/phaser.d.ts	/^            load(): void;$/;"	m
load	pilas-engine/declaraciones/phaser.d.ts	/^            load(matrix2D?: Phaser.GameObjects.Components.TransformMatrix): void;$/;"	m
load	pilas-engine/declaraciones/phaser.d.ts	/^            protected load(key: string | Phaser.Types.Animations.PlayAnimationConfig): Phaser.GameObjects.GameObject;$/;"	m
load	pilas-engine/declaraciones/phaser.d.ts	/^        load: Phaser.Loader.LoaderPlugin;$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): Animation {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): BaseObject {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): Bone {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): BoneObjInfo {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): BoneTimelineKeyframe {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): BoxObjInfo {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): BoxObject {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): BoxTimelineKeyframe {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): CharacterMap {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): Curve {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): Data {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): Element {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): Entity {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): EntityObject {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): EntityTimelineKeyframe {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): Eventline {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): EventlineKeyframe {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): Folder {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): ImageFile {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): Keyframe {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): Mainline {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): MainlineKeyframe {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): MapInstruction {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): Meta {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): ObjInfo {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): ObjectRef {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): PointObject {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): PointTimelineKeyframe {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): Ref {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): SoundFile {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): SoundObject {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): SoundTimelineKeyframe {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): Soundline {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): SoundlineKeyframe {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): Space {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): SpriteFrame {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): SpriteObjInfo {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): SpriteObject {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): SpriteTimelineKeyframe {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): Tag {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): TagDef {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): Tagline {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): TaglineKeyframe {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): Timeline {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): TimelineKeyframe {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): VarDef {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): VarDefs {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): VariableObject {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): VariableTimelineKeyframe {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): Varline {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): VarlineKeyframe {$/;"	m
load	pilas-engine/libs/spriter.ts	/^  load(json: any): any {$/;"	m
loadBool	pilas-engine/libs/spriter.ts	/^function loadBool(json: any, key: string | number, def?: boolean): boolean {$/;"	f
loadComplete	pilas-engine/declaraciones/phaser.d.ts	/^            loadComplete(): void;$/;"	m
loadConfig	pilas-engine/declaraciones/phaser.d.ts	/^                loadConfig(config?: Phaser.Types.GameObjects.Particles.ParticleEmitterConfig, newKey?: string): void;$/;"	m
loadFloat	pilas-engine/libs/spriter.ts	/^function loadFloat(json: any, key: string | number, def?: number): number {$/;"	f
loadIdentity	pilas-engine/declaraciones/phaser.d.ts	/^                loadIdentity(): this;$/;"	m
loadInt	pilas-engine/libs/spriter.ts	/^function loadInt(json: any, key: string | number, def?: number): number {$/;"	f
loadMediaStream	pilas-engine/declaraciones/phaser.d.ts	/^            loadMediaStream(stream: string, loadEvent?: string, noAudio?: boolean): this;$/;"	m
loadPlayerPhoto	pilas-engine/declaraciones/phaser.d.ts	/^        loadPlayerPhoto(scene: Phaser.Scene, key: string): this;$/;"	m
loadString	pilas-engine/libs/spriter.ts	/^function loadString(json: any, key: string | number, def?: string): string {$/;"	f
loadURL	pilas-engine/declaraciones/phaser.d.ts	/^            loadURL(url: string, loadEvent?: string, noAudio?: boolean, crossOrigin?: string): this;$/;"	m
loader	pilas-engine/declaraciones/phaser.d.ts	/^                loader: Phaser.Types.Core.LoaderConfig;$/;"	m
loader	pilas-engine/declaraciones/phaser.d.ts	/^            loader: Phaser.Loader.LoaderPlugin;$/;"	m
loaderAsync	pilas-engine/declaraciones/phaser.d.ts	/^            readonly loaderAsync: boolean;$/;"	m
loaderBaseURL	pilas-engine/declaraciones/phaser.d.ts	/^            readonly loaderBaseURL: string;$/;"	m
loaderCrossOrigin	pilas-engine/declaraciones/phaser.d.ts	/^            readonly loaderCrossOrigin: string | undefined;$/;"	m
loaderImageLoadType	pilas-engine/declaraciones/phaser.d.ts	/^            readonly loaderImageLoadType: string;$/;"	m
loaderMaxParallelDownloads	pilas-engine/declaraciones/phaser.d.ts	/^            readonly loaderMaxParallelDownloads: number;$/;"	m
loaderPassword	pilas-engine/declaraciones/phaser.d.ts	/^            readonly loaderPassword: string;$/;"	m
loaderPath	pilas-engine/declaraciones/phaser.d.ts	/^            readonly loaderPath: string;$/;"	m
loaderResponseType	pilas-engine/declaraciones/phaser.d.ts	/^            readonly loaderResponseType: string;$/;"	m
loaderTimeout	pilas-engine/declaraciones/phaser.d.ts	/^            readonly loaderTimeout: number;$/;"	m
loaderUser	pilas-engine/declaraciones/phaser.d.ts	/^            readonly loaderUser: string;$/;"	m
loaderWithCredentials	pilas-engine/declaraciones/phaser.d.ts	/^            readonly loaderWithCredentials: boolean;$/;"	m
local	pilas-engine/declaraciones/phaser.d.ts	/^                    local: Phaser.Types.GameObjects.BitmapText.LocalBitmapTextSize;$/;"	m
localStorage	pilas-engine/declaraciones/phaser.d.ts	/^            localStorage: boolean;$/;"	m
localTransform	pilas-engine/declaraciones/phaser.d.ts	/^            localTransform: Phaser.GameObjects.Components.TransformMatrix;$/;"	m
localWorld	pilas-engine/declaraciones/phaser.d.ts	/^                localWorld: MatterJS.World;$/;"	m
localX	pilas-engine/declaraciones/phaser.d.ts	/^                localX: number;$/;"	m
localY	pilas-engine/declaraciones/phaser.d.ts	/^                localY: number;$/;"	m
local_space	pilas-engine/libs/spriter.ts	/^  local_space: Space = new Space();$/;"	m
local_space	pilas-engine/libs/spriter.ts	/^  local_space: any;$/;"	m
locale	pilas-engine/declaraciones/phaser.d.ts	/^        locale: string;$/;"	m
location	pilas-engine/declaraciones/phaser.d.ts	/^                    location: number;$/;"	m
location	pilas-engine/declaraciones/phaser.d.ts	/^                location: number;$/;"	m
lockOrientation	pilas-engine/declaraciones/phaser.d.ts	/^            lockOrientation(orientation: string): boolean;$/;"	m
locked	pilas-engine/declaraciones/phaser.d.ts	/^                locked: boolean;$/;"	m
locked	pilas-engine/declaraciones/phaser.d.ts	/^            readonly locked: boolean;$/;"	m
log	pilas-engine/declaraciones/phaser.d.ts	/^        log(name: string, value?: number, params?: object): this;$/;"	m
logo	pilas-engine/actores.ts	/^  logo() {$/;"	m
logo	pilas-engine/actores/logo.ts	/^class logo extends Actor {$/;"	c
longest	pilas-engine/declaraciones/phaser.d.ts	/^                    longest: number;$/;"	m
longitud	pilas-engine/laser.ts	/^  longitud: number;$/;"	m
longitud	pilas-engine/modos/modo.ts	/^          longitud: laser.longitud$/;"	m
lookAt	pilas-engine/declaraciones/phaser.d.ts	/^            lookAt(eye: Phaser.Math.Vector3, center: Phaser.Math.Vector3, up: Phaser.Math.Vector3): this;$/;"	m
lookAtRH	pilas-engine/declaraciones/phaser.d.ts	/^            lookAtRH(eye: Phaser.Math.Vector3, target: Phaser.Math.Vector3, up: Phaser.Math.Vector3): this;$/;"	m
loop	pilas-engine/declaraciones/phaser.d.ts	/^            loop: boolean;$/;"	m
loop	pilas-engine/declaraciones/phaser.d.ts	/^            loop: number;$/;"	m
loop	pilas-engine/declaraciones/phaser.d.ts	/^            readonly loop: boolean;$/;"	m
loop	pilas-engine/declaraciones/phaser.d.ts	/^        loop: Phaser.Core.TimeStep;$/;"	m
loop	pilas-engine/pilas.ts	/^      loop: true$/;"	m
loopCounter	pilas-engine/declaraciones/phaser.d.ts	/^            loopCounter: number;$/;"	m
loopDelay	pilas-engine/declaraciones/phaser.d.ts	/^            loopDelay: number;$/;"	m
loopEndOffset	pilas-engine/declaraciones/phaser.d.ts	/^            loopEndOffset: number;$/;"	m
loopSource	pilas-engine/declaraciones/phaser.d.ts	/^            loopSource: AudioBufferSourceNode;$/;"	m
loop_to	pilas-engine/libs/spriter.ts	/^  loop_to: number = 0;$/;"	m
looping	pilas-engine/libs/spriter.ts	/^  looping: string = "true"; \/\/ "true", "false" or "ping_pong"$/;"	m
lsd	pilas-engine/declaraciones/phaser.d.ts	/^            lsd(multiply?: boolean): this;$/;"	m
luego	pilas-engine/pilas.ts	/^  luego(duracion: number, tarea: any) {$/;"	m
m4a	pilas-engine/declaraciones/phaser.d.ts	/^            m4a: boolean;$/;"	m
macOS	pilas-engine/declaraciones/phaser.d.ts	/^            macOS: boolean;$/;"	m
main	pilas-engine/declaraciones/phaser.d.ts	/^                main: Phaser.Cameras.Scene2D.Camera;$/;"	m
mainFramebuffer	pilas-engine/declaraciones/phaser.d.ts	/^                mainFramebuffer: WebGLFramebuffer;$/;"	m
mainTexture	pilas-engine/declaraciones/phaser.d.ts	/^                mainTexture: WebGLTexture;$/;"	m
mainline	pilas-engine/libs/spriter.ts	/^  mainline: Mainline;$/;"	m
make	pilas-engine/declaraciones/phaser.d.ts	/^            make: Phaser.GameObjects.GameObjectCreator;$/;"	m
make	pilas-engine/declaraciones/phaser.d.ts	/^        make: Phaser.GameObjects.GameObjectCreator;$/;"	m
makeActive	pilas-engine/declaraciones/phaser.d.ts	/^            makeActive(): void;$/;"	m
makeActive	pilas-engine/declaraciones/phaser.d.ts	/^            makeActive(tween: Phaser.Tweens.Tween): Phaser.Tweens.TweenManager;$/;"	m
makeArray	pilas-engine/libs/spriter.ts	/^function makeArray(value: any): any[] {$/;"	f
makePixelPerfect	pilas-engine/declaraciones/phaser.d.ts	/^            makePixelPerfect(alphaTolerance?: number): Function;$/;"	m
makeRotationAxis	pilas-engine/declaraciones/phaser.d.ts	/^            makeRotationAxis(axis: Phaser.Math.Vector3 | Phaser.Math.Vector4, angle: number): this;$/;"	m
manager	pilas-engine/declaraciones/phaser.d.ts	/^                manager: Phaser.GameObjects.Particles.ParticleEmitterManager;$/;"	m
manager	pilas-engine/declaraciones/phaser.d.ts	/^                manager: Phaser.Input.Gamepad.GamepadPlugin;$/;"	m
manager	pilas-engine/declaraciones/phaser.d.ts	/^                manager: Phaser.Input.InputManager;$/;"	m
manager	pilas-engine/declaraciones/phaser.d.ts	/^                manager: Phaser.Input.Keyboard.KeyboardManager;$/;"	m
manager	pilas-engine/declaraciones/phaser.d.ts	/^                manager: Phaser.Input.Keyboard.KeyboardPlugin;$/;"	m
manager	pilas-engine/declaraciones/phaser.d.ts	/^                manager: Phaser.Renderer.WebGL.PipelineManager;$/;"	m
manager	pilas-engine/declaraciones/phaser.d.ts	/^            manager: Phaser.Animations.AnimationManager;$/;"	m
manager	pilas-engine/declaraciones/phaser.d.ts	/^            manager: Phaser.Input.InputManager;$/;"	m
manager	pilas-engine/declaraciones/phaser.d.ts	/^            manager: Phaser.Scenes.SceneManager;$/;"	m
manager	pilas-engine/declaraciones/phaser.d.ts	/^            manager: Phaser.Textures.TextureManager;$/;"	m
manager	pilas-engine/declaraciones/phaser.d.ts	/^            manager: Phaser.Tweens.TweenManager;$/;"	m
manejar_evento_click_de_mouse	pilas-engine/modos/modo_ejecucion.ts	/^  private manejar_evento_click_de_mouse(evento) {$/;"	m
manejar_evento_key_down	pilas-engine/modos/modo_deprecated.ts	/^  private manejar_evento_key_down(evento: any) {$/;"	m
manejar_evento_key_down	pilas-engine/modos/modo_editor.ts	/^  private manejar_evento_key_down(evento: any) {$/;"	m
manejar_evento_key_down	pilas-engine/modos/modo_ejecucion.ts	/^  private manejar_evento_key_down(evento) {$/;"	m
manejar_evento_key_up	pilas-engine/modos/modo_deprecated.ts	/^  private manejar_evento_key_up(evento) {$/;"	m
manejar_evento_key_up	pilas-engine/modos/modo_editor.ts	/^  private manejar_evento_key_up(evento) {$/;"	m
manejar_evento_key_up	pilas-engine/modos/modo_ejecucion.ts	/^  private manejar_evento_key_up(evento) {$/;"	m
manejar_evento_key_up	pilas-engine/modos/modo_error.ts	/^  private manejar_evento_key_up(evento: any) {$/;"	m
manejar_evento_muevemouse	pilas-engine/modos/modo_ejecucion.ts	/^  private manejar_evento_muevemouse(evento) {$/;"	m
manejar_evento_termina_click	pilas-engine/modos/modo_ejecucion.ts	/^  private manejar_evento_termina_click(evento) {$/;"	m
mano	pilas-engine/pilas.ts	/^      mano: "hand"$/;"	m
mantener_en_pantalla	pilas-engine/actores/-actor-base.ts	/^        mantener_en_pantalla();$/;"	m
mantener_en_pantalla	pilas-engine/actores/-actor-base.ts	/^    function mantener_en_pantalla() {$/;"	f
mantener_en_pantalla	pilas-engine/actores/-actor-base.ts	/^    mantener_en_pantalla();$/;"	m
map	pilas-engine/declaraciones/phaser.d.ts	/^                map: {[key: string]:  string};$/;"	m
map_instruction_array	pilas-engine/libs/spriter.ts	/^  map_instruction_array: MapInstruction[] = [];$/;"	m
marca	pilas-engine/actores/deslizador.ts	/^  marca: Actor;$/;"	m
margen_interno	pilas-engine/actores/-actor-texto-base.ts	/^  margen_interno: number = 30;$/;"	m
markers	pilas-engine/declaraciones/phaser.d.ts	/^            markers: any;$/;"	m
markers	pilas-engine/declaraciones/phaser.d.ts	/^            readonly markers: {[key: string]:  Phaser.Types.Sound.SoundMarker};$/;"	m
mask	pilas-engine/declaraciones/phaser.d.ts	/^                mask: Phaser.Display.Masks.BitmapMask | Phaser.Display.Masks.GeometryMask;$/;"	m
mask	pilas-engine/declaraciones/phaser.d.ts	/^            mask: Phaser.Display.Masks.BitmapMask | Phaser.Display.Masks.GeometryMask;$/;"	m
maskCount	pilas-engine/declaraciones/phaser.d.ts	/^                maskCount: number;$/;"	m
maskFramebuffer	pilas-engine/declaraciones/phaser.d.ts	/^                maskFramebuffer: WebGLFramebuffer;$/;"	m
maskStack	pilas-engine/declaraciones/phaser.d.ts	/^                maskStack: Phaser.Display.Masks.GeometryMask[];$/;"	m
maskTexture	pilas-engine/declaraciones/phaser.d.ts	/^                maskTexture: WebGLTexture;$/;"	m
mass	pilas-engine/declaraciones/phaser.d.ts	/^                mass: number;$/;"	m
masterMuteNode	pilas-engine/declaraciones/phaser.d.ts	/^            masterMuteNode: GainNode;$/;"	m
masterVolumeNode	pilas-engine/declaraciones/phaser.d.ts	/^            masterVolumeNode: GainNode;$/;"	m
matchPlayer	pilas-engine/declaraciones/phaser.d.ts	/^        matchPlayer(matchTag?: string, switchImmediately?: boolean): this;$/;"	m
matched	pilas-engine/declaraciones/phaser.d.ts	/^                matched: boolean;$/;"	m
material	pilas-engine/declaraciones/phaser.d.ts	/^                    material: string;$/;"	m
materialLibraries	pilas-engine/declaraciones/phaser.d.ts	/^                    materialLibraries: string[];$/;"	m
materials	pilas-engine/declaraciones/phaser.d.ts	/^                    materials: object;$/;"	m
matrix	pilas-engine/declaraciones/phaser.d.ts	/^                matrix: Float32Array;$/;"	m
matter	pilas-engine/declaraciones/phaser.d.ts	/^        matter: Phaser.Physics.Matter.MatterPhysics;$/;"	m
matter	pilas-engine/modos/modo.ts	/^  matter: Phaser.Physics.Matter.MatterPhysics;$/;"	m
max	pilas-engine/declaraciones/phaser.d.ts	/^                    max: number;$/;"	m
max	pilas-engine/declaraciones/phaser.d.ts	/^            max(v: Phaser.Math.Vector3): Phaser.Math.Vector3;$/;"	m
maxAngular	pilas-engine/declaraciones/phaser.d.ts	/^                maxAngular: number;$/;"	m
maxEntries	pilas-engine/declaraciones/phaser.d.ts	/^                maxEntries: number;$/;"	m
maxHeight	pilas-engine/declaraciones/phaser.d.ts	/^            readonly maxHeight: number;$/;"	m
maxKeyDelay	pilas-engine/declaraciones/phaser.d.ts	/^                maxKeyDelay: number;$/;"	m
maxLights	pilas-engine/declaraciones/phaser.d.ts	/^            readonly maxLights: number;$/;"	m
maxLines	pilas-engine/declaraciones/phaser.d.ts	/^            maxLines: number;$/;"	m
maxParallelDownloads	pilas-engine/declaraciones/phaser.d.ts	/^            maxParallelDownloads: number;$/;"	m
maxParticles	pilas-engine/declaraciones/phaser.d.ts	/^                maxParticles: number;$/;"	m
maxSize	pilas-engine/declaraciones/phaser.d.ts	/^            maxSize: number;$/;"	m
maxSpeed	pilas-engine/declaraciones/phaser.d.ts	/^                maxSpeed: number;$/;"	m
maxSpeedX	pilas-engine/declaraciones/phaser.d.ts	/^                maxSpeedX: number;$/;"	m
maxSpeedY	pilas-engine/declaraciones/phaser.d.ts	/^                maxSpeedY: number;$/;"	m
maxTextures	pilas-engine/declaraciones/phaser.d.ts	/^                maxTextures: number;$/;"	m
maxTextures	pilas-engine/declaraciones/phaser.d.ts	/^            readonly maxTextures: number;$/;"	m
maxVelocity	pilas-engine/declaraciones/phaser.d.ts	/^                maxVelocity: Phaser.Math.Vector2;$/;"	m
maxVelocityX	pilas-engine/declaraciones/phaser.d.ts	/^                maxVelocityX: Phaser.GameObjects.Particles.EmitterOp;$/;"	m
maxVelocityX	pilas-engine/declaraciones/phaser.d.ts	/^                maxVelocityX: number;$/;"	m
maxVelocityY	pilas-engine/declaraciones/phaser.d.ts	/^                maxVelocityY: Phaser.GameObjects.Particles.EmitterOp;$/;"	m
maxVelocityY	pilas-engine/declaraciones/phaser.d.ts	/^                maxVelocityY: number;$/;"	m
maxWidth	pilas-engine/declaraciones/phaser.d.ts	/^            maxWidth: number;$/;"	m
maxWidth	pilas-engine/declaraciones/phaser.d.ts	/^            readonly maxWidth: number;$/;"	m
maxX	pilas-engine/declaraciones/phaser.d.ts	/^                    maxX: number;$/;"	m
maxY	pilas-engine/declaraciones/phaser.d.ts	/^                    maxY: number;$/;"	m
maxZoom	pilas-engine/declaraciones/phaser.d.ts	/^                maxZoom: number;$/;"	m
max_time	pilas-engine/libs/spriter.ts	/^  max_time: number = 0;$/;"	m
medio	pilas-engine/actores/-actor-base.ts	/^      medio: 0.5$/;"	m
mensaje	pilas-engine/mensajes.ts	/^      mensaje: error.message,$/;"	m
mensajes	pilas-engine/pilas.ts	/^  mensajes: Mensajes;$/;"	m
merge	pilas-engine/declaraciones/phaser.d.ts	/^            merge(data: {[key: string]:  any}, overwrite?: boolean): this;$/;"	m
merge	pilas-engine/declaraciones/phaser.d.ts	/^            merge(map: Phaser.Structs.Map<K, V>, override?: boolean): Phaser.Structs.Map<K, V>;$/;"	m
mesh	pilas-engine/declaraciones/phaser.d.ts	/^                mesh(composite: MatterJS.CompositeType, columns: number, rows: number, crossBrace: boolean, options?: Phaser.Types.Physics.Matter.MatterConstraintConfig): MatterJS.CompositeType;$/;"	m
mesh	pilas-engine/declaraciones/phaser.d.ts	/^            mesh(config: Phaser.Types.GameObjects.Mesh.MeshConfig, addToScene?: boolean): Phaser.GameObjects.Mesh;$/;"	m
mesh	pilas-engine/declaraciones/phaser.d.ts	/^            mesh(x?: number, y?: number, texture?: string | Phaser.Textures.Texture, frame?: string | number, vertices?: number[], uvs?: number[], indicies?: number[], containsZ?: boolean, normals?: number[], colors?: number | number[], alphas?: number | number[]): Phaser.GameObjects.Mesh;$/;"	m
meta	pilas-engine/libs/spriter.ts	/^  meta: Meta;$/;"	m
metaKey	pilas-engine/declaraciones/phaser.d.ts	/^                metaKey: boolean;$/;"	m
midPoint	pilas-engine/declaraciones/phaser.d.ts	/^                readonly midPoint: Phaser.Math.Vector2;$/;"	m
middleButtonDown	pilas-engine/declaraciones/phaser.d.ts	/^            middleButtonDown(): boolean;$/;"	m
middleButtonReleased	pilas-engine/declaraciones/phaser.d.ts	/^            middleButtonReleased(): boolean;$/;"	m
min	pilas-engine/declaraciones/phaser.d.ts	/^                    min: number;$/;"	m
min	pilas-engine/declaraciones/phaser.d.ts	/^            min(v: Phaser.Math.Vector3): Phaser.Math.Vector3;$/;"	m
minFilter	pilas-engine/declaraciones/phaser.d.ts	/^                minFilter: number;$/;"	m
minFps	pilas-engine/declaraciones/phaser.d.ts	/^            minFps: number;$/;"	m
minHeight	pilas-engine/declaraciones/phaser.d.ts	/^            readonly minHeight: number;$/;"	m
minWidth	pilas-engine/declaraciones/phaser.d.ts	/^            readonly minWidth: number;$/;"	m
minX	pilas-engine/declaraciones/phaser.d.ts	/^                    minX: number;$/;"	m
minY	pilas-engine/declaraciones/phaser.d.ts	/^                    minY: number;$/;"	m
minZoom	pilas-engine/declaraciones/phaser.d.ts	/^                minZoom: number;$/;"	m
min_time	pilas-engine/libs/spriter.ts	/^  min_time: number = 0;$/;"	m
minimap	pilas-engine/modos/modo_deprecated.ts	/^  minimap: Phaser.Cameras.Scene2D.Camera;$/;"	m
minus	pilas-engine/laser.ts	/^  minus(vec: any) {$/;"	m
mipmapFilter	pilas-engine/declaraciones/phaser.d.ts	/^                mipmapFilter: GLenum;$/;"	m
mipmapFilter	pilas-engine/declaraciones/phaser.d.ts	/^            readonly mipmapFilter: string;$/;"	m
mipmaps	pilas-engine/declaraciones/phaser.d.ts	/^                mipmaps: Phaser.Types.Textures.MipmapType[];$/;"	m
mirror	pilas-engine/declaraciones/phaser.d.ts	/^            mirror(axis: Phaser.Math.Vector2): Phaser.Math.Vector2;$/;"	m
missingImage	pilas-engine/declaraciones/phaser.d.ts	/^            readonly missingImage: string;$/;"	m
mixes	pilas-engine/declaraciones/phaser.d.ts	/^            mixes: Phaser.Structs.Map<string, Phaser.Animations.Animation>;$/;"	m
mobileSafari	pilas-engine/declaraciones/phaser.d.ts	/^            mobileSafari: boolean;$/;"	m
mode	pilas-engine/pilas.ts	/^      mode: Phaser.Scale.NONE,$/;"	m
modelPosition	pilas-engine/declaraciones/phaser.d.ts	/^            modelPosition: Phaser.Math.Vector3;$/;"	m
modelRotation	pilas-engine/declaraciones/phaser.d.ts	/^            modelRotation: Phaser.Math.Vector3;$/;"	m
modelScale	pilas-engine/declaraciones/phaser.d.ts	/^            modelScale: Phaser.Math.Vector3;$/;"	m
models	pilas-engine/declaraciones/phaser.d.ts	/^                    models: Phaser.Types.Geom.Mesh.OBJModel[];$/;"	m
modificar_modo_de_pantalla	pilas-engine/modos/modo_ejecucion.ts	/^  modificar_modo_de_pantalla() {$/;"	m
modo	pilas-engine/pilas.ts	/^  modo: any;$/;"	m
modo_fisica_activado	pilas-engine/modos/modo_ejecucion.ts	/^  modo_fisica_activado: boolean;$/;"	m
modo_posicion_activado	pilas-engine/depurador.ts	/^  modo_posicion_activado: boolean;$/;"	m
modo_simple	pilas-engine/modos/modo_cargador.ts	/^  modo_simple: boolean;$/;"	m
moneda	pilas-engine/actores.ts	/^  moneda() {$/;"	m
moneda	pilas-engine/actores/moneda.ts	/^class moneda extends Actor {$/;"	c
mostrar	pilas-engine/animacion_de_propiedad.ts	/^  mostrar(duraci√≥n: number = 0) {$/;"	m
mostrar	pilas-engine/animacion_nula.ts	/^  mostrar() {$/;"	m
mostrar_fisica	pilas-engine/depurador.ts	/^  mostrar_fisica: boolean;$/;"	m
mostrar_fps	pilas-engine/depurador.ts	/^  mostrar_fps: boolean;$/;"	m
motionFactor	pilas-engine/declaraciones/phaser.d.ts	/^            motionFactor: number;$/;"	m
mouse	pilas-engine/declaraciones/phaser.d.ts	/^            mouse: Phaser.Input.Mouse.MouseManager;$/;"	m
mouse	pilas-engine/pilas.ts	/^        mouse: true,$/;"	m
mousePointer	pilas-engine/declaraciones/phaser.d.ts	/^            mousePointer: Phaser.Input.Pointer;$/;"	m
mousePointer	pilas-engine/declaraciones/phaser.d.ts	/^            readonly mousePointer: Phaser.Input.Pointer;$/;"	m
mouseSpring	pilas-engine/declaraciones/phaser.d.ts	/^                mouseSpring(options?: Phaser.Types.Physics.Matter.MatterConstraintConfig): MatterJS.ConstraintType;$/;"	m
moveAbove	pilas-engine/declaraciones/phaser.d.ts	/^            moveAbove(child1: Phaser.GameObjects.GameObject, child2: Phaser.GameObjects.GameObject): this;$/;"	m
moveAbove	pilas-engine/declaraciones/phaser.d.ts	/^            moveAbove(child1: T, child2: T): void;$/;"	m
moveAbove	pilas-engine/declaraciones/phaser.d.ts	/^            moveAbove(keyA: string | Phaser.Scene, keyB: string | Phaser.Scene): this;$/;"	m
moveAbove	pilas-engine/declaraciones/phaser.d.ts	/^            moveAbove(keyA: string | Phaser.Scene, keyB?: string | Phaser.Scene): this;$/;"	m
moveBelow	pilas-engine/declaraciones/phaser.d.ts	/^            moveBelow(child1: Phaser.GameObjects.GameObject, child2: Phaser.GameObjects.GameObject): this;$/;"	m
moveBelow	pilas-engine/declaraciones/phaser.d.ts	/^            moveBelow(child1: T, child2: T): void;$/;"	m
moveBelow	pilas-engine/declaraciones/phaser.d.ts	/^            moveBelow(keyA: string | Phaser.Scene, keyB: string | Phaser.Scene): this;$/;"	m
moveBelow	pilas-engine/declaraciones/phaser.d.ts	/^            moveBelow(keyA: string | Phaser.Scene, keyB?: string | Phaser.Scene): this;$/;"	m
moveDown	pilas-engine/declaraciones/phaser.d.ts	/^            moveDown(child: Phaser.GameObjects.GameObject): this;$/;"	m
moveDown	pilas-engine/declaraciones/phaser.d.ts	/^            moveDown(child: T): T;$/;"	m
moveDown	pilas-engine/declaraciones/phaser.d.ts	/^            moveDown(key: string | Phaser.Scene): this;$/;"	m
moveDown	pilas-engine/declaraciones/phaser.d.ts	/^            moveDown(key?: string | Phaser.Scene): this;$/;"	m
moveTime	pilas-engine/declaraciones/phaser.d.ts	/^            moveTime: number;$/;"	m
moveTo	pilas-engine/declaraciones/phaser.d.ts	/^                moveTo(gameObject: Phaser.GameObjects.GameObject, x: number, y: number, speed?: number, maxTime?: number): number;$/;"	m
moveTo	pilas-engine/declaraciones/phaser.d.ts	/^                moveTo: boolean;$/;"	m
moveTo	pilas-engine/declaraciones/phaser.d.ts	/^            moveTo(child: Phaser.GameObjects.GameObject, index: number): this;$/;"	m
moveTo	pilas-engine/declaraciones/phaser.d.ts	/^            moveTo(child: T, index: number): T;$/;"	m
moveTo	pilas-engine/declaraciones/phaser.d.ts	/^            moveTo(x: number | Phaser.Math.Vector2, y?: number): this;$/;"	m
moveTo	pilas-engine/declaraciones/phaser.d.ts	/^            moveTo(x: number, y: number): this;$/;"	m
moveToObject	pilas-engine/declaraciones/phaser.d.ts	/^                moveToObject(gameObject: Phaser.GameObjects.GameObject, destination: object, speed?: number, maxTime?: number): number;$/;"	m
moveToX	pilas-engine/declaraciones/phaser.d.ts	/^                moveToX: Phaser.GameObjects.Particles.EmitterOp;$/;"	m
moveToY	pilas-engine/declaraciones/phaser.d.ts	/^                moveToY: Phaser.GameObjects.Particles.EmitterOp;$/;"	m
moveUp	pilas-engine/declaraciones/phaser.d.ts	/^            moveUp(child: Phaser.GameObjects.GameObject): this;$/;"	m
moveUp	pilas-engine/declaraciones/phaser.d.ts	/^            moveUp(child: T): T;$/;"	m
moveUp	pilas-engine/declaraciones/phaser.d.ts	/^            moveUp(key: string | Phaser.Scene): this;$/;"	m
moveUp	pilas-engine/declaraciones/phaser.d.ts	/^            moveUp(key?: string | Phaser.Scene): this;$/;"	m
movementX	pilas-engine/declaraciones/phaser.d.ts	/^            movementX: number;$/;"	m
movementY	pilas-engine/declaraciones/phaser.d.ts	/^            movementY: number;$/;"	m
mover	pilas-engine/animacion_de_propiedad.ts	/^  mover(x: number, y: number, duraci√≥n: number = 0) {$/;"	m
mover	pilas-engine/modos/camara_en_modo_edicion.ts	/^  mover(x, y) {$/;"	m
mover_actor_seleccionado	pilas-engine/modos/modo_editor.ts	/^  mover_actor_seleccionado(pulsa_shift, x, y) {$/;"	m
mover_cursor_de_la_grilla	pilas-engine/modos/modo_deprecated.ts	/^  mover_cursor_de_la_grilla(x: number, y: number) {$/;"	m
mover_hacia_el_punto	pilas-engine/actores/-actor-base.ts	/^  mover_hacia_el_punto(x: number, y: number, velocidad: number = 10) {$/;"	m
mover_hasta	pilas-engine/animacion_de_propiedad.ts	/^  mover_hasta(x: number, y: number, duraci√≥n: number = 0) {$/;"	m
mover_hasta	pilas-engine/animacion_nula.ts	/^  mover_hasta() {$/;"	m
mover_x	pilas-engine/animacion_de_propiedad.ts	/^  mover_x(x: number, duraci√≥n: number = 0) {$/;"	m
mover_x	pilas-engine/animacion_nula.ts	/^  mover_x() {$/;"	m
mover_x_hasta	pilas-engine/animacion_de_propiedad.ts	/^  mover_x_hasta(x: number, duraci√≥n: number = 0) {$/;"	m
mover_x_hasta	pilas-engine/animacion_nula.ts	/^  mover_x_hasta() {$/;"	m
mover_y	pilas-engine/animacion_de_propiedad.ts	/^  mover_y(y: number, duraci√≥n: number = 0) {$/;"	m
mover_y	pilas-engine/animacion_nula.ts	/^  mover_y() {$/;"	m
mover_y_hasta	pilas-engine/animacion_de_propiedad.ts	/^  mover_y_hasta(y: number, duraci√≥n: number = 0) {$/;"	m
mover_y_hasta	pilas-engine/animacion_nula.ts	/^  mover_y_hasta() {$/;"	m
moves	pilas-engine/declaraciones/phaser.d.ts	/^                moves: boolean;$/;"	m
mp3	pilas-engine/declaraciones/phaser.d.ts	/^            mp3: boolean;$/;"	m
mp4	pilas-engine/declaraciones/phaser.d.ts	/^            mp4: boolean;$/;"	m
msPerFrame	pilas-engine/declaraciones/phaser.d.ts	/^            msPerFrame: number;$/;"	m
mspointer	pilas-engine/declaraciones/phaser.d.ts	/^            mspointer: boolean;$/;"	m
multiFile	pilas-engine/declaraciones/phaser.d.ts	/^            multiFile: Phaser.Loader.MultiFile;$/;"	m
multiatlas	pilas-engine/declaraciones/phaser.d.ts	/^            multiatlas(key: string | Phaser.Types.Loader.FileTypes.MultiAtlasFileConfig | Phaser.Types.Loader.FileTypes.MultiAtlasFileConfig[], atlasURL?: string, path?: string, baseURL?: string, atlasXhrSettings?: Phaser.Types.Loader.XHRSettingsObject): this;$/;"	m
multiply	pilas-engine/declaraciones/phaser.d.ts	/^                multiply(rhs: Phaser.GameObjects.Components.TransformMatrix, out?: Phaser.GameObjects.Components.TransformMatrix): this | Phaser.GameObjects.Components.TransformMatrix;$/;"	m
multiply	pilas-engine/declaraciones/phaser.d.ts	/^            multiply(a: number[]): this;$/;"	m
multiply	pilas-engine/declaraciones/phaser.d.ts	/^            multiply(b: Phaser.Math.Quaternion | Phaser.Math.Vector4): Phaser.Math.Quaternion;$/;"	m
multiply	pilas-engine/declaraciones/phaser.d.ts	/^            multiply(src: Phaser.Math.Matrix3): Phaser.Math.Matrix3;$/;"	m
multiply	pilas-engine/declaraciones/phaser.d.ts	/^            multiply(src: Phaser.Math.Matrix4): this;$/;"	m
multiply	pilas-engine/declaraciones/phaser.d.ts	/^            multiply(src: Phaser.Types.Math.Vector2Like): Phaser.Math.Vector2;$/;"	m
multiply	pilas-engine/declaraciones/phaser.d.ts	/^            multiply(v: Phaser.Math.Vector2 | Phaser.Math.Vector3 | Phaser.Math.Vector4): Phaser.Math.Vector4;$/;"	m
multiply	pilas-engine/declaraciones/phaser.d.ts	/^            multiply(v: Phaser.Math.Vector2 | Phaser.Math.Vector3): Phaser.Math.Vector3;$/;"	m
multiply	pilas-engine/laser.ts	/^  multiply(factor: number) {$/;"	m
multiplyLocal	pilas-engine/declaraciones/phaser.d.ts	/^            multiplyLocal(src: Phaser.Math.Matrix4): this;$/;"	m
multiplyMatrices	pilas-engine/declaraciones/phaser.d.ts	/^            multiplyMatrices(a: Phaser.Math.Matrix4, b: Phaser.Math.Matrix4): this;$/;"	m
multiplyToMat4	pilas-engine/declaraciones/phaser.d.ts	/^            multiplyToMat4(src: Phaser.Math.Matrix4, out: Phaser.Math.Matrix4): Phaser.Math.Matrix4;$/;"	m
multiplyWithOffset	pilas-engine/declaraciones/phaser.d.ts	/^                multiplyWithOffset(src: Phaser.GameObjects.Components.TransformMatrix, offsetX: number, offsetY: number): this;$/;"	m
musica_en_reproduccion	pilas-engine/pilas.ts	/^  private musica_en_reproduccion: any;$/;"	m
mute	pilas-engine/declaraciones/phaser.d.ts	/^            mute: boolean;$/;"	m
muteNode	pilas-engine/declaraciones/phaser.d.ts	/^            muteNode: GainNode;$/;"	m
name	pilas-engine/declaraciones/phaser.d.ts	/^                    name: string;$/;"	m
name	pilas-engine/declaraciones/phaser.d.ts	/^                name: string;$/;"	m
name	pilas-engine/declaraciones/phaser.d.ts	/^            name: string;$/;"	m
name	pilas-engine/declaraciones/phaser.d.ts	/^        name: string;$/;"	m
name	pilas-engine/libs/spriter.ts	/^  name: string = "";$/;"	m
nave	pilas-engine/actores.ts	/^  nave() {$/;"	m
nave	pilas-engine/actores/nave.ts	/^class nave extends Actor {$/;"	c
navegador	pilas-engine/utilidades.ts	/^  navegador: string;$/;"	m
needsUpdate	pilas-engine/declaraciones/phaser.d.ts	/^            needsUpdate: boolean;$/;"	m
negate	pilas-engine/declaraciones/phaser.d.ts	/^            negate(): Phaser.Math.Vector2;$/;"	m
negate	pilas-engine/declaraciones/phaser.d.ts	/^            negate(): Phaser.Math.Vector3;$/;"	m
negate	pilas-engine/declaraciones/phaser.d.ts	/^            negate(): Phaser.Math.Vector4;$/;"	m
negative	pilas-engine/declaraciones/phaser.d.ts	/^            negative(multiply?: boolean): this;$/;"	m
newType	pilas-engine/declaraciones/phaser.d.ts	/^                newType: boolean;$/;"	m
newVelocity	pilas-engine/declaraciones/phaser.d.ts	/^                readonly newVelocity: Phaser.Math.Vector2;$/;"	m
newtonsCradle	pilas-engine/declaraciones/phaser.d.ts	/^                newtonsCradle(x: number, y: number, number: number, size: number, length: number): MatterJS.CompositeType;$/;"	m
next	pilas-engine/declaraciones/phaser.d.ts	/^            readonly next: Phaser.GameObjects.GameObject;$/;"	m
next	pilas-engine/declaraciones/phaser.d.ts	/^            readonly next: T;$/;"	m
nextAnim	pilas-engine/declaraciones/phaser.d.ts	/^            nextAnim: string | Phaser.Animations.Animation | Phaser.Types.Animations.PlayAnimationConfig;$/;"	m
nextAnimsQueue	pilas-engine/declaraciones/phaser.d.ts	/^            nextAnimsQueue: any[];$/;"	m
nextCategory	pilas-engine/declaraciones/phaser.d.ts	/^                nextCategory(): number;$/;"	m
nextFile	pilas-engine/declaraciones/phaser.d.ts	/^            nextFile(file: Phaser.Loader.File, success: boolean): void;$/;"	m
nextFpsUpdate	pilas-engine/declaraciones/phaser.d.ts	/^            readonly nextFpsUpdate: number;$/;"	m
nextFrame	pilas-engine/declaraciones/phaser.d.ts	/^            nextFrame(): Phaser.GameObjects.GameObject;$/;"	m
nextFrame	pilas-engine/declaraciones/phaser.d.ts	/^            nextFrame(state: Phaser.Animations.AnimationState): void;$/;"	m
nextFrame	pilas-engine/declaraciones/phaser.d.ts	/^            readonly nextFrame: Phaser.Animations.AnimationFrame;$/;"	m
nextGroup	pilas-engine/declaraciones/phaser.d.ts	/^                nextGroup(isNonColliding?: boolean): number;$/;"	m
nextState	pilas-engine/declaraciones/phaser.d.ts	/^            nextState(): void;$/;"	m
nextTick	pilas-engine/declaraciones/phaser.d.ts	/^            nextTick: number;$/;"	m
nextTypeMatch	pilas-engine/declaraciones/phaser.d.ts	/^                nextTypeMatch: boolean;$/;"	m
night	pilas-engine/declaraciones/phaser.d.ts	/^            night(intensity?: number, multiply?: boolean): this;$/;"	m
noButtonDown	pilas-engine/declaraciones/phaser.d.ts	/^            noButtonDown(): boolean;$/;"	m
node	pilas-engine/declaraciones/phaser.d.ts	/^            node: Element;$/;"	m
node	pilas-engine/declaraciones/phaser.d.ts	/^            node: boolean;$/;"	m
nodeWebkit	pilas-engine/declaraciones/phaser.d.ts	/^            nodeWebkit: boolean;$/;"	m
nombre	pilas-engine/actores/-actor-base.ts	/^      nombre: this.nombre,$/;"	m
nombre	pilas-engine/actores/-actor-base.ts	/^  get nombre() {$/;"	m
nombre	pilas-engine/actores/-actor-base.ts	/^  set nombre(a: any) {$/;"	m
nombre	pilas-engine/actores/conejo.ts	/^        nombre: "pies"$/;"	m
nombre	pilas-engine/colores.ts	/^        nombre: "amarillo",$/;"	m
nombre	pilas-engine/colores.ts	/^        nombre: "azul",$/;"	m
nombre	pilas-engine/colores.ts	/^        nombre: "blanco",$/;"	m
nombre	pilas-engine/colores.ts	/^        nombre: "cyan",$/;"	m
nombre	pilas-engine/colores.ts	/^        nombre: "gris",$/;"	m
nombre	pilas-engine/colores.ts	/^        nombre: "marron",$/;"	m
nombre	pilas-engine/colores.ts	/^        nombre: "naranja",$/;"	m
nombre	pilas-engine/colores.ts	/^        nombre: "negro",$/;"	m
nombre	pilas-engine/colores.ts	/^        nombre: "rojo",$/;"	m
nombre	pilas-engine/colores.ts	/^        nombre: "rosa",$/;"	m
nombre	pilas-engine/colores.ts	/^        nombre: "verde",$/;"	m
nombre	pilas-engine/colores.ts	/^        nombre: "violeta",$/;"	m
nombre	pilas-engine/colores.ts	/^  nombre: string;$/;"	m
nombre	pilas-engine/comportamientos.ts	/^        nombre: nombre,$/;"	m
nombre	pilas-engine/habilidades.ts	/^        nombre: nombre,$/;"	m
nombre	pilas-engine/laser.ts	/^  nombre: string;$/;"	m
nombre	pilas-engine/modos/modo.ts	/^          nombre: laser.nombre,$/;"	m
nombre	pilas-engine/modos/modo_cargador.ts	/^                nombre: "principal",$/;"	m
nombre	pilas-engine/modos/modo_cargador.ts	/^              nombre: "principal",$/;"	m
nombre	pilas-engine/pilas.ts	/^            nombre: "explosion",$/;"	m
nombre	pilas-engine/pilas.ts	/^            nombre: "gallina",$/;"	m
nombre	pilas-engine/pilas.ts	/^            nombre: "laser",$/;"	m
nombre	pilas-engine/pilas.ts	/^            nombre: "moneda",$/;"	m
nombre	pilas-engine/pilas.ts	/^            nombre: "salto-corto",$/;"	m
nombre	pilas-engine/pilas.ts	/^            nombre: "salto-largo",$/;"	m
nombre	pilas-engine/pilas.ts	/^            nombre: "seleccion-aguda",$/;"	m
nombre	pilas-engine/pilas.ts	/^            nombre: "seleccion-grave",$/;"	m
nombre_de_la_escena_inicial	pilas-engine/mensajes.ts	/^      nombre_de_la_escena_inicial: datos.nombre_de_la_escena_inicial,$/;"	m
nombre_de_la_escena_inicial	pilas-engine/modos/modo_cargador.ts	/^        nombre_de_la_escena_inicial: "principal",$/;"	m
nombre_de_la_escena_inicial	pilas-engine/modos/modo_ejecucion.ts	/^      nombre_de_la_escena_inicial: nombre,$/;"	m
nombre_de_la_escena_inicial	pilas-engine/modos/modo_ejecucion.ts	/^  nombre_de_la_escena_inicial: string = null;$/;"	m
nombre_del_contexto	pilas-engine/pilas.ts	/^  nombre_del_contexto: string; \/\/ nombre del contexto para identificar mensajes.$/;"	m
nombres_de_eventos	pilas-engine/eventos_de_escena.ts	/^  nombres_de_eventos: string[];$/;"	m
none	pilas-engine/declaraciones/phaser.d.ts	/^                    none: boolean;$/;"	m
normal	pilas-engine/declaraciones/phaser.d.ts	/^                    normal: MatterJS.Vector;$/;"	m
normal	pilas-engine/declaraciones/phaser.d.ts	/^            normal(): number;$/;"	m
normal	pilas-engine/laser.ts	/^  normal: any;$/;"	m
normal	pilas-engine/pilas.ts	/^      normal: "default",$/;"	m
normalFromMat4	pilas-engine/declaraciones/phaser.d.ts	/^            normalFromMat4(m: Phaser.Math.Matrix4): Phaser.Math.Matrix3;$/;"	m
normalTexture	pilas-engine/declaraciones/phaser.d.ts	/^                normalTexture: WebGLTexture;$/;"	m
normalX	pilas-engine/declaraciones/phaser.d.ts	/^                normalX: number;$/;"	m
normalY	pilas-engine/declaraciones/phaser.d.ts	/^                normalY: number;$/;"	m
normalZ	pilas-engine/declaraciones/phaser.d.ts	/^                normalZ: number;$/;"	m
normalizar	pilas-engine/modos/modo_deprecated.ts	/^    function normalizar(valor: number) {$/;"	f
normalize	pilas-engine/declaraciones/phaser.d.ts	/^            normalize(): Phaser.Math.Quaternion;$/;"	m
normalize	pilas-engine/declaraciones/phaser.d.ts	/^            normalize(): Phaser.Math.Vector2;$/;"	m
normalize	pilas-engine/declaraciones/phaser.d.ts	/^            normalize(): Phaser.Math.Vector3;$/;"	m
normalize	pilas-engine/declaraciones/phaser.d.ts	/^            normalize(): Phaser.Math.Vector4;$/;"	m
normalizeLeftHand	pilas-engine/declaraciones/phaser.d.ts	/^            normalizeLeftHand(): Phaser.Math.Vector2;$/;"	m
normalizeRightHand	pilas-engine/declaraciones/phaser.d.ts	/^            normalizeRightHand(): Phaser.Math.Vector2;$/;"	m
normalized	pilas-engine/declaraciones/phaser.d.ts	/^                    normalized: boolean;$/;"	m
normalized	pilas-engine/laser.ts	/^  normalized(magnitude = 1) {$/;"	m
notificar_ejecucion_del_bloque	pilas-engine/pilas.ts	/^  notificar_ejecucion_del_bloque(bloque: string, id: string) {$/;"	m
notificar_imagenes_cargadas	pilas-engine/modos/modo_cargador.ts	/^  notificar_imagenes_cargadas() {$/;"	m
notificar_traza_de_ejecucion	pilas-engine/pilas.ts	/^  notificar_traza_de_ejecucion(id: string | number, linea: any) {$/;"	m
now	pilas-engine/declaraciones/phaser.d.ts	/^            now: number;$/;"	m
nube	pilas-engine/actores.ts	/^  nube() {$/;"	m
nube	pilas-engine/actores/nube.ts	/^class nube extends Actor {$/;"	c
nube_animada	pilas-engine/actores.ts	/^  nube_animada() {$/;"	m
nube_animada	pilas-engine/actores/nube_animada.ts	/^class nube_animada extends Actor {$/;"	c
nx	pilas-engine/declaraciones/phaser.d.ts	/^                nx: number;$/;"	m
ny	pilas-engine/declaraciones/phaser.d.ts	/^                ny: number;$/;"	m
nz	pilas-engine/declaraciones/phaser.d.ts	/^                nz: number;$/;"	m
obj	pilas-engine/declaraciones/phaser.d.ts	/^            obj(key: string | Phaser.Types.Loader.FileTypes.OBJFileConfig | Phaser.Types.Loader.FileTypes.OBJFileConfig[], objURL?: string, matURL?: string, flipUV?: boolean, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject): this;$/;"	m
obj	pilas-engine/declaraciones/phaser.d.ts	/^            obj: Phaser.Cache.BaseCache;$/;"	m
obj_info_keys	pilas-engine/libs/spriter.ts	/^  obj_info_keys: string[];$/;"	m
obj_info_map	pilas-engine/libs/spriter.ts	/^  obj_info_map: { [key: string]: ObjInfo };$/;"	m
object	pilas-engine/declaraciones/phaser.d.ts	/^                    object: any[];$/;"	m
object1	pilas-engine/declaraciones/phaser.d.ts	/^                object1: Phaser.Types.Physics.Arcade.ArcadeColliderType;$/;"	m
object2	pilas-engine/declaraciones/phaser.d.ts	/^                object2: Phaser.Types.Physics.Arcade.ArcadeColliderType;$/;"	m
object_array	pilas-engine/libs/spriter.ts	/^  object_array: BaseObject[] = [];$/;"	m
object_index	pilas-engine/libs/spriter.ts	/^  object_index: number = -1;$/;"	m
object_ref_array	pilas-engine/libs/spriter.ts	/^  object_ref_array: ObjectRef[];$/;"	m
objects	pilas-engine/declaraciones/phaser.d.ts	/^            objects: Phaser.Tilemaps.ObjectLayer[];$/;"	m
objects	pilas-engine/declaraciones/phaser.d.ts	/^            objects: Phaser.Types.Tilemaps.ObjectLayerConfig[];$/;"	m
objects	pilas-engine/declaraciones/phaser.d.ts	/^            objects: Phaser.Types.Tilemaps.TiledObject[];$/;"	m
observar	pilas-engine/escenas/-escena-base.ts	/^  observar(nombre: string, variable: any) {$/;"	m
observar	pilas-engine/pilas.ts	/^  observar(nombre: string, variable: any) {$/;"	m
obtener_actor_en	pilas-engine/pilas.ts	/^  obtener_actor_en(x: number, y: number) {$/;"	m
obtener_actor_mas_cercano	pilas-engine/laser.ts	/^  obtener_actor_mas_cercano() {$/;"	m
obtener_actor_por_etiqueta	pilas-engine/pilas.ts	/^  obtener_actor_por_etiqueta(etiqueta: string) {$/;"	m
obtener_actor_por_id	pilas-engine/modos/modo.ts	/^  obtener_actor_por_id(id) {$/;"	m
obtener_actor_por_nombre	pilas-engine/pilas.ts	/^  obtener_actor_por_nombre(nombre: string) {$/;"	m
obtener_actores	pilas-engine/pilas.ts	/^  obtener_actores() {$/;"	m
obtener_actores_en	pilas-engine/pilas.ts	/^  obtener_actores_en(_x: number, _y: number) {$/;"	m
obtener_angulo_entre_actores	pilas-engine/pilas.ts	/^  obtener_angulo_entre_actores(actor1: ActorBase, actor2: ActorBase) {$/;"	m
obtener_angulo_entre_puntos	pilas-engine/pilas.ts	/^  obtener_angulo_entre_puntos(x: number, y: number, x2: number, y2: number) {$/;"	m
obtener_animaciones	pilas-engine/huesos.ts	/^  obtener_animaciones() {$/;"	m
obtener_boton	pilas-engine/control.ts	/^  obtener_boton(indice) {$/;"	m
obtener_cantidad_de_actores	pilas-engine/pilas.ts	/^  obtener_cantidad_de_actores() {$/;"	m
obtener_cantidad_de_gamepads_conectados	pilas-engine/control.ts	/^  obtener_cantidad_de_gamepads_conectados() {$/;"	m
obtener_cantidad_de_posiciones	pilas-engine/historia.ts	/^  obtener_cantidad_de_posiciones() {$/;"	m
obtener_codigo_para_exportar_clases	pilas-engine/modos/modo_ejecucion.ts	/^  obtener_codigo_para_exportar_clases(codigo) {$/;"	m
obtener_colisiones	pilas-engine/laser.ts	/^  obtener_colisiones() {$/;"	m
obtener_color_al_azar	pilas-engine/utilidades.ts	/^  obtener_color_al_azar() {$/;"	m
obtener_definicion_de_actor_por_nombre	pilas-engine/modos/modo_ejecucion.ts	/^  obtener_definicion_de_actor_por_nombre(nombre: string) {$/;"	m
obtener_diccionario_de_actores	pilas-engine/pilas.ts	/^  obtener_diccionario_de_actores() {$/;"	m
obtener_distancia_al_actor	pilas-engine/actores/-actor-base.ts	/^  obtener_distancia_al_actor(actor: Actor) {$/;"	m
obtener_distancia_al_punto	pilas-engine/actores/-actor-base.ts	/^  obtener_distancia_al_punto(x: number, y: number) {$/;"	m
obtener_distancia_entre	pilas-engine/utilidades.ts	/^  obtener_distancia_entre(desde_x: number, desde_y: number, hasta_x: number, hasta_y: number) {$/;"	m
obtener_distancia_entre_actores	pilas-engine/pilas.ts	/^  obtener_distancia_entre_actores(actor1: ActorBase, actor2: ActorBase) {$/;"	m
obtener_distancia_entre_puntos	pilas-engine/pilas.ts	/^  obtener_distancia_entre_puntos(x: number, y: number, x2: number, y2: number) {$/;"	m
obtener_entidades_de_actores_de_todas_las_escenas	pilas-engine/modos/modo_ejecucion.ts	/^  obtener_entidades_de_actores_de_todas_las_escenas() {$/;"	m
obtener_escena_inicial	pilas-engine/modos/modo_ejecucion.ts	/^  obtener_escena_inicial() {$/;"	m
obtener_escena_por_nombre	pilas-engine/modos/modo_ejecucion.ts	/^  obtener_escena_por_nombre(nombre: string) {$/;"	m
obtener_factores	pilas-engine/modos/modo_deprecated.ts	/^  obtener_factores() {$/;"	m
obtener_factores	pilas-engine/modos/modo_pausa.ts	/^  obtener_factores() {$/;"	m
obtener_foto	pilas-engine/historia.ts	/^  obtener_foto(posicion: number) {$/;"	m
obtener_id_autoincremental	pilas-engine/utilidades.ts	/^  obtener_id_autoincremental() {$/;"	m
obtener_imagen_para_nineslice	pilas-engine/modos/modo.ts	/^  obtener_imagen_para_nineslice(imagen: string) {$/;"	m
obtener_laser	pilas-engine/actores/-actor-base.ts	/^  obtener_laser(nombre: string) {$/;"	m
obtener_mas_similar	pilas-engine/utilidades.ts	/^  obtener_mas_similar(nombre, posibilidades) {$/;"	m
obtener_nombre_de_la_escena_inicial	pilas-engine/modos/modo_ejecucion.ts	/^  obtener_nombre_de_la_escena_inicial() {$/;"	m
obtener_nombre_de_la_tecla_desde_un_evento	pilas-engine/utilidades.ts	/^  obtener_nombre_de_la_tecla_desde_un_evento(evento) {$/;"	m
obtener_nombre_para	pilas-engine/escenas/-escena-base.ts	/^  obtener_nombre_para(nombre_propuesto: string) {$/;"	m
obtener_nombres_de_actores	pilas-engine/modos/modo_ejecucion.ts	/^  obtener_nombres_de_actores() {$/;"	m
obtener_o_crear_sprite	pilas-engine/huesos.ts	/^  obtener_o_crear_sprite(nombre: string, imagen: string) {$/;"	m
obtener_oscilacion	pilas-engine/escenas/-escena.ts	/^  obtener_oscilacion(velocidad: number, intensidad: number) {$/;"	m
obtener_posicion_de_desplazamiento_de_la_camara	pilas-engine/modos/modo_deprecated.ts	/^  obtener_posicion_de_desplazamiento_de_la_camara() {$/;"	m
obtener_posicion_de_la_camara	pilas-engine/modos/modo.ts	/^  obtener_posicion_de_la_camara() {$/;"	m
obtener_primer_animacion	pilas-engine/huesos.ts	/^  obtener_primer_animacion() {$/;"	m
obtener_rampa_de_colores	pilas-engine/utilidades.ts	/^  obtener_rampa_de_colores() {$/;"	m
obtener_referencias_a_clases	pilas-engine/modos/modo_ejecucion.ts	/^  obtener_referencias_a_clases() {$/;"	m
obtener_sensor	pilas-engine/actores/-actor-base.ts	/^  obtener_sensor(nombre: string) {$/;"	m
obtener_siguiente_animacion	pilas-engine/huesos.ts	/^  obtener_siguiente_animacion() {$/;"	m
obtener_similaridad	pilas-engine/utilidades.ts	/^  obtener_similaridad(cadena1: string, cadena2: string) {$/;"	m
obtener_sonido_con_nombre_similar	pilas-engine/sonidos.ts	/^  obtener_sonido_con_nombre_similar(nombre: string) {$/;"	m
obtener_stick	pilas-engine/control.ts	/^  obtener_stick(tipo) {$/;"	m
obtener_todos_los_actores_con_la_etiqueta	pilas-engine/pilas.ts	/^  obtener_todos_los_actores_con_la_etiqueta(etiqueta: string) {$/;"	m
ocultar	pilas-engine/animacion_de_propiedad.ts	/^  ocultar(duraci√≥n: number = 0) {$/;"	m
ocultar	pilas-engine/animacion_nula.ts	/^  ocultar() {$/;"	m
ocultar_cursor	pilas-engine/pilas.ts	/^  ocultar_cursor() {$/;"	m
off	pilas-engine/declaraciones/phaser.d.ts	/^            off(event: string | symbol, fn?: Function, context?: any, once?: boolean): this;$/;"	m
offset	pilas-engine/declaraciones/phaser.d.ts	/^                    offset: number;$/;"	m
offset	pilas-engine/declaraciones/phaser.d.ts	/^                offset: Phaser.Math.Vector2;$/;"	m
offset	pilas-engine/declaraciones/phaser.d.ts	/^                readonly offset: Phaser.Math.Vector2;$/;"	m
offset	pilas-engine/declaraciones/phaser.d.ts	/^            offset: number;$/;"	m
offsetY	pilas-engine/laser.ts	/^  get offsetY() {$/;"	m
ogg	pilas-engine/declaraciones/phaser.d.ts	/^            ogg: boolean;$/;"	m
olvidar	pilas-engine/actores/-actor-base.ts	/^  olvidar(habilidad: string) {$/;"	m
on	pilas-engine/declaraciones/phaser.d.ts	/^                on: boolean;$/;"	m
on	pilas-engine/declaraciones/phaser.d.ts	/^            on(event: string | symbol, fn: Function, context?: any): this;$/;"	m
onActive	pilas-engine/declaraciones/phaser.d.ts	/^                onActive(currentShader: Phaser.Renderer.WebGL.WebGLShader): void;$/;"	m
onAfterFlush	pilas-engine/declaraciones/phaser.d.ts	/^                onAfterFlush(isPostFlush?: boolean): void;$/;"	m
onBatch	pilas-engine/declaraciones/phaser.d.ts	/^                onBatch(gameObject?: Phaser.GameObjects.GameObject): void;$/;"	m
onBeforeFlush	pilas-engine/declaraciones/phaser.d.ts	/^                onBeforeFlush(isPostFlush?: boolean): void;$/;"	m
onBind	pilas-engine/declaraciones/phaser.d.ts	/^                onBind(gameObject?: Phaser.GameObjects.GameObject): void;$/;"	m
onBlur	pilas-engine/declaraciones/phaser.d.ts	/^            protected onBlur(): void;$/;"	m
onBlur	pilas-engine/declaraciones/phaser.d.ts	/^        protected onBlur(): void;$/;"	m
onBoot	pilas-engine/declaraciones/phaser.d.ts	/^                onBoot(): void;$/;"	m
onCeiling	pilas-engine/declaraciones/phaser.d.ts	/^                onCeiling(): boolean;$/;"	m
onChange	pilas-engine/declaraciones/phaser.d.ts	/^                onChange(value: number): this;$/;"	m
onChange	pilas-engine/declaraciones/phaser.d.ts	/^            onChange(): void;$/;"	m
onChangeCallback	pilas-engine/declaraciones/phaser.d.ts	/^            onChangeCallback: Function;$/;"	m
onCollide	pilas-engine/declaraciones/phaser.d.ts	/^                onCollide: boolean;$/;"	m
onContextRestored	pilas-engine/declaraciones/phaser.d.ts	/^            protected onContextRestored(): void;$/;"	m
onDown	pilas-engine/declaraciones/phaser.d.ts	/^                onDown(event: KeyboardEvent): void;$/;"	m
onDown	pilas-engine/declaraciones/phaser.d.ts	/^                onDown(pointer: Phaser.Input.Pointer): void;$/;"	m
onDraw	pilas-engine/declaraciones/phaser.d.ts	/^                onDraw(renderTarget: Phaser.Renderer.WebGL.RenderTarget): void;$/;"	m
onEmit	pilas-engine/declaraciones/phaser.d.ts	/^                    onEmit: Phaser.Types.GameObjects.Particles.EmitterOpOnEmitCallback;$/;"	m
onEmit	pilas-engine/declaraciones/phaser.d.ts	/^                onEmit: Phaser.Types.GameObjects.Particles.EmitterOpOnEmitCallback;$/;"	m
onError	pilas-engine/declaraciones/phaser.d.ts	/^                onError(): void;$/;"	m
onError	pilas-engine/declaraciones/phaser.d.ts	/^            onError(xhr: XMLHttpRequest, event: ProgressEvent): void;$/;"	m
onFileComplete	pilas-engine/declaraciones/phaser.d.ts	/^                onFileComplete(file: Phaser.Loader.File): void;$/;"	m
onFileComplete	pilas-engine/declaraciones/phaser.d.ts	/^            onFileComplete(file: Phaser.Loader.File): void;$/;"	m
onFileFailed	pilas-engine/declaraciones/phaser.d.ts	/^            onFileFailed(file: Phaser.Loader.File): void;$/;"	m
onFloor	pilas-engine/declaraciones/phaser.d.ts	/^                onFloor(): boolean;$/;"	m
onFocus	pilas-engine/declaraciones/phaser.d.ts	/^            protected onFocus(): void;$/;"	m
onFocus	pilas-engine/declaraciones/phaser.d.ts	/^        protected onFocus(): void;$/;"	m
onFullScreenChange	pilas-engine/declaraciones/phaser.d.ts	/^            protected onFullScreenChange(): void;$/;"	m
onFullScreenError	pilas-engine/declaraciones/phaser.d.ts	/^            onFullScreenError(): void;$/;"	m
onHidden	pilas-engine/declaraciones/phaser.d.ts	/^        protected onHidden(): void;$/;"	m
onKeyDown	pilas-engine/declaraciones/phaser.d.ts	/^                onKeyDown: Function;$/;"	m
onKeyUp	pilas-engine/declaraciones/phaser.d.ts	/^                onKeyUp: Function;$/;"	m
onLoad	pilas-engine/declaraciones/phaser.d.ts	/^                onLoad(): void;$/;"	m
onLoad	pilas-engine/declaraciones/phaser.d.ts	/^            onLoad(xhr: XMLHttpRequest, event: ProgressEvent): void;$/;"	m
onLoadComplete	pilas-engine/declaraciones/phaser.d.ts	/^                onLoadComplete(): void;$/;"	m
onMouseDown	pilas-engine/declaraciones/phaser.d.ts	/^                onMouseDown: Function;$/;"	m
onMouseDownWindow	pilas-engine/declaraciones/phaser.d.ts	/^                onMouseDownWindow: Function;$/;"	m
onMouseMove	pilas-engine/declaraciones/phaser.d.ts	/^                onMouseMove: Function;$/;"	m
onMouseOut	pilas-engine/declaraciones/phaser.d.ts	/^                onMouseOut: Function;$/;"	m
onMouseOver	pilas-engine/declaraciones/phaser.d.ts	/^                onMouseOver: Function;$/;"	m
onMouseUp	pilas-engine/declaraciones/phaser.d.ts	/^                onMouseUp: Function;$/;"	m
onMouseUpWindow	pilas-engine/declaraciones/phaser.d.ts	/^                onMouseUpWindow: Function;$/;"	m
onMouseWheel	pilas-engine/declaraciones/phaser.d.ts	/^                onMouseWheel: Function;$/;"	m
onOverlap	pilas-engine/declaraciones/phaser.d.ts	/^                onOverlap: boolean;$/;"	m
onParticleDeath	pilas-engine/declaraciones/phaser.d.ts	/^                onParticleDeath(callback: Phaser.Types.GameObjects.Particles.ParticleDeathCallback, context?: any): this;$/;"	m
onParticleEmit	pilas-engine/declaraciones/phaser.d.ts	/^                onParticleEmit(callback: Phaser.Types.GameObjects.Particles.ParticleEmitterCallback, context?: any): this;$/;"	m
onPostBatch	pilas-engine/declaraciones/phaser.d.ts	/^                onPostBatch(gameObject?: Phaser.GameObjects.GameObject): void;$/;"	m
onPostRender	pilas-engine/declaraciones/phaser.d.ts	/^                onPostRender(): void;$/;"	m
onPreBatch	pilas-engine/declaraciones/phaser.d.ts	/^                onPreBatch(gameObject?: Phaser.GameObjects.GameObject): void;$/;"	m
onPreRender	pilas-engine/declaraciones/phaser.d.ts	/^                onPreRender(): void;$/;"	m
onProcess	pilas-engine/declaraciones/phaser.d.ts	/^                onProcess(): void;$/;"	m
onProcess	pilas-engine/declaraciones/phaser.d.ts	/^            onProcess(): void;$/;"	m
onProcessComplete	pilas-engine/declaraciones/phaser.d.ts	/^            onProcessComplete(): void;$/;"	m
onProcessError	pilas-engine/declaraciones/phaser.d.ts	/^            onProcessError(): void;$/;"	m
onProgress	pilas-engine/declaraciones/phaser.d.ts	/^                onProgress(): void;$/;"	m
onProgress	pilas-engine/declaraciones/phaser.d.ts	/^            onProgress(event: ProgressEvent): void;$/;"	m
onRebind	pilas-engine/declaraciones/phaser.d.ts	/^                onRebind(): void;$/;"	m
onRender	pilas-engine/declaraciones/phaser.d.ts	/^                onRender(scene: Phaser.Scene, camera: Phaser.Cameras.Scene2D.Camera): void;$/;"	m
onResize	pilas-engine/declaraciones/phaser.d.ts	/^                onResize(gameSize: Phaser.Structs.Size, baseSize: Phaser.Structs.Size): void;$/;"	m
onResize	pilas-engine/declaraciones/phaser.d.ts	/^                onResize(width: number, height: number): void;$/;"	m
onResize	pilas-engine/modos/modo_editor.ts	/^    function onResize() {$/;"	f
onStart	pilas-engine/animacion_de_propiedad.ts	/^      onStart: function() {$/;"	m
onTouchCancel	pilas-engine/declaraciones/phaser.d.ts	/^                onTouchCancel: Function;$/;"	m
onTouchCancelWindow	pilas-engine/declaraciones/phaser.d.ts	/^                onTouchCancelWindow: Function;$/;"	m
onTouchEnd	pilas-engine/declaraciones/phaser.d.ts	/^                onTouchEnd: Function;$/;"	m
onTouchEndWindow	pilas-engine/declaraciones/phaser.d.ts	/^                onTouchEndWindow: Function;$/;"	m
onTouchMove	pilas-engine/declaraciones/phaser.d.ts	/^                onTouchMove: Function;$/;"	m
onTouchOut	pilas-engine/declaraciones/phaser.d.ts	/^                onTouchOut: Function;$/;"	m
onTouchOver	pilas-engine/declaraciones/phaser.d.ts	/^                onTouchOver: Function;$/;"	m
onTouchStart	pilas-engine/declaraciones/phaser.d.ts	/^                onTouchStart: Function;$/;"	m
onTouchStartWindow	pilas-engine/declaraciones/phaser.d.ts	/^                onTouchStartWindow: Function;$/;"	m
onUp	pilas-engine/declaraciones/phaser.d.ts	/^                onUp(event: KeyboardEvent): void;$/;"	m
onUp	pilas-engine/declaraciones/phaser.d.ts	/^                onUp(pointer: Phaser.Input.Pointer): void;$/;"	m
onUpdate	pilas-engine/actores/-actor-base.ts	/^      onUpdate: (tween, target) => {$/;"	m
onUpdate	pilas-engine/declaraciones/phaser.d.ts	/^                    onUpdate: Phaser.Types.GameObjects.Particles.EmitterOpOnUpdateCallback;$/;"	m
onUpdate	pilas-engine/declaraciones/phaser.d.ts	/^                onUpdate: Phaser.Types.GameObjects.Particles.EmitterOpOnUpdateCallback;$/;"	m
onVisible	pilas-engine/declaraciones/phaser.d.ts	/^        protected onVisible(): void;$/;"	m
onWall	pilas-engine/declaraciones/phaser.d.ts	/^                onWall(): boolean;$/;"	m
onWorldBounds	pilas-engine/declaraciones/phaser.d.ts	/^                onWorldBounds: boolean;$/;"	m
onWorldBounds	pilas-engine/declaraciones/phaser.d.ts	/^                readonly onWorldBounds: boolean;$/;"	m
once	pilas-engine/declaraciones/phaser.d.ts	/^            once(event: string | symbol, fn: Function, context?: any): this;$/;"	m
opacity	pilas-engine/declaraciones/phaser.d.ts	/^            opacity: number;$/;"	m
opciones	pilas-engine/pilas.ts	/^  opciones: any;$/;"	m
openChallenge	pilas-engine/declaraciones/phaser.d.ts	/^        openChallenge(text: string, key: string, frame?: string, sessionData?: object): this;$/;"	m
openInvite	pilas-engine/declaraciones/phaser.d.ts	/^        openInvite(text: string, key: string, frame?: string, sessionData?: object): this;$/;"	m
openRequest	pilas-engine/declaraciones/phaser.d.ts	/^        openRequest(text: string, key: string, frame?: string, sessionData?: object): this;$/;"	m
openShare	pilas-engine/declaraciones/phaser.d.ts	/^        openShare(text: string, key: string, frame?: string, sessionData?: object): this;$/;"	m
opera	pilas-engine/declaraciones/phaser.d.ts	/^            opera: boolean;$/;"	m
opus	pilas-engine/declaraciones/phaser.d.ts	/^            opus: boolean;$/;"	m
orientation	pilas-engine/declaraciones/phaser.d.ts	/^            orientation: Phaser.Scale.OrientationType;$/;"	m
orientation	pilas-engine/declaraciones/phaser.d.ts	/^            orientation: Phaser.Tilemaps.OrientationType;$/;"	m
orientation	pilas-engine/declaraciones/phaser.d.ts	/^            orientation: string;$/;"	m
origen	pilas-engine/mensajes.ts	/^      origen: origen$/;"	m
origin	pilas-engine/declaraciones/phaser.d.ts	/^                origin: object;$/;"	m
originX	pilas-engine/declaraciones/phaser.d.ts	/^                originX: number;$/;"	m
originX	pilas-engine/declaraciones/phaser.d.ts	/^            originX: number;$/;"	m
originX	pilas-engine/declaraciones/phaser.d.ts	/^            readonly originX: number;$/;"	m
originY	pilas-engine/declaraciones/phaser.d.ts	/^                originY: number;$/;"	m
originY	pilas-engine/declaraciones/phaser.d.ts	/^            originY: number;$/;"	m
originY	pilas-engine/declaraciones/phaser.d.ts	/^            readonly originY: number;$/;"	m
originalEvent	pilas-engine/declaraciones/phaser.d.ts	/^                originalEvent: KeyboardEvent;$/;"	m
ortho	pilas-engine/declaraciones/phaser.d.ts	/^            ortho(left: number, right: number, bottom: number, top: number, near: number, far: number): this;$/;"	m
os	pilas-engine/declaraciones/phaser.d.ts	/^        os: Phaser.Device.OS;$/;"	m
outerRadius	pilas-engine/declaraciones/phaser.d.ts	/^            outerRadius: number;$/;"	m
outlineFillAlpha	pilas-engine/declaraciones/phaser.d.ts	/^            outlineFillAlpha: number;$/;"	m
outlineFillColor	pilas-engine/declaraciones/phaser.d.ts	/^            outlineFillColor: number;$/;"	m
overlap	pilas-engine/declaraciones/phaser.d.ts	/^                overlap(object1: Phaser.GameObjects.GameObject | Phaser.GameObjects.GameObject[] | Phaser.GameObjects.Group | Phaser.GameObjects.Group[], object2: Phaser.GameObjects.GameObject | Phaser.GameObjects.GameObject[] | Phaser.GameObjects.Group | Phaser.GameObjects.Group[], collideCallback?: ArcadePhysicsCallback, processCallback?: ArcadePhysicsCallback, callbackContext?: any): Phaser.Physics.Arcade.Collider;$/;"	m
overlap	pilas-engine/declaraciones/phaser.d.ts	/^                overlap(object1: Phaser.Types.Physics.Arcade.ArcadeColliderType, object2?: Phaser.Types.Physics.Arcade.ArcadeColliderType, collideCallback?: ArcadePhysicsCallback, processCallback?: ArcadePhysicsCallback, callbackContext?: any): boolean;$/;"	m
overlap	pilas-engine/declaraciones/phaser.d.ts	/^                overlap(object1: Phaser.Types.Physics.Arcade.ArcadeColliderType, object2?: Phaser.Types.Physics.Arcade.ArcadeColliderType, overlapCallback?: ArcadePhysicsCallback, processCallback?: ArcadePhysicsCallback, callbackContext?: any): boolean;$/;"	m
overlap	pilas-engine/declaraciones/phaser.d.ts	/^                overlap(target: Phaser.Types.Physics.Matter.MatterBody | Phaser.Types.Physics.Matter.MatterBody[], bodies?: Phaser.Types.Physics.Matter.MatterBody[], overlapCallback?: ArcadePhysicsCallback, processCallback?: ArcadePhysicsCallback, callbackContext?: any): boolean;$/;"	m
overlapCirc	pilas-engine/declaraciones/phaser.d.ts	/^                overlapCirc(x: number, y: number, radius: number, includeDynamic?: boolean, includeStatic?: boolean): Phaser.Physics.Arcade.Body[] | Phaser.Physics.Arcade.StaticBody[];$/;"	m
overlapOnly	pilas-engine/declaraciones/phaser.d.ts	/^                overlapOnly: boolean;$/;"	m
overlapR	pilas-engine/declaraciones/phaser.d.ts	/^                overlapR: number;$/;"	m
overlapRect	pilas-engine/declaraciones/phaser.d.ts	/^                overlapRect(x: number, y: number, width: number, height: number, includeDynamic?: boolean, includeStatic?: boolean): Phaser.Physics.Arcade.Body[] | Phaser.Physics.Arcade.StaticBody[];$/;"	m
overlapTiles	pilas-engine/declaraciones/phaser.d.ts	/^                overlapTiles(sprite: Phaser.GameObjects.GameObject, tiles: Phaser.Tilemaps.Tile[], collideCallback?: ArcadePhysicsCallback, processCallback?: ArcadePhysicsCallback, callbackContext?: any): boolean;$/;"	m
overlapX	pilas-engine/declaraciones/phaser.d.ts	/^                overlapX: number;$/;"	m
overlapY	pilas-engine/declaraciones/phaser.d.ts	/^                overlapY: number;$/;"	m
override	pilas-engine/declaraciones/phaser.d.ts	/^            override: boolean;$/;"	m
p1	pilas-engine/declaraciones/phaser.d.ts	/^            p1: Phaser.Math.Vector2;$/;"	m
p2	pilas-engine/declaraciones/phaser.d.ts	/^            p2: Phaser.Math.Vector2;$/;"	m
p3	pilas-engine/declaraciones/phaser.d.ts	/^            p3: Phaser.Math.Vector2;$/;"	m
pack	pilas-engine/declaraciones/phaser.d.ts	/^                pack: false | Phaser.Types.Loader.FileTypes.PackFileSection;$/;"	m
pack	pilas-engine/declaraciones/phaser.d.ts	/^            pack(key: string | Phaser.Types.Loader.FileTypes.PackFileConfig | Phaser.Types.Loader.FileTypes.PackFileConfig[], url?: string, dataKey?: string, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject): this;$/;"	m
pad	pilas-engine/declaraciones/phaser.d.ts	/^                pad: Phaser.Input.Gamepad.Gamepad;$/;"	m
pad	pilas-engine/declaraciones/phaser.d.ts	/^                pad: any;$/;"	m
pad1	pilas-engine/declaraciones/phaser.d.ts	/^                pad1: Phaser.Input.Gamepad.Gamepad;$/;"	m
pad2	pilas-engine/declaraciones/phaser.d.ts	/^                pad2: Phaser.Input.Gamepad.Gamepad;$/;"	m
pad3	pilas-engine/declaraciones/phaser.d.ts	/^                pad3: Phaser.Input.Gamepad.Gamepad;$/;"	m
pad4	pilas-engine/declaraciones/phaser.d.ts	/^                pad4: Phaser.Input.Gamepad.Gamepad;$/;"	m
padding	pilas-engine/declaraciones/phaser.d.ts	/^            padding: Phaser.Types.GameObjects.Text.TextPadding;$/;"	m
pair	pilas-engine/declaraciones/phaser.d.ts	/^                pair: MatterJS.PairFactory;$/;"	m
pairs	pilas-engine/declaraciones/phaser.d.ts	/^                    pairs: Phaser.Types.Physics.Matter.MatterCollisionData[];$/;"	m
pairs	pilas-engine/declaraciones/phaser.d.ts	/^                pairs: MatterJS.PairsFactory;$/;"	m
pan	pilas-engine/declaraciones/phaser.d.ts	/^                pan(x: number, y: number, duration?: number, ease?: string | Function, force?: boolean, callback?: Phaser.Types.Cameras.Scene2D.CameraPanCallback, context?: any): this;$/;"	m
pan	pilas-engine/declaraciones/phaser.d.ts	/^            pan: number;$/;"	m
panEffect	pilas-engine/declaraciones/phaser.d.ts	/^                panEffect: Phaser.Cameras.Scene2D.Effects.Pan;$/;"	m
panX	pilas-engine/declaraciones/phaser.d.ts	/^            panX(v: number): void;$/;"	m
panY	pilas-engine/declaraciones/phaser.d.ts	/^            panY(v: number): void;$/;"	m
panZ	pilas-engine/declaraciones/phaser.d.ts	/^            panZ(v: number): void;$/;"	m
panicMax	pilas-engine/declaraciones/phaser.d.ts	/^            panicMax: number;$/;"	m
pannerNode	pilas-engine/declaraciones/phaser.d.ts	/^            pannerNode: StereoPannerNode;$/;"	m
panning	pilas-engine/libs/spriter.ts	/^  panning: number = 0.0;$/;"	m
pantalla_completa	pilas-engine/actores.ts	/^  pantalla_completa() {$/;"	m
pantalla_completa	pilas-engine/actores/pantalla_completa.ts	/^class pantalla_completa extends Actor {$/;"	c
parado_actualizar	pilas-engine/actores/conejo.ts	/^  parado_actualizar() {$/;"	m
parado_iniciar	pilas-engine/actores/conejo.ts	/^  parado_iniciar() {$/;"	m
pared	pilas-engine/actores.ts	/^  pared() {$/;"	m
pared	pilas-engine/actores/pared.ts	/^class pared extends Actor {$/;"	c
parent	pilas-engine/declaraciones/phaser.d.ts	/^                    parent: Phaser.GameObjects.DynamicBitmapText;$/;"	m
parent	pilas-engine/declaraciones/phaser.d.ts	/^            parent: Element;$/;"	m
parent	pilas-engine/declaraciones/phaser.d.ts	/^            parent: Phaser.GameObjects.Blitter;$/;"	m
parent	pilas-engine/declaraciones/phaser.d.ts	/^            parent: Phaser.GameObjects.GameObject;$/;"	m
parent	pilas-engine/declaraciones/phaser.d.ts	/^            parent: Phaser.GameObjects.Text;$/;"	m
parent	pilas-engine/declaraciones/phaser.d.ts	/^            parent: Phaser.Tweens.TweenManager | Phaser.Tweens.Timeline;$/;"	m
parent	pilas-engine/declaraciones/phaser.d.ts	/^            parent: any;$/;"	m
parent	pilas-engine/declaraciones/phaser.d.ts	/^            readonly parent: any;$/;"	m
parent	pilas-engine/pilas.ts	/^      parent: "game",$/;"	m
parentA	pilas-engine/declaraciones/phaser.d.ts	/^                    parentA: MatterJS.BodyType;$/;"	m
parentB	pilas-engine/declaraciones/phaser.d.ts	/^                    parentB: MatterJS.BodyType;$/;"	m
parentContainer	pilas-engine/declaraciones/phaser.d.ts	/^            parentContainer: Phaser.GameObjects.Container;$/;"	m
parentIsTimeline	pilas-engine/declaraciones/phaser.d.ts	/^            parentIsTimeline: boolean;$/;"	m
parentIsWindow	pilas-engine/declaraciones/phaser.d.ts	/^            parentIsWindow: boolean;$/;"	m
parentSize	pilas-engine/declaraciones/phaser.d.ts	/^            parentSize: Phaser.Structs.Size;$/;"	m
parent_index	pilas-engine/libs/spriter.ts	/^  parent_index: number = -1;$/;"	m
parseBody	pilas-engine/declaraciones/phaser.d.ts	/^                function parseBody(x: number, y: number, config: object, options?: Phaser.Types.Physics.Matter.MatterBodyConfig): MatterJS.BodyType;$/;"	f
parseBody	pilas-engine/declaraciones/phaser.d.ts	/^                parseBody(body: Phaser.Types.Physics.Matter.MatterBody): boolean;$/;"	m
parseConfig	pilas-engine/declaraciones/phaser.d.ts	/^            protected parseConfig(config: Phaser.Types.Core.GameConfig): void;$/;"	m
parseFixture	pilas-engine/declaraciones/phaser.d.ts	/^                function parseFixture(fixtureConfig: object): MatterJS.BodyType[];$/;"	f
parseFragmentShaderMaxTextures	pilas-engine/declaraciones/phaser.d.ts	/^                function parseFragmentShaderMaxTextures(fragmentShaderSource: string, maxTextures: number): string;$/;"	f
parseVertices	pilas-engine/declaraciones/phaser.d.ts	/^                function parseVertices(vertexSets: any[], options?: Phaser.Types.Physics.Matter.MatterBodyConfig): MatterJS.BodyType[];$/;"	f
part	pilas-engine/declaraciones/phaser.d.ts	/^                part: MatterJS.BodyType;$/;"	m
particleBringToTop	pilas-engine/declaraciones/phaser.d.ts	/^                particleBringToTop: boolean;$/;"	m
particleClass	pilas-engine/declaraciones/phaser.d.ts	/^                particleClass: Phaser.GameObjects.Particles.Particle;$/;"	m
particles	pilas-engine/declaraciones/phaser.d.ts	/^            particles(config: Phaser.Types.GameObjects.Particles.ParticleEmitterManagerConfig, addToScene?: boolean): Phaser.GameObjects.Particles.ParticleEmitterManager;$/;"	m
particles	pilas-engine/declaraciones/phaser.d.ts	/^            particles(texture: string | Phaser.Textures.Texture, frame?: string | number | object, emitters?: Phaser.Types.GameObjects.Particles.ParticleEmitterConfig | Phaser.Types.GameObjects.Particles.ParticleEmitterConfig[]): Phaser.GameObjects.Particles.ParticleEmitterManager;$/;"	m
path	pilas-engine/declaraciones/phaser.d.ts	/^                path: Phaser.Curves.Path;$/;"	m
path	pilas-engine/declaraciones/phaser.d.ts	/^            path(x: number, y: number): Phaser.Curves.Path;$/;"	m
path	pilas-engine/declaraciones/phaser.d.ts	/^            path: Phaser.Curves.Path;$/;"	m
path	pilas-engine/declaraciones/phaser.d.ts	/^            path: string;$/;"	m
pathConfig	pilas-engine/declaraciones/phaser.d.ts	/^            pathConfig: Phaser.Types.GameObjects.PathFollower.PathConfig;$/;"	m
pathData	pilas-engine/declaraciones/phaser.d.ts	/^            readonly pathData: number[];$/;"	m
pathDelta	pilas-engine/declaraciones/phaser.d.ts	/^            pathDelta: Phaser.Math.Vector2;$/;"	m
pathIndexes	pilas-engine/declaraciones/phaser.d.ts	/^            readonly pathIndexes: number[];$/;"	m
pathOffset	pilas-engine/declaraciones/phaser.d.ts	/^            pathOffset: Phaser.Math.Vector2;$/;"	m
pathRotationOffset	pilas-engine/declaraciones/phaser.d.ts	/^            pathRotationOffset: number;$/;"	m
pathTween	pilas-engine/declaraciones/phaser.d.ts	/^            pathTween: Phaser.Tweens.Tween;$/;"	m
pathUpdate	pilas-engine/declaraciones/phaser.d.ts	/^                pathUpdate(): void;$/;"	m
pathUpdate	pilas-engine/declaraciones/phaser.d.ts	/^            pathUpdate(): void;$/;"	m
pathVector	pilas-engine/declaraciones/phaser.d.ts	/^            pathVector: Phaser.Math.Vector2;$/;"	m
pausar	pilas-engine/pilas.ts	/^  pausar() {$/;"	m
pausar_animacion	pilas-engine/actores/-actor-base.ts	/^  pausar_animacion() {$/;"	m
pause	pilas-engine/declaraciones/phaser.d.ts	/^                pause(): Phaser.Physics.Arcade.World;$/;"	m
pause	pilas-engine/declaraciones/phaser.d.ts	/^                pause(): Phaser.Physics.Matter.World;$/;"	m
pause	pilas-engine/declaraciones/phaser.d.ts	/^                pause(): this;$/;"	m
pause	pilas-engine/declaraciones/phaser.d.ts	/^            pause(): boolean;$/;"	m
pause	pilas-engine/declaraciones/phaser.d.ts	/^            pause(): this;$/;"	m
pause	pilas-engine/declaraciones/phaser.d.ts	/^            pause(): void;$/;"	m
pause	pilas-engine/declaraciones/phaser.d.ts	/^            pause(atFrame?: Phaser.Animations.AnimationFrame): Phaser.GameObjects.GameObject;$/;"	m
pause	pilas-engine/declaraciones/phaser.d.ts	/^            pause(data?: object): Phaser.Scenes.Systems;$/;"	m
pause	pilas-engine/declaraciones/phaser.d.ts	/^            pause(key: string | Phaser.Scene, data?: object): this;$/;"	m
pause	pilas-engine/declaraciones/phaser.d.ts	/^            pause(key?: string | Phaser.Scene, data?: object): this;$/;"	m
pauseAll	pilas-engine/declaraciones/phaser.d.ts	/^            pauseAll(): Phaser.Tweens.TweenManager;$/;"	m
pauseAll	pilas-engine/declaraciones/phaser.d.ts	/^            pauseAll(): this;$/;"	m
pauseAll	pilas-engine/declaraciones/phaser.d.ts	/^            pauseAll(): void;$/;"	m
pauseFollow	pilas-engine/declaraciones/phaser.d.ts	/^                pauseFollow(): this;$/;"	m
pauseFollow	pilas-engine/declaraciones/phaser.d.ts	/^            pauseFollow(): this;$/;"	m
pauseOnBlur	pilas-engine/declaraciones/phaser.d.ts	/^            pauseOnBlur: boolean;$/;"	m
paused	pilas-engine/declaraciones/phaser.d.ts	/^            paused: boolean;$/;"	m
paymentsReady	pilas-engine/declaraciones/phaser.d.ts	/^        paymentsReady: boolean;$/;"	m
pelota	pilas-engine/actores.ts	/^  pelota() {$/;"	m
pelota	pilas-engine/actores/pelota.ts	/^class pelota extends Actor {$/;"	c
pending	pilas-engine/declaraciones/phaser.d.ts	/^            pending: number;$/;"	m
pendingDestroy	pilas-engine/declaraciones/phaser.d.ts	/^                pendingDestroy: Phaser.Structs.Set<(Phaser.Physics.Arcade.Body|Phaser.Physics.Arcade.StaticBody)>;$/;"	m
pendingDestroy	pilas-engine/declaraciones/phaser.d.ts	/^            pendingDestroy(): void;$/;"	m
pendingRepeat	pilas-engine/declaraciones/phaser.d.ts	/^            pendingRepeat: boolean;$/;"	m
penetration	pilas-engine/declaraciones/phaser.d.ts	/^                    penetration: MatterJS.Vector;$/;"	m
percentComplete	pilas-engine/declaraciones/phaser.d.ts	/^            percentComplete: number;$/;"	m
permitir_modo_pausa	pilas-engine/mensajes.ts	/^      permitir_modo_pausa: datos.permitir_modo_pausa,$/;"	m
permitir_modo_pausa	pilas-engine/modos/modo_ejecucion.ts	/^      permitir_modo_pausa: this.permitir_modo_pausa,$/;"	m
permitir_modo_pausa	pilas-engine/modos/modo_ejecucion.ts	/^  permitir_modo_pausa: boolean;$/;"	m
permitir_modo_pausa	pilas-engine/modos/modo_error.ts	/^  permitir_modo_pausa: boolean;$/;"	m
perspective	pilas-engine/declaraciones/phaser.d.ts	/^            perspective(fovy: number, aspect: number, near: number, far: number): this;$/;"	m
perspective	pilas-engine/declaraciones/phaser.d.ts	/^            perspective: number;$/;"	m
perspectiveLH	pilas-engine/declaraciones/phaser.d.ts	/^            perspectiveLH(width: number, height: number, near: number, far: number): this;$/;"	m
physics	pilas-engine/declaraciones/phaser.d.ts	/^                physics: Phaser.Types.Core.PhysicsConfig;$/;"	m
physics	pilas-engine/declaraciones/phaser.d.ts	/^            physics: Phaser.Cache.BaseCache;$/;"	m
physics	pilas-engine/declaraciones/phaser.d.ts	/^            physics: object;$/;"	m
physics	pilas-engine/declaraciones/phaser.d.ts	/^            readonly physics: Phaser.Types.Core.PhysicsConfig;$/;"	m
physics	pilas-engine/declaraciones/phaser.d.ts	/^        physics: Phaser.Physics.Arcade.ArcadePhysics;$/;"	m
physics	pilas-engine/pilas.ts	/^      physics: {$/;"	m
physicsType	pilas-engine/declaraciones/phaser.d.ts	/^                physicsType: number;$/;"	m
physicsType	pilas-engine/declaraciones/phaser.d.ts	/^                readonly physicsType: number;$/;"	m
pilas	pilas-engine/actores.ts	/^  pilas: Pilas;$/;"	m
pilas	pilas-engine/actores/-actor-base.ts	/^  pilas: Pilas;$/;"	m
pilas	pilas-engine/animacion_de_propiedad.ts	/^  private pilas: Pilas;$/;"	m
pilas	pilas-engine/animaciones.ts	/^  pilas: Pilas;$/;"	m
pilas	pilas-engine/automata.ts	/^  pilas: Pilas;$/;"	m
pilas	pilas-engine/camara.ts	/^  pilas: Pilas;$/;"	m
pilas	pilas-engine/colores.ts	/^  pilas: Pilas;$/;"	m
pilas	pilas-engine/comportamientos.ts	/^  pilas: Pilas;$/;"	m
pilas	pilas-engine/comportamientos/-comportamiento.ts	/^  pilas: Pilas;$/;"	m
pilas	pilas-engine/control.ts	/^  private pilas: Pilas;$/;"	m
pilas	pilas-engine/depurador.ts	/^  pilas: Pilas;$/;"	m
pilas	pilas-engine/escenas.ts	/^  pilas: Pilas;$/;"	m
pilas	pilas-engine/escenas/-escena-base.ts	/^  pilas: Pilas;$/;"	m
pilas	pilas-engine/eventos.ts	/^  pilas: Pilas;$/;"	m
pilas	pilas-engine/eventos_de_escena.ts	/^  pilas: Pilas;$/;"	m
pilas	pilas-engine/fisica.ts	/^  pilas: Pilas;$/;"	m
pilas	pilas-engine/habilidades.ts	/^  pilas: Pilas;$/;"	m
pilas	pilas-engine/habilidades/-habilidad.ts	/^  pilas: Pilas;$/;"	m
pilas	pilas-engine/historia.ts	/^  pilas: Pilas;$/;"	m
pilas	pilas-engine/huesos.ts	/^  pilas: Pilas;$/;"	m
pilas	pilas-engine/mensajes.ts	/^      pilas: this.pilas$/;"	m
pilas	pilas-engine/mensajes.ts	/^      pilas: this.pilas,$/;"	m
pilas	pilas-engine/mensajes.ts	/^  pilas: Pilas;$/;"	m
pilas	pilas-engine/modos/actor_en_modo_edicion.ts	/^  pilas: Pilas;$/;"	m
pilas	pilas-engine/modos/camara_en_modo_edicion.ts	/^  pilas: Pilas;$/;"	m
pilas	pilas-engine/modos/modo.ts	/^  pilas: Pilas;$/;"	m
pilas	pilas-engine/modos/modo_cargador.ts	/^        pilas: this.pilas,$/;"	m
pilas	pilas-engine/modos/modo_cargador.ts	/^  pilas: Pilas;$/;"	m
pilas	pilas-engine/modos/modo_deprecated.ts	/^  pilas: Pilas;$/;"	m
pilas	pilas-engine/modos/modo_editor.ts	/^  pilas: Pilas;$/;"	m
pilas	pilas-engine/modos/modo_ejecucion.ts	/^      pilas: this.pilas,$/;"	m
pilas	pilas-engine/modos/modo_ejecucion.ts	/^  pilas: Pilas;$/;"	m
pilas	pilas-engine/modos/modo_ejecucion_en_pausa.ts	/^  pilas: Pilas;$/;"	m
pilas	pilas-engine/modos/modo_error.ts	/^  pilas: Pilas;$/;"	m
pilas	pilas-engine/modos/modo_pausa.ts	/^  pilas: Pilas;$/;"	m
pilas	pilas-engine/sonidos.ts	/^  pilas: Pilas;$/;"	m
pilas	pilas-engine/utilidades.ts	/^  pilas: Pilas;$/;"	m
pipeline	pilas-engine/declaraciones/phaser.d.ts	/^                pipeline: Phaser.Renderer.WebGL.WebGLPipeline;$/;"	m
pipeline	pilas-engine/declaraciones/phaser.d.ts	/^            pipeline: Phaser.Renderer.WebGL.WebGLPipeline;$/;"	m
pipeline	pilas-engine/declaraciones/phaser.d.ts	/^            readonly pipeline: Phaser.Types.Core.PipelineConfig;$/;"	m
pipelineData	pilas-engine/declaraciones/phaser.d.ts	/^                pipelineData: object;$/;"	m
pipelineData	pilas-engine/declaraciones/phaser.d.ts	/^            pipelineData: object;$/;"	m
pipelines	pilas-engine/declaraciones/phaser.d.ts	/^                pipelines: Phaser.Renderer.WebGL.PipelineManager;$/;"	m
pipelines	pilas-engine/declaraciones/phaser.d.ts	/^                pipelines: Phaser.Structs.Map<string, Phaser.Renderer.WebGL.WebGLPipeline>;$/;"	m
pivot	pilas-engine/libs/spriter.ts	/^  pivot: Pivot = new Pivot();$/;"	m
pivot	pilas-engine/libs/spriter.ts	/^  pivot: any;$/;"	m
pivotX	pilas-engine/declaraciones/phaser.d.ts	/^            pivotX: number;$/;"	m
pivotY	pilas-engine/declaraciones/phaser.d.ts	/^            pivotY: number;$/;"	m
pixelArt	pilas-engine/declaraciones/phaser.d.ts	/^            readonly pixelArt: boolean;$/;"	m
pixelArt	pilas-engine/pilas.ts	/^      pixelArt: pixelart,$/;"	m
pixelRatio	pilas-engine/declaraciones/phaser.d.ts	/^            pixelRatio: number;$/;"	m
pixelX	pilas-engine/declaraciones/phaser.d.ts	/^            pixelX: number;$/;"	m
pixelY	pilas-engine/declaraciones/phaser.d.ts	/^            pixelY: number;$/;"	m
pixels	pilas-engine/declaraciones/phaser.d.ts	/^            pixels: Uint32Array;$/;"	m
pizarra	pilas-engine/actores.ts	/^  pizarra(): pizarra {$/;"	m
pizarra	pilas-engine/actores/pizarra.ts	/^class pizarra extends PizarraBase {$/;"	c
placementID	pilas-engine/declaraciones/phaser.d.ts	/^    placementID: string;$/;"	m
planificar_reproducir_sonido	pilas-engine/escenas/-escena-base.ts	/^  planificar_reproducir_sonido(sonido: string) {$/;"	m
plataforma	pilas-engine/actores.ts	/^  plataforma() {$/;"	m
plataforma	pilas-engine/actores/plataforma.ts	/^class plataforma extends Actor {$/;"	c
platform	pilas-engine/declaraciones/phaser.d.ts	/^        platform: string;$/;"	m
play	pilas-engine/declaraciones/phaser.d.ts	/^            play(): void;$/;"	m
play	pilas-engine/declaraciones/phaser.d.ts	/^            play(key: string | Phaser.Animations.Animation | Phaser.Types.Animations.PlayAnimationConfig, children: Phaser.GameObjects.GameObject | Phaser.GameObjects.GameObject[]): this;$/;"	m
play	pilas-engine/declaraciones/phaser.d.ts	/^            play(key: string | Phaser.Animations.Animation | Phaser.Types.Animations.PlayAnimationConfig, ignoreIfPlaying?: boolean): Phaser.GameObjects.GameObject;$/;"	m
play	pilas-engine/declaraciones/phaser.d.ts	/^            play(key: string | Phaser.Animations.Animation | Phaser.Types.Animations.PlayAnimationConfig, ignoreIfPlaying?: boolean): this;$/;"	m
play	pilas-engine/declaraciones/phaser.d.ts	/^            play(key: string, extra?: Phaser.Types.Sound.SoundConfig | Phaser.Types.Sound.SoundMarker): boolean;$/;"	m
play	pilas-engine/declaraciones/phaser.d.ts	/^            play(key: string, ignoreIfPlaying?: boolean, startFrame?: number): this;$/;"	m
play	pilas-engine/declaraciones/phaser.d.ts	/^            play(loop?: boolean, markerIn?: number, markerOut?: number): this;$/;"	m
play	pilas-engine/declaraciones/phaser.d.ts	/^            play(markerName?: string | Phaser.Types.Sound.SoundConfig, config?: Phaser.Types.Sound.SoundConfig): boolean;$/;"	m
play	pilas-engine/declaraciones/phaser.d.ts	/^            play(resetFromTimeline?: boolean): this;$/;"	m
playAfterDelay	pilas-engine/declaraciones/phaser.d.ts	/^            playAfterDelay(key: string | Phaser.Animations.Animation | Phaser.Types.Animations.PlayAnimationConfig, delay: number): Phaser.GameObjects.GameObject;$/;"	m
playAfterDelay	pilas-engine/declaraciones/phaser.d.ts	/^            playAfterDelay(key: string | Phaser.Animations.Animation | Phaser.Types.Animations.PlayAnimationConfig, delay: number): this;$/;"	m
playAfterRepeat	pilas-engine/declaraciones/phaser.d.ts	/^            playAfterRepeat(key: string | Phaser.Animations.Animation | Phaser.Types.Animations.PlayAnimationConfig, repeatCount?: number): Phaser.GameObjects.GameObject;$/;"	m
playAfterRepeat	pilas-engine/declaraciones/phaser.d.ts	/^            playAfterRepeat(key: string | Phaser.Animations.Animation | Phaser.Types.Animations.PlayAnimationConfig, repeatCount?: number): this;$/;"	m
playAnimation	pilas-engine/declaraciones/phaser.d.ts	/^            playAnimation(key: string, startFrame?: string): this;$/;"	m
playAudioSprite	pilas-engine/declaraciones/phaser.d.ts	/^            playAudioSprite(key: string, spriteName: string, config?: Phaser.Types.Sound.SoundConfig): boolean;$/;"	m
playHandler	pilas-engine/declaraciones/phaser.d.ts	/^            playHandler(): void;$/;"	m
playMarker	pilas-engine/declaraciones/phaser.d.ts	/^            playMarker(key: string, loop?: boolean): this;$/;"	m
playReverse	pilas-engine/declaraciones/phaser.d.ts	/^            playReverse(key: string | Phaser.Animations.Animation | Phaser.Types.Animations.PlayAnimationConfig, ignoreIfPlaying?: boolean): Phaser.GameObjects.GameObject;$/;"	m
playReverse	pilas-engine/declaraciones/phaser.d.ts	/^            playReverse(key: string | Phaser.Animations.Animation | Phaser.Types.Animations.PlayAnimationConfig, ignoreIfPlaying?: boolean): this;$/;"	m
playWhenUnlocked	pilas-engine/declaraciones/phaser.d.ts	/^            playWhenUnlocked: boolean;$/;"	m
playerCanSubscribeBot	pilas-engine/declaraciones/phaser.d.ts	/^        playerCanSubscribeBot: boolean;$/;"	m
playerID	pilas-engine/declaraciones/phaser.d.ts	/^        playerID: string;$/;"	m
playerID	pilas-engine/declaraciones/phaser.d.ts	/^    playerID: string;$/;"	m
playerName	pilas-engine/declaraciones/phaser.d.ts	/^        playerName: string;$/;"	m
playerName	pilas-engine/declaraciones/phaser.d.ts	/^    playerName: string;$/;"	m
playerPhotoURL	pilas-engine/declaraciones/phaser.d.ts	/^        playerPhotoURL: string;$/;"	m
playerPhotoURL	pilas-engine/declaraciones/phaser.d.ts	/^    playerPhotoURL: string;$/;"	m
playerScore	pilas-engine/declaraciones/phaser.d.ts	/^        playerScore: LeaderboardScore;$/;"	m
plugin	pilas-engine/declaraciones/phaser.d.ts	/^                plugin: Function;$/;"	m
plugin	pilas-engine/declaraciones/phaser.d.ts	/^                plugin: Phaser.Input.Keyboard.KeyboardPlugin;$/;"	m
plugin	pilas-engine/declaraciones/phaser.d.ts	/^            plugin(key: string | Phaser.Types.Loader.FileTypes.PluginFileConfig | Phaser.Types.Loader.FileTypes.PluginFileConfig[], url?: string | Function, start?: boolean, mapping?: string, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject): this;$/;"	m
plugin	pilas-engine/declaraciones/phaser.d.ts	/^        plugin: Phaser.FacebookInstantGamesPlugin;$/;"	m
pluginKey	pilas-engine/declaraciones/phaser.d.ts	/^            readonly pluginKey: string;$/;"	m
pluginManager	pilas-engine/declaraciones/phaser.d.ts	/^            protected pluginManager: Phaser.Plugins.PluginManager;$/;"	m
plugins	pilas-engine/declaraciones/phaser.d.ts	/^                plugins: false | any;$/;"	m
plugins	pilas-engine/declaraciones/phaser.d.ts	/^            plugins: Phaser.Plugins.PluginManager;$/;"	m
plugins	pilas-engine/declaraciones/phaser.d.ts	/^            plugins: Phaser.Types.Plugins.GlobalPlugin[];$/;"	m
plugins	pilas-engine/declaraciones/phaser.d.ts	/^        plugins: Phaser.Plugins.PluginManager;$/;"	m
plugins	pilas-engine/pilas.ts	/^      plugins: {$/;"	m
plus	pilas-engine/laser.ts	/^  plus(vec: any) {$/;"	m
point	pilas-engine/laser.ts	/^  point: any;$/;"	m
point	pilas-engine/libs/spriter.ts	/^  point: PointObject;$/;"	m
pointInBounds	pilas-engine/laser.ts	/^  pointInBounds(point: any) {$/;"	m
pointToContainer	pilas-engine/declaraciones/phaser.d.ts	/^            pointToContainer(source: object | Phaser.Geom.Point | Phaser.Math.Vector2, output?: object | Phaser.Geom.Point | Phaser.Math.Vector2): object | Phaser.Geom.Point | Phaser.Math.Vector2;$/;"	m
pointWithinHitArea	pilas-engine/declaraciones/phaser.d.ts	/^            pointWithinHitArea(gameObject: Phaser.GameObjects.GameObject, x: number, y: number): boolean;$/;"	m
pointWithinInteractiveObject	pilas-engine/declaraciones/phaser.d.ts	/^            pointWithinInteractiveObject(object: Phaser.Types.Input.InteractiveObject, x: number, y: number): boolean;$/;"	m
pointer	pilas-engine/declaraciones/phaser.d.ts	/^                pointer: Phaser.Input.Pointer;$/;"	m
pointer	pilas-engine/declaraciones/phaser.d.ts	/^            pointer: Phaser.Input.Pointer;$/;"	m
pointer1	pilas-engine/declaraciones/phaser.d.ts	/^            readonly pointer1: Phaser.Input.Pointer;$/;"	m
pointer2	pilas-engine/declaraciones/phaser.d.ts	/^            readonly pointer2: Phaser.Input.Pointer;$/;"	m
pointer3	pilas-engine/declaraciones/phaser.d.ts	/^            readonly pointer3: Phaser.Input.Pointer;$/;"	m
pointer4	pilas-engine/declaraciones/phaser.d.ts	/^            readonly pointer4: Phaser.Input.Pointer;$/;"	m
pointer5	pilas-engine/declaraciones/phaser.d.ts	/^            readonly pointer5: Phaser.Input.Pointer;$/;"	m
pointer6	pilas-engine/declaraciones/phaser.d.ts	/^            readonly pointer6: Phaser.Input.Pointer;$/;"	m
pointer7	pilas-engine/declaraciones/phaser.d.ts	/^            readonly pointer7: Phaser.Input.Pointer;$/;"	m
pointer8	pilas-engine/declaraciones/phaser.d.ts	/^            readonly pointer8: Phaser.Input.Pointer;$/;"	m
pointer9	pilas-engine/declaraciones/phaser.d.ts	/^            readonly pointer9: Phaser.Input.Pointer;$/;"	m
pointerConstraint	pilas-engine/declaraciones/phaser.d.ts	/^                pointerConstraint(options?: Phaser.Types.Physics.Matter.MatterConstraintConfig): MatterJS.ConstraintType;$/;"	m
pointerEvents	pilas-engine/declaraciones/phaser.d.ts	/^            pointerEvents: string;$/;"	m
pointerId	pilas-engine/declaraciones/phaser.d.ts	/^            pointerId: number;$/;"	m
pointerLock	pilas-engine/declaraciones/phaser.d.ts	/^            pointerLock: boolean;$/;"	m
pointerLockChange	pilas-engine/declaraciones/phaser.d.ts	/^                pointerLockChange: Function;$/;"	m
pointers	pilas-engine/declaraciones/phaser.d.ts	/^            pointers: Phaser.Input.Pointer[];$/;"	m
pointersTotal	pilas-engine/declaraciones/phaser.d.ts	/^            readonly pointersTotal: number;$/;"	m
pointlight	pilas-engine/declaraciones/phaser.d.ts	/^            pointlight(config: object, addToScene?: boolean): Phaser.GameObjects.PointLight;$/;"	m
pointlight	pilas-engine/declaraciones/phaser.d.ts	/^            pointlight(x: number, y: number, color?: number, radius?: number, intensity?: number, attenuation?: number): Phaser.GameObjects.PointLight;$/;"	m
points	pilas-engine/declaraciones/phaser.d.ts	/^                    points: Phaser.Geom.Point[];$/;"	m
points	pilas-engine/declaraciones/phaser.d.ts	/^                points: number[];$/;"	m
points	pilas-engine/declaraciones/phaser.d.ts	/^            points: Phaser.Geom.Point[];$/;"	m
points	pilas-engine/declaraciones/phaser.d.ts	/^            points: Phaser.Math.Vector2[];$/;"	m
points	pilas-engine/declaraciones/phaser.d.ts	/^            points: Phaser.Types.Math.Vector2Like[];$/;"	m
points	pilas-engine/declaraciones/phaser.d.ts	/^            points: number;$/;"	m
polaroid	pilas-engine/declaraciones/phaser.d.ts	/^            polaroid(multiply?: boolean): this;$/;"	m
pollRate	pilas-engine/declaraciones/phaser.d.ts	/^            pollRate: number;$/;"	m
polygon	pilas-engine/declaraciones/phaser.d.ts	/^                polygon(x: number, y: number, sides: number, radius: number, options?: Phaser.Types.Physics.Matter.MatterBodyConfig): MatterJS.BodyType;$/;"	m
polygon	pilas-engine/declaraciones/phaser.d.ts	/^            polygon(x?: number, y?: number, points?: any, fillColor?: number, fillAlpha?: number): Phaser.GameObjects.Polygon;$/;"	m
pop	pilas-engine/declaraciones/phaser.d.ts	/^            pop(key: string): any;$/;"	m
popFramebuffer	pilas-engine/declaraciones/phaser.d.ts	/^                popFramebuffer(updateScissor?: boolean, resetTextures?: boolean, setViewport?: boolean): WebGLFramebuffer;$/;"	m
popScissor	pilas-engine/declaraciones/phaser.d.ts	/^                popScissor(): void;$/;"	m
pose	pilas-engine/huesos.ts	/^  pose: any;$/;"	m
pose	pilas-engine/libs/spriter.ts	/^  pose: Pose;$/;"	m
posiblidad	pilas-engine/utilidades.ts	/^        posiblidad: h$/;"	m
posicion	pilas-engine/modos/modo_pausa.ts	/^  posicion: number;$/;"	m
posicion_anterior_de_arrastre	pilas-engine/modos/modo.ts	/^  posicion_anterior_de_arrastre: any;$/;"	m
posicionar_fondo	pilas-engine/modos/modo.ts	/^  posicionar_fondo(dx, dy) {$/;"	m
posicionar_fondo	pilas-engine/modos/modo_pausa.ts	/^  posicionar_fondo(escena) {$/;"	m
posicionar_la_camara	pilas-engine/modos/modo_deprecated.ts	/^  posicionar_la_camara(datos_de_la_escena) {$/;"	m
posicionar_la_camara	pilas-engine/modos/modo_editor.ts	/^  posicionar_la_camara(datos_de_la_escena) {$/;"	m
posicionar_la_camara	pilas-engine/modos/modo_pausa.ts	/^  posicionar_la_camara(datos_de_la_escena) {$/;"	m
position	pilas-engine/declaraciones/phaser.d.ts	/^                position: Phaser.Math.Vector2;$/;"	m
position	pilas-engine/declaraciones/phaser.d.ts	/^            position: number;$/;"	m
position	pilas-engine/declaraciones/phaser.d.ts	/^            readonly position: Phaser.Math.Vector2;$/;"	m
positionToCamera	pilas-engine/declaraciones/phaser.d.ts	/^            positionToCamera(camera: Phaser.Cameras.Scene2D.Camera, output?: Phaser.Math.Vector2 | object): Phaser.Math.Vector2 | object;$/;"	m
postBatch	pilas-engine/declaraciones/phaser.d.ts	/^                postBatch(gameObject: Phaser.GameObjects.GameObject): void;$/;"	m
postBatch	pilas-engine/declaraciones/phaser.d.ts	/^                postBatch(gameObject?: Phaser.GameObjects.GameObject | Phaser.Cameras.Scene2D.Camera): this;$/;"	m
postBatchCamera	pilas-engine/declaraciones/phaser.d.ts	/^                postBatchCamera(camera: Phaser.Cameras.Scene2D.Camera): void;$/;"	m
postBoot	pilas-engine/declaraciones/phaser.d.ts	/^            readonly postBoot: Phaser.Types.Core.BootCallback;$/;"	m
postPipelineClasses	pilas-engine/declaraciones/phaser.d.ts	/^                postPipelineClasses: Phaser.Structs.Map<string, Class>;$/;"	m
postPipelines	pilas-engine/declaraciones/phaser.d.ts	/^                postPipelines: Phaser.Renderer.WebGL.Pipelines.PostFXPipeline[];$/;"	m
postPipelines	pilas-engine/declaraciones/phaser.d.ts	/^            postPipelines: Phaser.Renderer.WebGL.Pipelines.PostFXPipeline[];$/;"	m
postRender	pilas-engine/declaraciones/phaser.d.ts	/^                postRender(): void;$/;"	m
postRenderCamera	pilas-engine/declaraciones/phaser.d.ts	/^                postRenderCamera(camera: Phaser.Cameras.Scene2D.Camera): void;$/;"	m
postRenderCanvas	pilas-engine/declaraciones/phaser.d.ts	/^                    postRenderCanvas(ctx: CanvasRenderingContext2D): boolean;$/;"	m
postRenderCanvas	pilas-engine/declaraciones/phaser.d.ts	/^                postRenderCanvas(renderer: Phaser.Renderer.Canvas.CanvasRenderer | Phaser.Renderer.WebGL.WebGLRenderer): void;$/;"	m
postRenderCanvas	pilas-engine/declaraciones/phaser.d.ts	/^                postRenderCanvas(renderer: Phaser.Renderer.Canvas.CanvasRenderer): void;$/;"	m
postRenderWebGL	pilas-engine/declaraciones/phaser.d.ts	/^                    postRenderWebGL(pipeline: Phaser.Renderer.WebGL.Pipelines.MultiPipeline, getTintFunction: Function): boolean;$/;"	m
postRenderWebGL	pilas-engine/declaraciones/phaser.d.ts	/^                postRenderWebGL(renderer: Phaser.Renderer.Canvas.CanvasRenderer | Phaser.Renderer.WebGL.WebGLRenderer): void;$/;"	m
postRenderWebGL	pilas-engine/declaraciones/phaser.d.ts	/^                postRenderWebGL(renderer: Phaser.Renderer.WebGL.WebGLRenderer): void;$/;"	m
postUpdate	pilas-engine/declaraciones/phaser.d.ts	/^                postUpdate(): void;$/;"	m
potHeight	pilas-engine/declaraciones/phaser.d.ts	/^            potHeight: number;$/;"	m
potWidth	pilas-engine/declaraciones/phaser.d.ts	/^            potWidth: number;$/;"	m
power	pilas-engine/declaraciones/phaser.d.ts	/^                power: number;$/;"	m
powerPreference	pilas-engine/declaraciones/phaser.d.ts	/^            readonly powerPreference: string;$/;"	m
preBatch	pilas-engine/declaraciones/phaser.d.ts	/^                preBatch(gameObject: Phaser.GameObjects.GameObject): void;$/;"	m
preBatch	pilas-engine/declaraciones/phaser.d.ts	/^                preBatch(gameObject?: Phaser.GameObjects.GameObject | Phaser.Cameras.Scene2D.Camera): this;$/;"	m
preBatchCamera	pilas-engine/declaraciones/phaser.d.ts	/^                preBatchCamera(camera: Phaser.Cameras.Scene2D.Camera): void;$/;"	m
preBoot	pilas-engine/declaraciones/phaser.d.ts	/^            protected preBoot(): void;$/;"	m
preBoot	pilas-engine/declaraciones/phaser.d.ts	/^            readonly preBoot: Phaser.Types.Core.BootCallback;$/;"	m
preDestroy	pilas-engine/declaraciones/phaser.d.ts	/^            protected preDestroy(): void;$/;"	m
preRender	pilas-engine/declaraciones/phaser.d.ts	/^                    preRender(): void;$/;"	m
preRender	pilas-engine/declaraciones/phaser.d.ts	/^                preRender(): void;$/;"	m
preRender	pilas-engine/declaraciones/phaser.d.ts	/^                protected preRender(): void;$/;"	m
preRenderCamera	pilas-engine/declaraciones/phaser.d.ts	/^                preRenderCamera(camera: Phaser.Cameras.Scene2D.Camera): void;$/;"	m
preRenderCanvas	pilas-engine/declaraciones/phaser.d.ts	/^                preRenderCanvas(renderer: Phaser.Renderer.Canvas.CanvasRenderer | Phaser.Renderer.WebGL.WebGLRenderer, mask: Phaser.GameObjects.GameObject, camera: Phaser.Cameras.Scene2D.Camera): void;$/;"	m
preRenderCanvas	pilas-engine/declaraciones/phaser.d.ts	/^                preRenderCanvas(renderer: Phaser.Renderer.Canvas.CanvasRenderer, mask: Phaser.GameObjects.GameObject, camera: Phaser.Cameras.Scene2D.Camera): void;$/;"	m
preRenderWebGL	pilas-engine/declaraciones/phaser.d.ts	/^                preRenderWebGL(renderer: Phaser.Renderer.Canvas.CanvasRenderer | Phaser.Renderer.WebGL.WebGLRenderer, maskedObject: Phaser.GameObjects.GameObject, camera: Phaser.Cameras.Scene2D.Camera): void;$/;"	m
preRenderWebGL	pilas-engine/declaraciones/phaser.d.ts	/^                preRenderWebGL(renderer: Phaser.Renderer.WebGL.WebGLRenderer, child: Phaser.GameObjects.GameObject, camera: Phaser.Cameras.Scene2D.Camera): void;$/;"	m
preRotation	pilas-engine/declaraciones/phaser.d.ts	/^                preRotation: number;$/;"	m
preUpdate	pilas-engine/declaraciones/phaser.d.ts	/^                preUpdate(time: number, delta: number): void;$/;"	m
preUpdate	pilas-engine/declaraciones/phaser.d.ts	/^                preUpdate(willStep: boolean, delta: number): void;$/;"	m
preUpdate	pilas-engine/declaraciones/phaser.d.ts	/^            preUpdate(): void;$/;"	m
preUpdate	pilas-engine/declaraciones/phaser.d.ts	/^            preUpdate(time: number, delta: number): void;$/;"	m
preUpdate	pilas-engine/declaraciones/phaser.d.ts	/^            protected preUpdate(time: number, delta: number): void;$/;"	m
pre_actualizar	pilas-engine/actores/-actor-base.ts	/^  pre_actualizar() {$/;"	m
pre_actualizar	pilas-engine/actores/-actor-texto-base.ts	/^  pre_actualizar() {$/;"	m
pre_actualizar	pilas-engine/actores/-pizarra-base.ts	/^  pre_actualizar() {$/;"	m
pre_actualizar	pilas-engine/actores/robot.ts	/^  pre_actualizar() {$/;"	m
pre_actualizar	pilas-engine/escenas/-escena-base.ts	/^  pre_actualizar() {}$/;"	m
pre_actualizar	pilas-engine/escenas/-escena.ts	/^  pre_actualizar() {$/;"	m
pre_iniciar	pilas-engine/actores/-actor-base.ts	/^  pre_iniciar(propiedades: any) {$/;"	m
prefijo_de_imagenes	pilas-engine/huesos.ts	/^  prefijo_de_imagenes: string = "";$/;"	m
prefix	pilas-engine/declaraciones/phaser.d.ts	/^            prefix: string;$/;"	m
preload	pilas-engine/modos/modo_cargador.ts	/^  preload() {$/;"	m
preload	pilas-engine/modos/modo_deprecated.ts	/^  preload() { }$/;"	m
preload	pilas-engine/modos/modo_editor.ts	/^  preload() {$/;"	m
preload	pilas-engine/modos/modo_ejecucion.ts	/^  preload() {}$/;"	m
preload	pilas-engine/modos/modo_ejecucion_en_pausa.ts	/^  preload() {}$/;"	m
preload	pilas-engine/modos/modo_error.ts	/^  preload() {$/;"	m
preload	pilas-engine/modos/modo_pausa.ts	/^  preload() {}$/;"	m
preloadAds	pilas-engine/declaraciones/phaser.d.ts	/^        preloadAds(placementID: string | string[]): this;$/;"	m
preloadVideoAds	pilas-engine/declaraciones/phaser.d.ts	/^        preloadVideoAds(placementID: string | string[]): this;$/;"	m
premultipliedAlpha	pilas-engine/declaraciones/phaser.d.ts	/^            readonly premultipliedAlpha: boolean;$/;"	m
premultiply	pilas-engine/declaraciones/phaser.d.ts	/^            premultiply(m: Phaser.Math.Matrix4): this;$/;"	m
preserveDrawingBuffer	pilas-engine/declaraciones/phaser.d.ts	/^            readonly preserveDrawingBuffer: boolean;$/;"	m
pressed	pilas-engine/declaraciones/phaser.d.ts	/^                pressed: boolean;$/;"	m
prev	pilas-engine/declaraciones/phaser.d.ts	/^                prev: Phaser.Math.Vector2;$/;"	m
prevFrame	pilas-engine/declaraciones/phaser.d.ts	/^                prevFrame: Phaser.Math.Vector2;$/;"	m
prevFrame	pilas-engine/declaraciones/phaser.d.ts	/^            readonly prevFrame: Phaser.Animations.AnimationFrame;$/;"	m
prevPosition	pilas-engine/declaraciones/phaser.d.ts	/^            readonly prevPosition: Phaser.Math.Vector2;$/;"	m
preventDefault	pilas-engine/declaraciones/phaser.d.ts	/^                preventDefault: boolean;$/;"	m
preventDefaultDown	pilas-engine/declaraciones/phaser.d.ts	/^                preventDefaultDown: boolean;$/;"	m
preventDefaultMove	pilas-engine/declaraciones/phaser.d.ts	/^                preventDefaultMove: boolean;$/;"	m
preventDefaultUp	pilas-engine/declaraciones/phaser.d.ts	/^                preventDefaultUp: boolean;$/;"	m
preventDefaultWheel	pilas-engine/declaraciones/phaser.d.ts	/^                preventDefaultWheel: boolean;$/;"	m
previous	pilas-engine/declaraciones/phaser.d.ts	/^                previous: Phaser.Renderer.WebGL.WebGLPipeline;$/;"	m
previous	pilas-engine/declaraciones/phaser.d.ts	/^            readonly previous: Phaser.GameObjects.GameObject;$/;"	m
previous	pilas-engine/declaraciones/phaser.d.ts	/^            readonly previous: T;$/;"	m
previousFrame	pilas-engine/declaraciones/phaser.d.ts	/^            previousFrame(): Phaser.GameObjects.GameObject;$/;"	m
previousFrame	pilas-engine/declaraciones/phaser.d.ts	/^            previousFrame(state: Phaser.Animations.AnimationState): void;$/;"	m
primaryDown	pilas-engine/declaraciones/phaser.d.ts	/^            primaryDown: boolean;$/;"	m
principal	pilas-engine/modos/modo_cargador.ts	/^                  class principal extends Escena {$/;"	c
principal	pilas-engine/modos/modo_cargador.ts	/^          function principal() {$/;"	f
processCallback	pilas-engine/declaraciones/phaser.d.ts	/^                processCallback: ArcadePhysicsCallback;$/;"	m
processQueue	pilas-engine/declaraciones/phaser.d.ts	/^            processQueue(): void;$/;"	m
processX	pilas-engine/declaraciones/phaser.d.ts	/^                processX(x: number, vx?: number, left?: boolean, right?: boolean): void;$/;"	m
processY	pilas-engine/declaraciones/phaser.d.ts	/^                processY(y: number, vy?: number, up?: boolean, down?: boolean): void;$/;"	m
program	pilas-engine/declaraciones/phaser.d.ts	/^                program: WebGLProgram;$/;"	m
program	pilas-engine/declaraciones/phaser.d.ts	/^            program: WebGLProgram;$/;"	m
progress	pilas-engine/declaraciones/phaser.d.ts	/^                    progress: number;$/;"	m
progress	pilas-engine/declaraciones/phaser.d.ts	/^                readonly progress: number;$/;"	m
progress	pilas-engine/declaraciones/phaser.d.ts	/^            progress: number;$/;"	m
progress	pilas-engine/declaraciones/phaser.d.ts	/^            readonly progress: number;$/;"	m
projOrtho	pilas-engine/declaraciones/phaser.d.ts	/^            projOrtho(left: number, right: number, bottom: number, top: number): void;$/;"	m
project	pilas-engine/declaraciones/phaser.d.ts	/^            project(mat: Phaser.Math.Matrix4): Phaser.Math.Vector3;$/;"	m
projectViewMatrix	pilas-engine/declaraciones/phaser.d.ts	/^            projectViewMatrix(viewMatrix: Phaser.Math.Matrix4, projectionMatrix: Phaser.Math.Matrix4): Phaser.Math.Vector3;$/;"	m
projection	pilas-engine/declaraciones/phaser.d.ts	/^            projection: number;$/;"	m
projectionHeight	pilas-engine/declaraciones/phaser.d.ts	/^                projectionHeight: number;$/;"	m
projectionMatrix	pilas-engine/declaraciones/phaser.d.ts	/^                projectionMatrix: Phaser.Math.Matrix4;$/;"	m
projectionMatrix	pilas-engine/declaraciones/phaser.d.ts	/^            projectionMatrix: Phaser.Math.Matrix4;$/;"	m
projectionMatrix	pilas-engine/declaraciones/phaser.d.ts	/^            readonly projectionMatrix: Float32Array;$/;"	m
projectionWidth	pilas-engine/declaraciones/phaser.d.ts	/^                projectionWidth: number;$/;"	m
properties	pilas-engine/declaraciones/phaser.d.ts	/^            properties: any;$/;"	m
properties	pilas-engine/declaraciones/phaser.d.ts	/^            properties: object;$/;"	m
properties	pilas-engine/declaraciones/phaser.d.ts	/^            properties: object[];$/;"	m
propertyKey	pilas-engine/declaraciones/phaser.d.ts	/^                propertyKey: string;$/;"	m
propertyTypes	pilas-engine/declaraciones/phaser.d.ts	/^            propertyTypes: object;$/;"	m
propertyValue	pilas-engine/declaraciones/phaser.d.ts	/^                propertyValue: number;$/;"	m
propertyValueInc	pilas-engine/declaraciones/phaser.d.ts	/^            propertyValueInc(key: string, value: number, step?: number, index?: number, direction?: number): this;$/;"	m
propertyValueSet	pilas-engine/declaraciones/phaser.d.ts	/^            propertyValueSet(key: string, value: number, step?: number, index?: number, direction?: number): this;$/;"	m
propiedades	pilas-engine/actores/-actor-base.ts	/^  propiedades: any = {$/;"	m
propiedades_iniciales	pilas-engine/actores/-actor-base.ts	/^  get propiedades_iniciales() {$/;"	m
proyecto	pilas-engine/actores/-actor-base.ts	/^  proyecto: any;$/;"	m
proyecto	pilas-engine/escenas/-escena-base.ts	/^  proyecto: any;$/;"	m
proyecto	pilas-engine/mensajes.ts	/^      proyecto: datos.proyecto$/;"	m
proyecto	pilas-engine/mensajes.ts	/^      proyecto: datos.proyecto,$/;"	m
proyecto	pilas-engine/modos/modo_cargador.ts	/^        proyecto: {$/;"	m
proyecto	pilas-engine/modos/modo_ejecucion.ts	/^      proyecto: this.proyecto,$/;"	m
proyecto	pilas-engine/modos/modo_ejecucion.ts	/^  proyecto: any = {};$/;"	m
pulsable	pilas-engine/pilas.ts	/^      pulsable: "hand",$/;"	m
pulsado	pilas-engine/actores/boton_abajo.ts	/^  pulsado: boolean = false;$/;"	m
pulsado	pilas-engine/actores/boton_arriba.ts	/^  pulsado: boolean = false;$/;"	m
pulsado	pilas-engine/actores/boton_derecha.ts	/^  pulsado: boolean = false;$/;"	m
pulsado	pilas-engine/actores/boton_espacio.ts	/^  pulsado: boolean = false;$/;"	m
pulsado	pilas-engine/actores/boton_izquierda.ts	/^  pulsado: boolean = false;$/;"	m
puntaje	pilas-engine/actores.ts	/^  puntaje() {$/;"	m
puntaje	pilas-engine/actores/puntaje.ts	/^  puntaje: number = 0;$/;"	m
puntaje	pilas-engine/actores/puntaje.ts	/^class puntaje extends ActorTextoBase {$/;"	c
purchase	pilas-engine/declaraciones/phaser.d.ts	/^        purchase(productID: string, developerPayload?: string): this;$/;"	m
purchases	pilas-engine/declaraciones/phaser.d.ts	/^        purchases: Purchase[];$/;"	m
pushFramebuffer	pilas-engine/declaraciones/phaser.d.ts	/^                pushFramebuffer(framebuffer: WebGLFramebuffer, updateScissor?: boolean, resetTextures?: boolean, setViewport?: boolean): this;$/;"	m
pushScissor	pilas-engine/declaraciones/phaser.d.ts	/^                pushScissor(x: number, y: number, width: number, height: number, drawingBufferHeight?: number): number[];$/;"	m
pushable	pilas-engine/declaraciones/phaser.d.ts	/^                pushable: boolean;$/;"	m
putData	pilas-engine/declaraciones/phaser.d.ts	/^            putData(imageData: ImageData, x: number, y: number, dirtyX?: number, dirtyY?: number, dirtyWidth?: number, dirtyHeight?: number): this;$/;"	m
putTileAt	pilas-engine/declaraciones/phaser.d.ts	/^            putTileAt(tile: number | Phaser.Tilemaps.Tile, tileX: number, tileY: number, recalculateFaces?: boolean): Phaser.Tilemaps.Tile;$/;"	m
putTileAt	pilas-engine/declaraciones/phaser.d.ts	/^            putTileAt(tile: number | Phaser.Tilemaps.Tile, tileX: number, tileY: number, recalculateFaces?: boolean, layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Tilemaps.Tile;$/;"	m
putTileAtWorldXY	pilas-engine/declaraciones/phaser.d.ts	/^            putTileAtWorldXY(tile: number | Phaser.Tilemaps.Tile, worldX: number, worldY: number, recalculateFaces?: boolean, camera?: Phaser.Cameras.Scene2D.Camera): Phaser.Tilemaps.Tile;$/;"	m
putTileAtWorldXY	pilas-engine/declaraciones/phaser.d.ts	/^            putTileAtWorldXY(tile: number | Phaser.Tilemaps.Tile, worldX: number, worldY: number, recalculateFaces?: boolean, camera?: Phaser.Cameras.Scene2D.Camera, layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Tilemaps.Tile;$/;"	m
putTilesAt	pilas-engine/declaraciones/phaser.d.ts	/^            putTilesAt(tile: number[] | number[][] | Phaser.Tilemaps.Tile[] | Phaser.Tilemaps.Tile[][], tileX: number, tileY: number, recalculateFaces?: boolean): this;$/;"	m
putTilesAt	pilas-engine/declaraciones/phaser.d.ts	/^            putTilesAt(tile: number[] | number[][] | Phaser.Tilemaps.Tile[] | Phaser.Tilemaps.Tile[][], tileX: number, tileY: number, recalculateFaces?: boolean, layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Tilemaps.Tilemap;$/;"	m
pyramid	pilas-engine/declaraciones/phaser.d.ts	/^                pyramid(x: number, y: number, columns: number, rows: number, columnGap: number, rowGap: number, callback: Function): MatterJS.CompositeType;$/;"	m
quadraticBezierTo	pilas-engine/declaraciones/phaser.d.ts	/^            quadraticBezierTo(x: number | Phaser.Math.Vector2[], y?: number, controlX?: number, controlY?: number): this;$/;"	m
quantity	pilas-engine/declaraciones/phaser.d.ts	/^                    quantity: number;$/;"	m
quantity	pilas-engine/declaraciones/phaser.d.ts	/^                quantity: Phaser.GameObjects.Particles.EmitterOp;$/;"	m
query	pilas-engine/declaraciones/phaser.d.ts	/^                query: MatterJS.QueryFactory;$/;"	m
query	pilas-engine/declaraciones/phaser.d.ts	/^            query(search: RegExp): {[key: string]:  any};$/;"	m
queue	pilas-engine/declaraciones/phaser.d.ts	/^            queue(tween: Phaser.Tweens.Tween): this;$/;"	m
queue	pilas-engine/declaraciones/phaser.d.ts	/^            queue: Phaser.Structs.Set<Phaser.Loader.File>;$/;"	m
queueDepthSort	pilas-engine/declaraciones/phaser.d.ts	/^            queueDepthSort(): void;$/;"	m
quit	pilas-engine/declaraciones/phaser.d.ts	/^        quit(): void;$/;"	m
quitar_actor_luego_de_eliminar	pilas-engine/escenas/-escena-base.ts	/^  quitar_actor_luego_de_eliminar(actor: Actor) {$/;"	m
quitar_destacado	pilas-engine/modos/actor_en_modo_edicion.ts	/^  quitar_destacado() {$/;"	m
r	pilas-engine/declaraciones/phaser.d.ts	/^                    r: number;$/;"	m
r	pilas-engine/declaraciones/phaser.d.ts	/^                r: number;$/;"	m
r	pilas-engine/declaraciones/phaser.d.ts	/^            r: number;$/;"	m
rad	pilas-engine/libs/spriter.ts	/^  public rad: number = 0;$/;"	m
radial	pilas-engine/declaraciones/phaser.d.ts	/^                radial: boolean;$/;"	m
radius	pilas-engine/declaraciones/phaser.d.ts	/^                radius: number;$/;"	m
radius	pilas-engine/declaraciones/phaser.d.ts	/^            radius: number;$/;"	m
radius	pilas-engine/declaraciones/phaser.d.ts	/^            readonly radius: number;$/;"	m
raf	pilas-engine/declaraciones/phaser.d.ts	/^            readonly raf: Phaser.DOM.RequestAnimationFrame;$/;"	m
random	pilas-engine/declaraciones/phaser.d.ts	/^                    random: boolean;$/;"	m
random	pilas-engine/declaraciones/phaser.d.ts	/^                    random: number[];$/;"	m
random	pilas-engine/declaraciones/phaser.d.ts	/^            random(min?: number, max?: number): Phaser.Display.Color;$/;"	m
randomFrame	pilas-engine/declaraciones/phaser.d.ts	/^                randomFrame: boolean;$/;"	m
randomGray	pilas-engine/declaraciones/phaser.d.ts	/^            randomGray(min?: number, max?: number): Phaser.Display.Color;$/;"	m
randomRangedValueEmit	pilas-engine/declaraciones/phaser.d.ts	/^                randomRangedValueEmit(particle: Phaser.GameObjects.Particles.Particle, key: string): number;$/;"	m
randomStaticValueEmit	pilas-engine/declaraciones/phaser.d.ts	/^                randomStaticValueEmit(): number;$/;"	m
randomize	pilas-engine/declaraciones/phaser.d.ts	/^            randomize(tileX?: number, tileY?: number, width?: number, height?: number, indexes?: number[]): this;$/;"	m
randomize	pilas-engine/declaraciones/phaser.d.ts	/^            randomize(tileX?: number, tileY?: number, width?: number, height?: number, indexes?: number[], layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Tilemaps.Tilemap;$/;"	m
rank	pilas-engine/declaraciones/phaser.d.ts	/^    rank: integer;$/;"	m
rate	pilas-engine/declaraciones/phaser.d.ts	/^            rate: number;$/;"	m
rawDelta	pilas-engine/declaraciones/phaser.d.ts	/^            rawDelta: number;$/;"	m
ray	pilas-engine/laser.ts	/^class ray {$/;"	c
raycast	pilas-engine/laser.ts	/^function raycast(bodies: any, start: any, end: any, sort = true) {$/;"	f
raycol	pilas-engine/laser.ts	/^class raycol {$/;"	c
real	pilas-engine/declaraciones/phaser.d.ts	/^            real(): number;$/;"	m
realHeight	pilas-engine/declaraciones/phaser.d.ts	/^            readonly realHeight: number;$/;"	m
realInRange	pilas-engine/declaraciones/phaser.d.ts	/^            realInRange(min: number, max: number): number;$/;"	m
realWidth	pilas-engine/declaraciones/phaser.d.ts	/^            readonly realWidth: number;$/;"	m
realizar_animacion_de_pulsacion	pilas-engine/actores/boton.ts	/^  realizar_animacion_de_pulsacion() {$/;"	m
realizar_animacion_de_pulsacion	pilas-engine/actores/boton_activable.ts	/^  realizar_animacion_de_pulsacion() {$/;"	m
reanudar	pilas-engine/modos/modo_ejecucion_en_pausa.ts	/^  reanudar() {$/;"	m
rebind	pilas-engine/declaraciones/phaser.d.ts	/^                rebind(): this;$/;"	m
rebind	pilas-engine/declaraciones/phaser.d.ts	/^                rebind(currentShader?: Phaser.Renderer.WebGL.WebGLShader): this;$/;"	m
rebind	pilas-engine/declaraciones/phaser.d.ts	/^                rebind(pipeline?: Phaser.Renderer.WebGL.WebGLPipeline): void;$/;"	m
rebote	pilas-engine/actores/-actor-base.ts	/^  get rebote() {$/;"	m
rebote	pilas-engine/actores/-actor-base.ts	/^  set rebote(valor: number) {$/;"	m
recortar	pilas-engine/actores/-actor-base.ts	/^  recortar(x: number, y: number, ancho: number, alto: number) {$/;"	m
recorte_activado	pilas-engine/actores/-actor-base.ts	/^  private recorte_activado: boolean;$/;"	m
rectangle	pilas-engine/declaraciones/phaser.d.ts	/^                rectangle(x: number, y: number, width: number, height: number, options?: Phaser.Types.Physics.Matter.MatterBodyConfig): MatterJS.BodyType;$/;"	m
rectangle	pilas-engine/declaraciones/phaser.d.ts	/^            rectangle(x?: number, y?: number, width?: number, height?: number, fillColor?: number, fillAlpha?: number): Phaser.GameObjects.Rectangle;$/;"	m
recuperar_datos_de_la_camara_en_el_editor	pilas-engine/modos/modo_editor.ts	/^  recuperar_datos_de_la_camara_en_el_editor(datos_del_proyecto) {$/;"	m
recursos	pilas-engine/pilas.ts	/^  recursos: any;$/;"	m
red	pilas-engine/declaraciones/phaser.d.ts	/^            red: number;$/;"	m
redGL	pilas-engine/declaraciones/phaser.d.ts	/^            redGL: number;$/;"	m
reemplazar_todas_las_animaciones	pilas-engine/animaciones.ts	/^  public reemplazar_todas_las_animaciones(animaciones: any) {$/;"	m
ref	pilas-engine/declaraciones/phaser.d.ts	/^        ref: any;$/;"	m
referencia_de_mapa	pilas-engine/pilas.ts	/^  referencia_de_mapa: any;$/;"	m
reflect	pilas-engine/declaraciones/phaser.d.ts	/^            reflect(normal: Phaser.Math.Vector2): Phaser.Math.Vector2;$/;"	m
refresh	pilas-engine/declaraciones/phaser.d.ts	/^                refresh(): Phaser.Physics.Arcade.StaticGroup;$/;"	m
refresh	pilas-engine/declaraciones/phaser.d.ts	/^            refresh(): Phaser.Textures.CanvasTexture;$/;"	m
refresh	pilas-engine/declaraciones/phaser.d.ts	/^            refresh(previousWidth?: number, previousHeight?: number): this;$/;"	m
refreshBody	pilas-engine/declaraciones/phaser.d.ts	/^                    refreshBody(): this;$/;"	m
refreshBody	pilas-engine/declaraciones/phaser.d.ts	/^                refreshBody(): this;$/;"	m
register	pilas-engine/declaraciones/phaser.d.ts	/^            function register(key: string, factoryFunction: Function): void;$/;"	f
register	pilas-engine/declaraciones/phaser.d.ts	/^            function register(key: string, plugin: Function, mapping: string, custom?: boolean): void;$/;"	f
register	pilas-engine/declaraciones/phaser.d.ts	/^            function register(key: string, plugin: Function, mapping: string, settingsKey: string, configKey: string): void;$/;"	f
register	pilas-engine/declaraciones/phaser.d.ts	/^            static register(factoryType: string, factoryFunction: Function): void;$/;"	m
registerCustom	pilas-engine/declaraciones/phaser.d.ts	/^            function registerCustom(key: string, plugin: Function, mapping: string, data: any): void;$/;"	f
registerFileType	pilas-engine/declaraciones/phaser.d.ts	/^            registerFileType(key: string, callback: Function, addToScene?: Phaser.Scene): void;$/;"	m
registerGameObject	pilas-engine/declaraciones/phaser.d.ts	/^            registerGameObject(key: string, factoryCallback?: Function, creatorCallback?: Function): void;$/;"	m
registry	pilas-engine/declaraciones/phaser.d.ts	/^            registry: Phaser.Data.DataManager;$/;"	m
registry	pilas-engine/declaraciones/phaser.d.ts	/^        registry: Phaser.Data.DataManager;$/;"	m
reiniciar	pilas-engine/actores/-actor-base.ts	/^  reiniciar() {$/;"	m
reiniciar_animacion	pilas-engine/actores/-actor-base.ts	/^  reiniciar_animacion() {$/;"	m
reiniciar_escena	pilas-engine/actores.ts	/^  reiniciar_escena() {$/;"	m
reiniciar_escena	pilas-engine/actores/reiniciar_escena.ts	/^class reiniciar_escena extends ActorTextoBase {$/;"	c
reiniciar_escena	pilas-engine/pilas.ts	/^  reiniciar_escena() {$/;"	m
releasePointerLock	pilas-engine/declaraciones/phaser.d.ts	/^                releasePointerLock(): void;$/;"	m
remove	pilas-engine/declaraciones/phaser.d.ts	/^                function remove(parent: any): void;$/;"	f
remove	pilas-engine/declaraciones/phaser.d.ts	/^                remove(): this;$/;"	m
remove	pilas-engine/declaraciones/phaser.d.ts	/^                remove(body: Phaser.Physics.Arcade.Body | Phaser.Physics.Arcade.StaticBody): void;$/;"	m
remove	pilas-engine/declaraciones/phaser.d.ts	/^                remove(camera: Phaser.Cameras.Scene2D.Camera | Phaser.Cameras.Scene2D.Camera[], runDestroy?: boolean): number;$/;"	m
remove	pilas-engine/declaraciones/phaser.d.ts	/^                remove(name: string, removeClass?: boolean, removePostPipelineClass?: boolean): void;$/;"	m
remove	pilas-engine/declaraciones/phaser.d.ts	/^                remove(object: object | object[], deep?: boolean): this;$/;"	m
remove	pilas-engine/declaraciones/phaser.d.ts	/^            function remove(key: string): void;$/;"	f
remove	pilas-engine/declaraciones/phaser.d.ts	/^            remove(): this;$/;"	m
remove	pilas-engine/declaraciones/phaser.d.ts	/^            remove(child: Phaser.GameObjects.GameObject | Phaser.GameObjects.GameObject[], destroyChild?: boolean): this;$/;"	m
remove	pilas-engine/declaraciones/phaser.d.ts	/^            remove(child: Phaser.GameObjects.GameObject, removeFromScene?: boolean, destroyChild?: boolean): this;$/;"	m
remove	pilas-engine/declaraciones/phaser.d.ts	/^            remove(child: T, skipCallback?: boolean): T;$/;"	m
remove	pilas-engine/declaraciones/phaser.d.ts	/^            remove(dispatchCallback?: boolean): void;$/;"	m
remove	pilas-engine/declaraciones/phaser.d.ts	/^            remove(item: T): Phaser.Structs.ProcessQueue<T>;$/;"	m
remove	pilas-engine/declaraciones/phaser.d.ts	/^            remove(key: string | Phaser.Textures.Texture): Phaser.Textures.TextureManager;$/;"	m
remove	pilas-engine/declaraciones/phaser.d.ts	/^            remove(key: string | string[]): this;$/;"	m
remove	pilas-engine/declaraciones/phaser.d.ts	/^            remove(key: string): Phaser.Animations.Animation;$/;"	m
remove	pilas-engine/declaraciones/phaser.d.ts	/^            remove(key: string): this;$/;"	m
remove	pilas-engine/declaraciones/phaser.d.ts	/^            remove(key?: string | Phaser.Scene): this;$/;"	m
remove	pilas-engine/declaraciones/phaser.d.ts	/^            remove(name: string): boolean;$/;"	m
remove	pilas-engine/declaraciones/phaser.d.ts	/^            remove(sound: Phaser.Sound.BaseSound): boolean;$/;"	m
remove	pilas-engine/declaraciones/phaser.d.ts	/^            remove(tween: Phaser.Tweens.Tween): Phaser.Tweens.TweenManager;$/;"	m
remove	pilas-engine/declaraciones/phaser.d.ts	/^            static remove(factoryType: string): void;$/;"	m
removeAll	pilas-engine/declaraciones/phaser.d.ts	/^            removeAll(): this;$/;"	m
removeAll	pilas-engine/declaraciones/phaser.d.ts	/^            removeAll(): void;$/;"	m
removeAll	pilas-engine/declaraciones/phaser.d.ts	/^            removeAll(destroyChild?: boolean): this;$/;"	m
removeAll	pilas-engine/declaraciones/phaser.d.ts	/^            removeAll(skipCallback?: boolean): Phaser.Structs.List<T>;$/;"	m
removeAllEvents	pilas-engine/declaraciones/phaser.d.ts	/^            removeAllEvents(): this;$/;"	m
removeAllKeys	pilas-engine/declaraciones/phaser.d.ts	/^                removeAllKeys(destroy?: boolean): this;$/;"	m
removeAllLayers	pilas-engine/declaraciones/phaser.d.ts	/^            removeAllLayers(): this;$/;"	m
removeAllListeners	pilas-engine/declaraciones/phaser.d.ts	/^            removeAllListeners(event?: string | symbol): this;$/;"	m
removeAt	pilas-engine/declaraciones/phaser.d.ts	/^            removeAt(index: number, destroyChild?: boolean): this;$/;"	m
removeAt	pilas-engine/declaraciones/phaser.d.ts	/^            removeAt(index: number, skipCallback?: boolean): T;$/;"	m
removeBetween	pilas-engine/declaraciones/phaser.d.ts	/^            removeBetween(startIndex?: number, endIndex?: number, destroyChild?: boolean): this;$/;"	m
removeBetween	pilas-engine/declaraciones/phaser.d.ts	/^            removeBetween(startIndex?: number, endIndex?: number, skipCallback?: boolean): T[];$/;"	m
removeBlendMode	pilas-engine/declaraciones/phaser.d.ts	/^                removeBlendMode(index: number): this;$/;"	m
removeBody	pilas-engine/declaraciones/phaser.d.ts	/^                removeBody(): Phaser.Physics.Matter.TileBody;$/;"	m
removeBounds	pilas-engine/declaraciones/phaser.d.ts	/^                removeBounds(): this;$/;"	m
removeByKey	pilas-engine/declaraciones/phaser.d.ts	/^            removeByKey(key: string): number;$/;"	m
removeCallback	pilas-engine/declaraciones/phaser.d.ts	/^            removeCallback: Function;$/;"	m
removeCallback	pilas-engine/declaraciones/phaser.d.ts	/^            removeCallback: Phaser.Types.GameObjects.Group.GroupCallback;$/;"	m
removeCallbackHandler	pilas-engine/declaraciones/phaser.d.ts	/^                removeCallbackHandler(child: Phaser.GameObjects.GameObject): void;$/;"	m
removeCapture	pilas-engine/declaraciones/phaser.d.ts	/^                removeCapture(keycode: string | number | number[] | any[]): this;$/;"	m
removeCapture	pilas-engine/declaraciones/phaser.d.ts	/^                removeCapture(keycode: string | number | number[] | any[]): void;$/;"	m
removeCollider	pilas-engine/declaraciones/phaser.d.ts	/^                removeCollider(collider: Phaser.Physics.Arcade.Collider): Phaser.Physics.Arcade.World;$/;"	m
removeConstraint	pilas-engine/declaraciones/phaser.d.ts	/^                removeConstraint(constraint: MatterJS.ConstraintType | MatterJS.ConstraintType[], deep?: boolean): this;$/;"	m
removeCustom	pilas-engine/declaraciones/phaser.d.ts	/^            function removeCustom(key: string): void;$/;"	f
removeDebug	pilas-engine/declaraciones/phaser.d.ts	/^            removeDebug(gameObject: Phaser.GameObjects.GameObject): this;$/;"	m
removeElement	pilas-engine/declaraciones/phaser.d.ts	/^            removeElement(): this;$/;"	m
removeEmitter	pilas-engine/declaraciones/phaser.d.ts	/^                removeEmitter(emitter: Phaser.GameObjects.Particles.ParticleEmitter): Phaser.GameObjects.Particles.ParticleEmitter;$/;"	m
removeEvent	pilas-engine/declaraciones/phaser.d.ts	/^            removeEvent(events: Phaser.Time.TimerEvent | Phaser.Time.TimerEvent[]): this;$/;"	m
removeFrame	pilas-engine/declaraciones/phaser.d.ts	/^            removeFrame(frame: Phaser.Animations.AnimationFrame): this;$/;"	m
removeFrameAt	pilas-engine/declaraciones/phaser.d.ts	/^            removeFrameAt(index: number): this;$/;"	m
removeFromDisplayList	pilas-engine/declaraciones/phaser.d.ts	/^            removeFromDisplayList(): this;$/;"	m
removeFromUpdateList	pilas-engine/declaraciones/phaser.d.ts	/^            removeFromUpdateList(): this;$/;"	m
removeFullscreenTarget	pilas-engine/declaraciones/phaser.d.ts	/^            removeFullscreenTarget(): void;$/;"	m
removeGameObject	pilas-engine/declaraciones/phaser.d.ts	/^            removeGameObject(key: string, removeFromFactory?: boolean, removeFromCreator?: boolean): void;$/;"	m
removeGlobalPlugin	pilas-engine/declaraciones/phaser.d.ts	/^            removeGlobalPlugin(key: string): void;$/;"	m
removeInteractive	pilas-engine/declaraciones/phaser.d.ts	/^            removeInteractive(): this;$/;"	m
removeKey	pilas-engine/declaraciones/phaser.d.ts	/^                removeKey(key: Phaser.Input.Keyboard.Key | string | number, destroy?: boolean): this;$/;"	m
removeKey	pilas-engine/declaraciones/phaser.d.ts	/^            removeKey(key: string): Phaser.Textures.TextureManager;$/;"	m
removeLayer	pilas-engine/declaraciones/phaser.d.ts	/^            removeLayer(layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Tilemaps.Tilemap;$/;"	m
removeLight	pilas-engine/declaraciones/phaser.d.ts	/^            removeLight(light: Phaser.GameObjects.Light): this;$/;"	m
removeListener	pilas-engine/declaraciones/phaser.d.ts	/^            removeListener(event: string | symbol, fn?: Function, context?: any, once?: boolean): this;$/;"	m
removeListener	pilas-engine/declaraciones/phaser.d.ts	/^            removeListener(events: string): this;$/;"	m
removeMarker	pilas-engine/declaraciones/phaser.d.ts	/^            removeMarker(key: string): this;$/;"	m
removeMarker	pilas-engine/declaraciones/phaser.d.ts	/^            removeMarker(markerName: string): Phaser.Types.Sound.SoundMarker;$/;"	m
removeMarker	pilas-engine/declaraciones/phaser.d.ts	/^            removeMarker(markerName: string): null;$/;"	m
removeMix	pilas-engine/declaraciones/phaser.d.ts	/^            removeMix(animA: string | Phaser.Animations.Animation, animB?: string | Phaser.Animations.Animation): this;$/;"	m
removePaddingChars	pilas-engine/modos/modo_cargador.ts	/^      removePaddingChars: function(input: any) {$/;"	m
removePostPipeline	pilas-engine/declaraciones/phaser.d.ts	/^                removePostPipeline(pipeline: string | Phaser.Renderer.WebGL.Pipelines.PostFXPipeline): this;$/;"	m
removePostPipeline	pilas-engine/declaraciones/phaser.d.ts	/^            removePostPipeline(pipeline: string | Phaser.Renderer.WebGL.Pipelines.PostFXPipeline): this;$/;"	m
removeScenePlugin	pilas-engine/declaraciones/phaser.d.ts	/^            removeScenePlugin(key: string): void;$/;"	m
removeTile	pilas-engine/declaraciones/phaser.d.ts	/^            removeTile(tiles: Phaser.Tilemaps.Tile | Phaser.Tilemaps.Tile[], replaceIndex?: number, recalculateFaces?: boolean): Phaser.Tilemaps.Tile[];$/;"	m
removeTileAt	pilas-engine/declaraciones/phaser.d.ts	/^            removeTileAt(tileX: number, tileY: number, replaceWithNull?: boolean, recalculateFaces?: boolean): Phaser.Tilemaps.Tile;$/;"	m
removeTileAt	pilas-engine/declaraciones/phaser.d.ts	/^            removeTileAt(tileX: number, tileY: number, replaceWithNull?: boolean, recalculateFaces?: boolean, layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Tilemaps.Tile;$/;"	m
removeTileAtWorldXY	pilas-engine/declaraciones/phaser.d.ts	/^            removeTileAtWorldXY(worldX: number, worldY: number, replaceWithNull?: boolean, recalculateFaces?: boolean, camera?: Phaser.Cameras.Scene2D.Camera): Phaser.Tilemaps.Tile;$/;"	m
removeTileAtWorldXY	pilas-engine/declaraciones/phaser.d.ts	/^            removeTileAtWorldXY(worldX: number, worldY: number, replaceWithNull?: boolean, recalculateFaces?: boolean, camera?: Phaser.Cameras.Scene2D.Camera, layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Tilemaps.Tile;$/;"	m
removeVideoElement	pilas-engine/declaraciones/phaser.d.ts	/^            removeVideoElement(): void;$/;"	m
removeVideoElementOnDestroy	pilas-engine/declaraciones/phaser.d.ts	/^            removeVideoElementOnDestroy: boolean;$/;"	m
removedFromScene	pilas-engine/declaraciones/phaser.d.ts	/^            removedFromScene(): void;$/;"	m
renameTexture	pilas-engine/declaraciones/phaser.d.ts	/^            renameTexture(currentKey: string, newKey: string): boolean;$/;"	m
render	pilas-engine/declaraciones/phaser.d.ts	/^                protected render(renderer: Phaser.Renderer.Canvas.CanvasRenderer | Phaser.Renderer.WebGL.WebGLRenderer, displayList: Phaser.GameObjects.DisplayList): void;$/;"	m
render	pilas-engine/declaraciones/phaser.d.ts	/^                render(scene: Phaser.Scene, children: Phaser.GameObjects.GameObject[], camera: Phaser.Cameras.Scene2D.Camera): void;$/;"	m
render	pilas-engine/declaraciones/phaser.d.ts	/^            render(renderer: Phaser.Renderer.Canvas.CanvasRenderer | Phaser.Renderer.WebGL.WebGLRenderer): void;$/;"	m
renderBody	pilas-engine/declaraciones/phaser.d.ts	/^                renderBody(body: MatterJS.BodyType, graphics: Phaser.GameObjects.Graphics, showInternalEdges: boolean, lineColor?: number, lineOpacity?: number, lineThickness?: number, fillColor?: number, fillOpacity?: number): this;$/;"	m
renderBodyAxes	pilas-engine/declaraciones/phaser.d.ts	/^                renderBodyAxes(bodies: any[], graphics: Phaser.GameObjects.Graphics, showAxes: boolean, lineColor: number, lineOpacity: number): void;$/;"	m
renderBodyBounds	pilas-engine/declaraciones/phaser.d.ts	/^                renderBodyBounds(bodies: any[], graphics: Phaser.GameObjects.Graphics, lineColor: number, lineOpacity: number): void;$/;"	m
renderBodyVelocity	pilas-engine/declaraciones/phaser.d.ts	/^                renderBodyVelocity(bodies: any[], graphics: Phaser.GameObjects.Graphics, lineColor: number, lineOpacity: number, lineThickness: number): void;$/;"	m
renderCollisions	pilas-engine/declaraciones/phaser.d.ts	/^                renderCollisions(pairs: MatterJS.Pair[], graphics: Phaser.GameObjects.Graphics, lineColor: number): this;$/;"	m
renderConstraint	pilas-engine/declaraciones/phaser.d.ts	/^                renderConstraint(constraint: MatterJS.ConstraintType, graphics: Phaser.GameObjects.Graphics, lineColor: number, lineOpacity: number, lineThickness: number, pinSize: number, anchorColor: number, anchorSize: number): this;$/;"	m
renderConvexHull	pilas-engine/declaraciones/phaser.d.ts	/^                renderConvexHull(body: MatterJS.BodyType, graphics: Phaser.GameObjects.Graphics, hullColor: number, lineThickness?: number): this;$/;"	m
renderDebug	pilas-engine/declaraciones/phaser.d.ts	/^            renderDebug(graphics: Phaser.GameObjects.Graphics, styleConfig?: Phaser.Types.Tilemaps.StyleConfig): this;$/;"	m
renderDebug	pilas-engine/declaraciones/phaser.d.ts	/^            renderDebug(graphics: Phaser.GameObjects.Graphics, styleConfig?: Phaser.Types.Tilemaps.StyleConfig, layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Tilemaps.Tilemap;$/;"	m
renderDebug	pilas-engine/declaraciones/phaser.d.ts	/^            renderDebug(src: Phaser.GameObjects.Mesh, faces: Phaser.Geom.Mesh.Face[]): void;$/;"	m
renderDebugFull	pilas-engine/declaraciones/phaser.d.ts	/^            renderDebugFull(graphics: Phaser.GameObjects.Graphics, styleConfig?: Phaser.Types.Tilemaps.StyleConfig): this;$/;"	m
renderDebugVerts	pilas-engine/declaraciones/phaser.d.ts	/^            renderDebugVerts(src: Phaser.GameObjects.Rope, meshLength: number, verts: number[]): void;$/;"	m
renderFlags	pilas-engine/declaraciones/phaser.d.ts	/^            renderFlags: number;$/;"	m
renderGrid	pilas-engine/declaraciones/phaser.d.ts	/^                renderGrid(grid: MatterJS.Grid, graphics: Phaser.GameObjects.Graphics, lineColor: number, lineOpacity: number): this;$/;"	m
renderList	pilas-engine/declaraciones/phaser.d.ts	/^                renderList: Phaser.GameObjects.GameObject[];$/;"	m
renderOrder	pilas-engine/declaraciones/phaser.d.ts	/^            renderOrder: string;$/;"	m
renderSeparations	pilas-engine/declaraciones/phaser.d.ts	/^                renderSeparations(pairs: MatterJS.Pair[], graphics: Phaser.GameObjects.Graphics, lineColor: number): this;$/;"	m
renderTarget	pilas-engine/declaraciones/phaser.d.ts	/^                renderTarget: Phaser.Renderer.WebGL.RenderTarget;$/;"	m
renderTarget	pilas-engine/declaraciones/phaser.d.ts	/^            renderTarget: Phaser.Renderer.WebGL.RenderTarget;$/;"	m
renderTargets	pilas-engine/declaraciones/phaser.d.ts	/^                renderTargets: Phaser.Renderer.WebGL.RenderTarget[];$/;"	m
renderTexture	pilas-engine/declaraciones/phaser.d.ts	/^            renderTexture(config: Phaser.Types.GameObjects.RenderTexture.RenderTextureConfig, addToScene?: boolean): Phaser.GameObjects.RenderTexture;$/;"	m
renderTexture	pilas-engine/declaraciones/phaser.d.ts	/^            renderTexture(x: number, y: number, width?: number, height?: number): Phaser.GameObjects.RenderTexture;$/;"	m
renderToTexture	pilas-engine/declaraciones/phaser.d.ts	/^            readonly renderToTexture: boolean;$/;"	m
renderType	pilas-engine/declaraciones/phaser.d.ts	/^            readonly renderType: number;$/;"	m
renderer	pilas-engine/declaraciones/phaser.d.ts	/^                renderer: Phaser.Renderer.Canvas.CanvasRenderer | Phaser.Renderer.WebGL.WebGLRenderer;$/;"	m
renderer	pilas-engine/declaraciones/phaser.d.ts	/^                renderer: Phaser.Renderer.WebGL.WebGLRenderer;$/;"	m
renderer	pilas-engine/declaraciones/phaser.d.ts	/^            renderer: Phaser.Renderer.Canvas.CanvasRenderer | Phaser.Renderer.WebGL.WebGLRenderer;$/;"	m
renderer	pilas-engine/declaraciones/phaser.d.ts	/^        renderer: Phaser.Renderer.Canvas.CanvasRenderer | Phaser.Renderer.WebGL.WebGLRenderer;$/;"	m
repeat	pilas-engine/actores/-actor-base.ts	/^      repeat: veces - 1,$/;"	m
repeat	pilas-engine/animaciones.ts	/^      repeat: -1$/;"	m
repeat	pilas-engine/declaraciones/phaser.d.ts	/^                repeat: Function;$/;"	m
repeat	pilas-engine/declaraciones/phaser.d.ts	/^                repeat: number;$/;"	m
repeat	pilas-engine/declaraciones/phaser.d.ts	/^            readonly repeat: number;$/;"	m
repeat	pilas-engine/declaraciones/phaser.d.ts	/^            repeat: number;$/;"	m
repeatAnimation	pilas-engine/declaraciones/phaser.d.ts	/^            repeatAnimation(state: Phaser.Animations.AnimationState): void;$/;"	m
repeatCount	pilas-engine/declaraciones/phaser.d.ts	/^            repeatCount: number;$/;"	m
repeatCounter	pilas-engine/declaraciones/phaser.d.ts	/^            repeatCounter: number;$/;"	m
repeatDelay	pilas-engine/declaraciones/phaser.d.ts	/^                repeatDelay: Function;$/;"	m
repeatDelay	pilas-engine/declaraciones/phaser.d.ts	/^                repeatDelay: number;$/;"	m
repeatDelay	pilas-engine/declaraciones/phaser.d.ts	/^            repeatDelay: number;$/;"	m
repeats	pilas-engine/declaraciones/phaser.d.ts	/^                repeats: number;$/;"	m
repetir	pilas-engine/animacion_de_propiedad.ts	/^  private repetir() {$/;"	m
replace	pilas-engine/declaraciones/phaser.d.ts	/^            replace(oldChild: Phaser.GameObjects.GameObject, newChild: Phaser.GameObjects.GameObject, destroyChild?: boolean): this;$/;"	m
replace	pilas-engine/declaraciones/phaser.d.ts	/^            replace(oldChild: T, newChild: T): T;$/;"	m
replaceByIndex	pilas-engine/declaraciones/phaser.d.ts	/^            replaceByIndex(findIndex: number, newIndex: number, tileX?: number, tileY?: number, width?: number, height?: number): this;$/;"	m
replaceByIndex	pilas-engine/declaraciones/phaser.d.ts	/^            replaceByIndex(findIndex: number, newIndex: number, tileX?: number, tileY?: number, width?: number, height?: number, layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Tilemaps.Tilemap;$/;"	m
reproducir_animacion	pilas-engine/actores/-actor-base.ts	/^  reproducir_animacion(nombre_de_la_animacion) {$/;"	m
reproducir_musica	pilas-engine/actores/-actor-base.ts	/^  reproducir_musica(nombre: string) {$/;"	m
reproducir_musica	pilas-engine/escenas/-escena-base.ts	/^  reproducir_musica(nombre: string) {$/;"	m
reproducir_musica	pilas-engine/pilas.ts	/^  reproducir_musica(nombre: string) {$/;"	m
reproducir_sonido	pilas-engine/actores/-actor-base.ts	/^  reproducir_sonido(nombre: string) {$/;"	m
reproducir_sonido	pilas-engine/escenas/-escena-base.ts	/^  reproducir_sonido(nombre: string) {$/;"	m
reproducir_sonido	pilas-engine/pilas.ts	/^  reproducir_sonido(nombre: string) {$/;"	m
reproducir_sonidos_pendientes	pilas-engine/escenas/-escena-base.ts	/^  reproducir_sonidos_pendientes() {$/;"	m
request	pilas-engine/declaraciones/phaser.d.ts	/^            request: string;$/;"	m
requestPointerLock	pilas-engine/declaraciones/phaser.d.ts	/^                requestPointerLock(): void;$/;"	m
reserve	pilas-engine/declaraciones/phaser.d.ts	/^                reserve(particleCount: number): this;$/;"	m
reset	pilas-engine/declaraciones/phaser.d.ts	/^                    reset(): void;$/;"	m
reset	pilas-engine/declaraciones/phaser.d.ts	/^                reset(): this;$/;"	m
reset	pilas-engine/declaraciones/phaser.d.ts	/^                reset(x: number, y: number): void;$/;"	m
reset	pilas-engine/declaraciones/phaser.d.ts	/^                reset(x?: number, y?: number): void;$/;"	m
reset	pilas-engine/declaraciones/phaser.d.ts	/^            reset(): Phaser.Math.Vector2;$/;"	m
reset	pilas-engine/declaraciones/phaser.d.ts	/^            reset(): Phaser.Math.Vector3;$/;"	m
reset	pilas-engine/declaraciones/phaser.d.ts	/^            reset(): Phaser.Math.Vector4;$/;"	m
reset	pilas-engine/declaraciones/phaser.d.ts	/^            reset(): this;$/;"	m
reset	pilas-engine/declaraciones/phaser.d.ts	/^            reset(): void;$/;"	m
reset	pilas-engine/declaraciones/phaser.d.ts	/^            reset(config: Phaser.Types.Time.TimerEventConfig): Phaser.Time.TimerEvent;$/;"	m
reset	pilas-engine/declaraciones/phaser.d.ts	/^            reset(x: number, y: number, frame?: string | number | Phaser.Textures.Frame): this;$/;"	m
resetAll	pilas-engine/declaraciones/phaser.d.ts	/^                resetAll(): Phaser.Cameras.Scene2D.Camera;$/;"	m
resetCollision	pilas-engine/declaraciones/phaser.d.ts	/^            resetCollision(recalculateFaces?: boolean): this;$/;"	m
resetCollisionIDs	pilas-engine/declaraciones/phaser.d.ts	/^                resetCollisionIDs(): void;$/;"	m
resetConfig	pilas-engine/declaraciones/phaser.d.ts	/^            protected resetConfig(): void;$/;"	m
resetDelta	pilas-engine/declaraciones/phaser.d.ts	/^            resetDelta(): void;$/;"	m
resetFX	pilas-engine/declaraciones/phaser.d.ts	/^                resetFX(): this;$/;"	m
resetFaces	pilas-engine/declaraciones/phaser.d.ts	/^            resetFaces(): this;$/;"	m
resetFlags	pilas-engine/declaraciones/phaser.d.ts	/^                resetFlags(clear?: boolean): void;$/;"	m
resetFlip	pilas-engine/declaraciones/phaser.d.ts	/^                resetFlip(): this;$/;"	m
resetFlip	pilas-engine/declaraciones/phaser.d.ts	/^            resetFlip(): this;$/;"	m
resetKeys	pilas-engine/declaraciones/phaser.d.ts	/^                resetKeys(): this;$/;"	m
resetOnMatch	pilas-engine/declaraciones/phaser.d.ts	/^                resetOnMatch: boolean;$/;"	m
resetOnWrongKey	pilas-engine/declaraciones/phaser.d.ts	/^                resetOnWrongKey: boolean;$/;"	m
resetPipeline	pilas-engine/declaraciones/phaser.d.ts	/^                resetPipeline(resetPostPipelines?: boolean, resetData?: boolean): boolean;$/;"	m
resetPipeline	pilas-engine/declaraciones/phaser.d.ts	/^            resetPipeline(resetPostPipelines?: boolean, resetData?: boolean): boolean;$/;"	m
resetPosition	pilas-engine/declaraciones/phaser.d.ts	/^                resetPosition(): void;$/;"	m
resetPostPipeline	pilas-engine/declaraciones/phaser.d.ts	/^                resetPostPipeline(resetData?: boolean): void;$/;"	m
resetPostPipeline	pilas-engine/declaraciones/phaser.d.ts	/^            resetPostPipeline(resetData?: boolean): void;$/;"	m
resetProgram	pilas-engine/declaraciones/phaser.d.ts	/^                resetProgram(): this;$/;"	m
resetProjectionMatrix	pilas-engine/declaraciones/phaser.d.ts	/^                resetProjectionMatrix(): void;$/;"	m
resetScissor	pilas-engine/declaraciones/phaser.d.ts	/^                resetScissor(): void;$/;"	m
resetTextures	pilas-engine/declaraciones/phaser.d.ts	/^                resetTextures(all?: boolean): void;$/;"	m
resetTransform	pilas-engine/declaraciones/phaser.d.ts	/^                resetTransform(): void;$/;"	m
resetTweenData	pilas-engine/declaraciones/phaser.d.ts	/^            resetTweenData(resetFromLoop: boolean): void;$/;"	m
resetTweens	pilas-engine/declaraciones/phaser.d.ts	/^            resetTweens(resetFromLoop: boolean): void;$/;"	m
resetUVs	pilas-engine/declaraciones/phaser.d.ts	/^                    resetUVs(): void;$/;"	m
resetUniform	pilas-engine/declaraciones/phaser.d.ts	/^                resetUniform(name: string): this;$/;"	m
resetViewport	pilas-engine/declaraciones/phaser.d.ts	/^                resetViewport(): void;$/;"	m
resetXHR	pilas-engine/declaraciones/phaser.d.ts	/^            resetXHR(): void;$/;"	m
resize	pilas-engine/declaraciones/phaser.d.ts	/^                resize(width: number, height: number): this;$/;"	m
resize	pilas-engine/declaraciones/phaser.d.ts	/^                resize(width: number, height: number): void;$/;"	m
resize	pilas-engine/declaraciones/phaser.d.ts	/^                resize(width?: number, height?: number): this;$/;"	m
resize	pilas-engine/declaraciones/phaser.d.ts	/^                resize(width?: number, height?: number): void;$/;"	m
resize	pilas-engine/declaraciones/phaser.d.ts	/^            resize(width: number, height: number): this;$/;"	m
resize	pilas-engine/declaraciones/phaser.d.ts	/^            resize(width: number, height?: number): this;$/;"	m
resize	pilas-engine/modos/modo_editor.ts	/^  resize(gameSize) {$/;"	m
resizeArrays	pilas-engine/declaraciones/phaser.d.ts	/^            resizeArrays(newSize: number): this;$/;"	m
resizeInterval	pilas-engine/declaraciones/phaser.d.ts	/^            readonly resizeInterval: number;$/;"	m
resizeInterval	pilas-engine/declaraciones/phaser.d.ts	/^            resizeInterval: number;$/;"	m
resolution	pilas-engine/declaraciones/phaser.d.ts	/^            resolution: number;$/;"	m
resolver	pilas-engine/declaraciones/phaser.d.ts	/^                resolver: MatterJS.ResolverFactory;$/;"	m
responseType	pilas-engine/declaraciones/phaser.d.ts	/^                responseType: XMLHttpRequestResponseType;$/;"	m
restart	pilas-engine/declaraciones/phaser.d.ts	/^            restart(): this;$/;"	m
restart	pilas-engine/declaraciones/phaser.d.ts	/^            restart(data?: object): this;$/;"	m
restart	pilas-engine/declaraciones/phaser.d.ts	/^            restart(includeDelay?: boolean, resetRepeats?: boolean): Phaser.GameObjects.GameObject;$/;"	m
restitution	pilas-engine/declaraciones/phaser.d.ts	/^                    restitution: number;$/;"	m
restore	pilas-engine/declaraciones/phaser.d.ts	/^            restore(): this;$/;"	m
resume	pilas-engine/declaraciones/phaser.d.ts	/^                resume(): Phaser.Physics.Arcade.World;$/;"	m
resume	pilas-engine/declaraciones/phaser.d.ts	/^                resume(): Phaser.Physics.Matter.World;$/;"	m
resume	pilas-engine/declaraciones/phaser.d.ts	/^                resume(): this;$/;"	m
resume	pilas-engine/declaraciones/phaser.d.ts	/^            resume(): boolean;$/;"	m
resume	pilas-engine/declaraciones/phaser.d.ts	/^            resume(): this;$/;"	m
resume	pilas-engine/declaraciones/phaser.d.ts	/^            resume(): void;$/;"	m
resume	pilas-engine/declaraciones/phaser.d.ts	/^            resume(data?: object): Phaser.Scenes.Systems;$/;"	m
resume	pilas-engine/declaraciones/phaser.d.ts	/^            resume(fromFrame?: Phaser.Animations.AnimationFrame): Phaser.GameObjects.GameObject;$/;"	m
resume	pilas-engine/declaraciones/phaser.d.ts	/^            resume(key: string | Phaser.Scene, data?: object): this;$/;"	m
resume	pilas-engine/declaraciones/phaser.d.ts	/^            resume(key?: string | Phaser.Scene, data?: object): this;$/;"	m
resumeAll	pilas-engine/declaraciones/phaser.d.ts	/^            resumeAll(): Phaser.Tweens.TweenManager;$/;"	m
resumeAll	pilas-engine/declaraciones/phaser.d.ts	/^            resumeAll(): this;$/;"	m
resumeAll	pilas-engine/declaraciones/phaser.d.ts	/^            resumeAll(): void;$/;"	m
resumeFollow	pilas-engine/declaraciones/phaser.d.ts	/^                resumeFollow(): this;$/;"	m
resumeFollow	pilas-engine/declaraciones/phaser.d.ts	/^            resumeFollow(): this;$/;"	m
retroFont	pilas-engine/declaraciones/phaser.d.ts	/^                    retroFont: boolean;$/;"	m
retroceder_posicion	pilas-engine/modos/modo_pausa.ts	/^  retroceder_posicion() {$/;"	m
retry	pilas-engine/declaraciones/phaser.d.ts	/^            retry: number;$/;"	m
retryInterval	pilas-engine/declaraciones/phaser.d.ts	/^            retryInterval: number;$/;"	m
retryLimit	pilas-engine/declaraciones/phaser.d.ts	/^            retryLimit: number;$/;"	m
return	pilas-engine/actores/-actor-base.ts	/^      return (this.sprite as any).isSensor();$/;"	m
return	pilas-engine/actores/-actor-base.ts	/^      return (this.sprite as any).isStatic();$/;"	m
return	pilas-engine/actores/-actor-base.ts	/^    return ($/;"	m
return	pilas-engine/actores/-actor-base.ts	/^    return (1 - this.sprite.alpha) * 100;$/;"	m
return	pilas-engine/actores/-actor-base.ts	/^    return (this.sprite.body as any).restitution;$/;"	m
return	pilas-engine/actores/-actor-base.ts	/^    return (this.sprite.body as any).velocity.x;$/;"	m
return	pilas-engine/laser.ts	/^    return (Phaser.Physics.Matter as any).Matter.Vector.create(this.x, this.y);$/;"	m
return	pilas-engine/laser.ts	/^    return (y - this.offsetY) \/ this.slope;$/;"	m
return	pilas-engine/libs/spriter.ts	/^    return ((a * t + b) * t + c) * t;$/;"	m
return	pilas-engine/libs/spriter.ts	/^    return ((angle + Math.PI) % (2.0 * Math.PI)) - Math.PI;$/;"	m
return	pilas-engine/libs/spriter.ts	/^    return ((angle - Math.PI) % (2.0 * Math.PI)) + Math.PI;$/;"	m
return	pilas-engine/libs/spriter.ts	/^    return (3.0 * ax * t + 2.0 * bx) * t + cx;$/;"	m
return	pilas-engine/libs/spriter.ts	/^    return (anim && anim.length) || 0;$/;"	m
return	pilas-engine/libs/spriter.ts	/^    return (this.rad * 180) \/ Math.PI;$/;"	m
return	pilas-engine/pilas.ts	/^    return ($/;"	m
return	pilas-engine/utilidades.ts	/^    return ($/;"	m
return	pilas-engine/utilidades.ts	/^    return (grados * Math.PI) \/ 180;$/;"	m
return	pilas-engine/utilidades.ts	/^    return (radianes * 180) \/ Math.PI;$/;"	m
reverse	pilas-engine/declaraciones/phaser.d.ts	/^            reverse(): Phaser.GameObjects.GameObject;$/;"	m
reverse	pilas-engine/declaraciones/phaser.d.ts	/^            reverse(): Phaser.Structs.List<T>;$/;"	m
reverse	pilas-engine/declaraciones/phaser.d.ts	/^            reverse(): this;$/;"	m
revokeObjectURL	pilas-engine/declaraciones/phaser.d.ts	/^            static revokeObjectURL(image: HTMLImageElement): void;$/;"	m
rgba	pilas-engine/declaraciones/phaser.d.ts	/^            readonly rgba: string;$/;"	m
right	pilas-engine/declaraciones/phaser.d.ts	/^                    right: Phaser.Input.Keyboard.Key;$/;"	m
right	pilas-engine/declaraciones/phaser.d.ts	/^                    right: boolean;$/;"	m
right	pilas-engine/declaraciones/phaser.d.ts	/^                    right: number;$/;"	m
right	pilas-engine/declaraciones/phaser.d.ts	/^                readonly right: number;$/;"	m
right	pilas-engine/declaraciones/phaser.d.ts	/^                right: Phaser.Input.Keyboard.Key;$/;"	m
right	pilas-engine/declaraciones/phaser.d.ts	/^                right: boolean;$/;"	m
right	pilas-engine/declaraciones/phaser.d.ts	/^            right: number;$/;"	m
rightButtonDown	pilas-engine/declaraciones/phaser.d.ts	/^            rightButtonDown(): boolean;$/;"	m
rightButtonReleased	pilas-engine/declaraciones/phaser.d.ts	/^            rightButtonReleased(): boolean;$/;"	m
rightStick	pilas-engine/declaraciones/phaser.d.ts	/^                rightStick: Phaser.Math.Vector2;$/;"	m
robot	pilas-engine/actores.ts	/^  robot() {$/;"	m
robot	pilas-engine/actores/robot.ts	/^class robot extends Actor {$/;"	c
rope	pilas-engine/declaraciones/phaser.d.ts	/^            rope(config: Phaser.Types.GameObjects.Rope.RopeConfig, addToScene?: boolean): Phaser.GameObjects.Rope;$/;"	m
rope	pilas-engine/declaraciones/phaser.d.ts	/^            rope(x: number, y: number, texture: string | Phaser.Textures.Texture, frame?: string | number, points?: Phaser.Types.Math.Vector2Like[], horizontal?: boolean, colors?: number[], alphas?: number[]): Phaser.GameObjects.Rope;$/;"	m
rotacion	pilas-engine/actores/-actor-base.ts	/^      rotacion: this.rotacion,$/;"	m
rotacion	pilas-engine/actores/-actor-base.ts	/^    rotacion: 0,$/;"	m
rotacion	pilas-engine/actores/-actor-base.ts	/^  get rotacion() {$/;"	m
rotacion	pilas-engine/actores/-actor-base.ts	/^  set rotacion(angulo: any) {$/;"	m
rotacion	pilas-engine/actores/interruptor_de_gravedad.ts	/^    rotacion: -90,$/;"	m
rotacion	pilas-engine/animacion_de_propiedad.ts	/^      rotacion: "+=" + angulo,$/;"	m
rotacion	pilas-engine/animacion_de_propiedad.ts	/^      rotacion: angulo,$/;"	m
rotacion	pilas-engine/laser.ts	/^  rotacion: number;$/;"	m
rotacion	pilas-engine/modos/modo.ts	/^          rotacion: laser.rotacion,$/;"	m
rotar	pilas-engine/animacion_de_propiedad.ts	/^  rotar(angulo: number, duraci√≥n: number = 0) {$/;"	m
rotar	pilas-engine/animacion_nula.ts	/^  rotar() {$/;"	m
rotar_hasta	pilas-engine/animacion_de_propiedad.ts	/^  rotar_hasta(angulo: number, duraci√≥n: number = 0) {$/;"	m
rotar_hasta	pilas-engine/animacion_nula.ts	/^  rotar_hasta() {$/;"	m
rotate	pilas-engine/declaraciones/phaser.d.ts	/^                rotate(angle: number): this;$/;"	m
rotate	pilas-engine/declaraciones/phaser.d.ts	/^                rotate: Phaser.GameObjects.Particles.EmitterOp;$/;"	m
rotate	pilas-engine/declaraciones/phaser.d.ts	/^            rotate(delta: number): Phaser.Math.Vector2;$/;"	m
rotate	pilas-engine/declaraciones/phaser.d.ts	/^            rotate(rad: number): Phaser.Math.Matrix3;$/;"	m
rotate	pilas-engine/declaraciones/phaser.d.ts	/^            rotate(rad: number, axis: Phaser.Math.Vector3): this;$/;"	m
rotate	pilas-engine/declaraciones/phaser.d.ts	/^            rotate(value: number, step?: number): this;$/;"	m
rotate	pilas-engine/laser.ts	/^  rotate(rot: number) {$/;"	m
rotate	pilas-engine/libs/spriter.ts	/^  static rotate(space, rad) {$/;"	m
rotate3d	pilas-engine/declaraciones/phaser.d.ts	/^            rotate3d: Phaser.Math.Vector4;$/;"	m
rotate3dAngle	pilas-engine/declaraciones/phaser.d.ts	/^            rotate3dAngle: string;$/;"	m
rotateAround	pilas-engine/declaraciones/phaser.d.ts	/^            rotateAround(point: Phaser.Types.Math.Vector2Like, angle: number): this;$/;"	m
rotateAroundDistance	pilas-engine/declaraciones/phaser.d.ts	/^            rotateAroundDistance(point: Phaser.Types.Math.Vector2Like, angle: number, distance: number): this;$/;"	m
rotateCanvas	pilas-engine/declaraciones/phaser.d.ts	/^            rotateCanvas(radians: number): this;$/;"	m
rotateTo	pilas-engine/declaraciones/phaser.d.ts	/^                rotateTo(radians: number, shortestPath?: boolean, duration?: number, ease?: string | Function, force?: boolean, callback?: CameraRotateCallback, context?: any): Phaser.Cameras.Scene2D.Camera;$/;"	m
rotateToEffect	pilas-engine/declaraciones/phaser.d.ts	/^                rotateToEffect: Phaser.Cameras.Scene2D.Effects.RotateTo;$/;"	m
rotateToPath	pilas-engine/declaraciones/phaser.d.ts	/^                rotateToPath: boolean;$/;"	m
rotateToPath	pilas-engine/declaraciones/phaser.d.ts	/^            rotateToPath: boolean;$/;"	m
rotateX	pilas-engine/declaraciones/phaser.d.ts	/^            rotateX(rad: number): Phaser.Math.Quaternion;$/;"	m
rotateX	pilas-engine/declaraciones/phaser.d.ts	/^            rotateX(rad: number): this;$/;"	m
rotateY	pilas-engine/declaraciones/phaser.d.ts	/^            rotateY(rad: number): Phaser.Math.Quaternion;$/;"	m
rotateY	pilas-engine/declaraciones/phaser.d.ts	/^            rotateY(rad: number): this;$/;"	m
rotateZ	pilas-engine/declaraciones/phaser.d.ts	/^            rotateZ(rad: number): Phaser.Math.Quaternion;$/;"	m
rotateZ	pilas-engine/declaraciones/phaser.d.ts	/^            rotateZ(rad: number): this;$/;"	m
rotated	pilas-engine/declaraciones/phaser.d.ts	/^            rotated: boolean;$/;"	m
rotation	pilas-engine/declaraciones/phaser.d.ts	/^                    rotation: number;$/;"	m
rotation	pilas-engine/declaraciones/phaser.d.ts	/^                readonly rotation: number;$/;"	m
rotation	pilas-engine/declaraciones/phaser.d.ts	/^                rotation: number;$/;"	m
rotation	pilas-engine/declaraciones/phaser.d.ts	/^            rotation(): number;$/;"	m
rotation	pilas-engine/declaraciones/phaser.d.ts	/^            rotation: number;$/;"	m
rotationNormalized	pilas-engine/declaraciones/phaser.d.ts	/^                readonly rotationNormalized: number;$/;"	m
rotationTo	pilas-engine/declaraciones/phaser.d.ts	/^            rotationTo(a: Phaser.Math.Vector3, b: Phaser.Math.Vector3): Phaser.Math.Quaternion;$/;"	m
roundPixels	pilas-engine/declaraciones/phaser.d.ts	/^                    roundPixels: boolean;$/;"	m
roundPixels	pilas-engine/declaraciones/phaser.d.ts	/^                roundPixels: boolean;$/;"	m
roundPixels	pilas-engine/declaraciones/phaser.d.ts	/^            readonly roundPixels: boolean;$/;"	m
rows	pilas-engine/declaraciones/phaser.d.ts	/^            readonly rows: number;$/;"	m
rtl	pilas-engine/declaraciones/phaser.d.ts	/^            rtl: boolean;$/;"	m
run	pilas-engine/declaraciones/phaser.d.ts	/^            run(key: string | Phaser.Scene, data?: object): this;$/;"	m
runChildUpdate	pilas-engine/declaraciones/phaser.d.ts	/^            runChildUpdate: boolean;$/;"	m
runWordWrap	pilas-engine/declaraciones/phaser.d.ts	/^            runWordWrap(text: string): string;$/;"	m
runner	pilas-engine/declaraciones/phaser.d.ts	/^                runner: Phaser.Types.Physics.Matter.MatterRunnerConfig;$/;"	m
running	pilas-engine/declaraciones/phaser.d.ts	/^            readonly running: boolean;$/;"	m
ruta	pilas-engine/pilas.ts	/^            ruta: "sonidos\/explosion.mp3"$/;"	m
ruta	pilas-engine/pilas.ts	/^            ruta: "sonidos\/gallina.mp3"$/;"	m
ruta	pilas-engine/pilas.ts	/^            ruta: "sonidos\/laser.mp3"$/;"	m
ruta	pilas-engine/pilas.ts	/^            ruta: "sonidos\/moneda.mp3"$/;"	m
ruta	pilas-engine/pilas.ts	/^            ruta: "sonidos\/salto-corto.mp3"$/;"	m
ruta	pilas-engine/pilas.ts	/^            ruta: "sonidos\/salto-largo.mp3"$/;"	m
ruta	pilas-engine/pilas.ts	/^            ruta: "sonidos\/seleccion-aguda.mp3"$/;"	m
ruta	pilas-engine/pilas.ts	/^            ruta: "sonidos\/seleccion-grave.mp3"$/;"	m
s	pilas-engine/declaraciones/phaser.d.ts	/^                s: number;$/;"	m
s	pilas-engine/declaraciones/phaser.d.ts	/^            s: number;$/;"	m
safari	pilas-engine/declaraciones/phaser.d.ts	/^            safari: boolean;$/;"	m
safariVersion	pilas-engine/declaraciones/phaser.d.ts	/^            safariVersion: number;$/;"	m
salta_actualizar	pilas-engine/actores/conejo.ts	/^  salta_actualizar() {$/;"	m
salta_iniciar	pilas-engine/actores/conejo.ts	/^  salta_iniciar() {$/;"	m
saltar	pilas-engine/actores/-actor-base.ts	/^  saltar() {$/;"	m
saludar	pilas-engine/actores/-actor-base.ts	/^  saludar() {$/;"	m
sat	pilas-engine/declaraciones/phaser.d.ts	/^                sat: MatterJS.SATFactory;$/;"	m
saturate	pilas-engine/declaraciones/phaser.d.ts	/^            saturate(amount: number): Phaser.Display.Color;$/;"	m
saturate	pilas-engine/declaraciones/phaser.d.ts	/^            saturate(value?: number, multiply?: boolean): this;$/;"	m
saturation	pilas-engine/declaraciones/phaser.d.ts	/^            saturation(multiply?: boolean): this;$/;"	m
save	pilas-engine/declaraciones/phaser.d.ts	/^            save(): this;$/;"	m
save	pilas-engine/declaraciones/phaser.d.ts	/^            save(data: any, filename?: string, filetype?: string): this;$/;"	m
saveBool	pilas-engine/libs/spriter.ts	/^function saveBool(json: any, key: string | number, value: boolean, def?: boolean): void {$/;"	f
saveData	pilas-engine/declaraciones/phaser.d.ts	/^        saveData(data: object): this;$/;"	m
saveFloat	pilas-engine/libs/spriter.ts	/^function saveFloat(json: any, key: string | number, value: number, def?: number): void {$/;"	f
saveInt	pilas-engine/libs/spriter.ts	/^function saveInt(json: any, key: string | number, value: number, def?: number): void {$/;"	f
saveJSON	pilas-engine/declaraciones/phaser.d.ts	/^            saveJSON(data: any, filename?: string): this;$/;"	m
saveSession	pilas-engine/declaraciones/phaser.d.ts	/^        saveSession(data: object): this;$/;"	m
saveSnapshotTexture	pilas-engine/declaraciones/phaser.d.ts	/^            saveSnapshotTexture(key: string): Phaser.Textures.CanvasTexture;$/;"	m
saveStats	pilas-engine/declaraciones/phaser.d.ts	/^        saveStats(data: object): this;$/;"	m
saveString	pilas-engine/libs/spriter.ts	/^function saveString(json: any, key: string | number, value: string, def?: string): void {$/;"	f
saveTexture	pilas-engine/declaraciones/phaser.d.ts	/^            saveTexture(key: string): Phaser.Textures.Texture;$/;"	m
saveTexture	pilas-engine/declaraciones/phaser.d.ts	/^            saveTexture(key: string, flipY?: boolean): Phaser.Textures.Texture;$/;"	m
save_delta_times	pilas-engine/modos/modo_ejecucion.ts	/^  save_delta_times(time, delta) {$/;"	m
scale	pilas-engine/declaraciones/phaser.d.ts	/^                    scale: number;$/;"	m
scale	pilas-engine/declaraciones/phaser.d.ts	/^                scale(x: number, y: number): this;$/;"	m
scale	pilas-engine/declaraciones/phaser.d.ts	/^                scale: number;$/;"	m
scale	pilas-engine/declaraciones/phaser.d.ts	/^                scale: object;$/;"	m
scale	pilas-engine/declaraciones/phaser.d.ts	/^            scale(scale: number): Phaser.Math.Quaternion;$/;"	m
scale	pilas-engine/declaraciones/phaser.d.ts	/^            scale(scale: number): Phaser.Math.Vector3;$/;"	m
scale	pilas-engine/declaraciones/phaser.d.ts	/^            scale(scale: number): Phaser.Math.Vector4;$/;"	m
scale	pilas-engine/declaraciones/phaser.d.ts	/^            scale(v: Phaser.Math.Vector2 | Phaser.Math.Vector3 | Phaser.Math.Vector4): Phaser.Math.Matrix3;$/;"	m
scale	pilas-engine/declaraciones/phaser.d.ts	/^            scale(v: Phaser.Math.Vector3 | Phaser.Math.Vector4): this;$/;"	m
scale	pilas-engine/declaraciones/phaser.d.ts	/^            scale(value: number): Phaser.Math.Vector2;$/;"	m
scale	pilas-engine/declaraciones/phaser.d.ts	/^            scale: Phaser.Scale.ScaleManager;$/;"	m
scale	pilas-engine/declaraciones/phaser.d.ts	/^            scale: number;$/;"	m
scale	pilas-engine/declaraciones/phaser.d.ts	/^        scale: Phaser.Scale.ScaleManager;$/;"	m
scale	pilas-engine/libs/spriter.ts	/^  static scale(space, x, y) {$/;"	m
scale	pilas-engine/pilas.ts	/^      scale: escala,$/;"	m
scaleCanvas	pilas-engine/declaraciones/phaser.d.ts	/^            scaleCanvas(x: number, y: number): this;$/;"	m
scaleManager	pilas-engine/declaraciones/phaser.d.ts	/^                scaleManager: Phaser.Scale.ScaleManager;$/;"	m
scaleManager	pilas-engine/declaraciones/phaser.d.ts	/^            scaleManager: Phaser.Scale.ScaleManager;$/;"	m
scaleMode	pilas-engine/declaraciones/phaser.d.ts	/^                scaleMode: number;$/;"	m
scaleMode	pilas-engine/declaraciones/phaser.d.ts	/^            readonly scaleMode: Phaser.Scale.ScaleModeType;$/;"	m
scaleMode	pilas-engine/declaraciones/phaser.d.ts	/^            scaleMode: Phaser.Scale.ScaleModeType;$/;"	m
scaleMode	pilas-engine/declaraciones/phaser.d.ts	/^            scaleMode: number;$/;"	m
scaleX	pilas-engine/declaraciones/phaser.d.ts	/^                    scaleX: number;$/;"	m
scaleX	pilas-engine/declaraciones/phaser.d.ts	/^                readonly scaleX: number;$/;"	m
scaleX	pilas-engine/declaraciones/phaser.d.ts	/^                scaleX: Phaser.GameObjects.Particles.EmitterOp;$/;"	m
scaleX	pilas-engine/declaraciones/phaser.d.ts	/^                scaleX: number;$/;"	m
scaleX	pilas-engine/declaraciones/phaser.d.ts	/^            scaleX(value: number, step?: number): this;$/;"	m
scaleX	pilas-engine/declaraciones/phaser.d.ts	/^            scaleX: number;$/;"	m
scaleXY	pilas-engine/declaraciones/phaser.d.ts	/^            scaleXY(scaleX: number, scaleY?: number, stepX?: number, stepY?: number): this;$/;"	m
scaleXYZ	pilas-engine/declaraciones/phaser.d.ts	/^            scaleXYZ(x: number, y: number, z: number): this;$/;"	m
scaleY	pilas-engine/declaraciones/phaser.d.ts	/^                    scaleY: number;$/;"	m
scaleY	pilas-engine/declaraciones/phaser.d.ts	/^                readonly scaleY: number;$/;"	m
scaleY	pilas-engine/declaraciones/phaser.d.ts	/^                scaleY: Phaser.GameObjects.Particles.EmitterOp;$/;"	m
scaleY	pilas-engine/declaraciones/phaser.d.ts	/^                scaleY: number;$/;"	m
scaleY	pilas-engine/declaraciones/phaser.d.ts	/^            scaleY(value: number, step?: number): this;$/;"	m
scaleY	pilas-engine/declaraciones/phaser.d.ts	/^            scaleY: number;$/;"	m
scaling	pilas-engine/declaraciones/phaser.d.ts	/^            scaling(x: number, y: number, z: number): this;$/;"	m
scene	pilas-engine/declaraciones/phaser.d.ts	/^                scene: Phaser.Scene;$/;"	m
scene	pilas-engine/declaraciones/phaser.d.ts	/^            protected scene: Phaser.Scene;$/;"	m
scene	pilas-engine/declaraciones/phaser.d.ts	/^            scene: Phaser.Scene;$/;"	m
scene	pilas-engine/declaraciones/phaser.d.ts	/^        scene: Phaser.Scenes.SceneManager;$/;"	m
scene	pilas-engine/declaraciones/phaser.d.ts	/^        scene: Phaser.Scenes.ScenePlugin;$/;"	m
sceneConfig	pilas-engine/declaraciones/phaser.d.ts	/^            readonly sceneConfig: object;$/;"	m
sceneFile	pilas-engine/declaraciones/phaser.d.ts	/^            sceneFile(key: string | Phaser.Types.Loader.FileTypes.SceneFileConfig | Phaser.Types.Loader.FileTypes.SceneFileConfig[], url?: string, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject): this;$/;"	m
sceneInputPlugin	pilas-engine/declaraciones/phaser.d.ts	/^                sceneInputPlugin: Phaser.Input.InputPlugin;$/;"	m
sceneManager	pilas-engine/declaraciones/phaser.d.ts	/^                sceneManager: Phaser.Scenes.SceneManager;$/;"	m
sceneManager	pilas-engine/declaraciones/phaser.d.ts	/^            protected sceneManager: Phaser.Scenes.SceneManager;$/;"	m
scenePlugin	pilas-engine/declaraciones/phaser.d.ts	/^            scenePlugin(key: string | Phaser.Types.Loader.FileTypes.ScenePluginFileConfig | Phaser.Types.Loader.FileTypes.ScenePluginFileConfig[], url?: string | Function, systemKey?: string, sceneKey?: string, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject): this;$/;"	m
scenePlugin	pilas-engine/declaraciones/phaser.d.ts	/^            scenePlugin: Phaser.Scenes.ScenePlugin;$/;"	m
scenePlugins	pilas-engine/declaraciones/phaser.d.ts	/^            scenePlugins: string[];$/;"	m
sceneUpdate	pilas-engine/declaraciones/phaser.d.ts	/^            sceneUpdate(time: number, delta: number): void;$/;"	m
scenes	pilas-engine/declaraciones/phaser.d.ts	/^            scenes: Phaser.Scene[];$/;"	m
scissorStack	pilas-engine/declaraciones/phaser.d.ts	/^                scissorStack: Uint32Array;$/;"	m
score	pilas-engine/declaraciones/phaser.d.ts	/^    score: integer;$/;"	m
scoreFormatted	pilas-engine/declaraciones/phaser.d.ts	/^    scoreFormatted: string;$/;"	m
scores	pilas-engine/declaraciones/phaser.d.ts	/^        scores: LeaderboardScore[];$/;"	m
script	pilas-engine/declaraciones/phaser.d.ts	/^            script(key: string | Phaser.Types.Loader.FileTypes.ScriptFileConfig | Phaser.Types.Loader.FileTypes.ScriptFileConfig[], url?: string, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject): this;$/;"	m
scripts	pilas-engine/declaraciones/phaser.d.ts	/^            scripts(key: string | Phaser.Types.Loader.FileTypes.MultiScriptFileConfig | Phaser.Types.Loader.FileTypes.MultiScriptFileConfig[], url?: string[], extension?: string, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject): this;$/;"	m
scrollFactorX	pilas-engine/declaraciones/phaser.d.ts	/^                scrollFactorX: number;$/;"	m
scrollFactorX	pilas-engine/declaraciones/phaser.d.ts	/^            scrollFactorX: number;$/;"	m
scrollFactorY	pilas-engine/declaraciones/phaser.d.ts	/^                scrollFactorY: number;$/;"	m
scrollFactorY	pilas-engine/declaraciones/phaser.d.ts	/^            scrollFactorY: number;$/;"	m
scrollX	pilas-engine/declaraciones/phaser.d.ts	/^                    scrollX: number;$/;"	m
scrollX	pilas-engine/declaraciones/phaser.d.ts	/^                scrollX: number;$/;"	m
scrollX	pilas-engine/declaraciones/phaser.d.ts	/^            scrollX: number;$/;"	m
scrollY	pilas-engine/declaraciones/phaser.d.ts	/^                    scrollY: number;$/;"	m
scrollY	pilas-engine/declaraciones/phaser.d.ts	/^                scrollY: number;$/;"	m
scrollY	pilas-engine/declaraciones/phaser.d.ts	/^            scrollY: number;$/;"	m
se_pulsa_tecla	pilas-engine/control.ts	/^  private se_pulsa_tecla(nombre, simulacion = undefined) {$/;"	m
seamless	pilas-engine/declaraciones/phaser.d.ts	/^                    seamless: boolean;$/;"	m
seed	pilas-engine/declaraciones/phaser.d.ts	/^            readonly seed: string[];$/;"	m
seek	pilas-engine/declaraciones/phaser.d.ts	/^            seek(toPosition: number, delta?: number): this;$/;"	m
seek	pilas-engine/declaraciones/phaser.d.ts	/^            seek: number;$/;"	m
seekTo	pilas-engine/declaraciones/phaser.d.ts	/^            seekTo(value: number): this;$/;"	m
seguir_al_actor	pilas-engine/camara.ts	/^  seguir_al_actor(actor: Actor, suavidad: number = 10, ignorar_limites: boolean = false) {$/;"	m
seleccion	pilas-engine/modos/modo_pausa.ts	/^  seleccion: any; \/\/ referencia al actor o null si lo que est√° seleccionado es la escena completa.$/;"	m
selecciona_actor_o_escena_en_modo_pausa	pilas-engine/modos/modo.ts	/^  selecciona_actor_o_escena_en_modo_pausa(actor: any) {}$/;"	m
selecciona_actor_o_escena_en_modo_pausa	pilas-engine/modos/modo_pausa.ts	/^  selecciona_actor_o_escena_en_modo_pausa(actor: any) {$/;"	m
seleccionado	pilas-engine/modos/actor_en_modo_edicion.ts	/^  seleccionado: bool;$/;"	m
selfAdd	pilas-engine/libs/spriter.ts	/^  public selfAdd(other: Vector): Vector {$/;"	m
selfAdd	pilas-engine/libs/spriter.ts	/^  selfAdd(other: Angle): Angle {$/;"	m
selfIdentity	pilas-engine/libs/spriter.ts	/^  public selfIdentity(): Scale {$/;"	m
selfIdentity	pilas-engine/libs/spriter.ts	/^  selfIdentity(): Angle {$/;"	m
selfTween	pilas-engine/libs/spriter.ts	/^  public selfTween(other: Vector, pct: number): Vector {$/;"	m
selfTween	pilas-engine/libs/spriter.ts	/^  selfTween(other: Angle, pct: number, spin: number): Angle {$/;"	m
sendToBack	pilas-engine/declaraciones/phaser.d.ts	/^            sendToBack(child: Phaser.GameObjects.GameObject): this;$/;"	m
sendToBack	pilas-engine/declaraciones/phaser.d.ts	/^            sendToBack(child: T): T;$/;"	m
sendToBack	pilas-engine/declaraciones/phaser.d.ts	/^            sendToBack(key: string | Phaser.Scene): this;$/;"	m
sendToBack	pilas-engine/declaraciones/phaser.d.ts	/^            sendToBack(key?: string | Phaser.Scene): this;$/;"	m
sensor	pilas-engine/actores/-actor-base.ts	/^  get sensor() {$/;"	m
sensor	pilas-engine/actores/-actor-base.ts	/^  set sensor(valor: boolean) {$/;"	m
sensores	pilas-engine/actores/-actor-base.ts	/^      sensores: sensores_serializados,$/;"	m
sensores	pilas-engine/actores/-actor-base.ts	/^  sensores: any[];$/;"	m
sensores	pilas-engine/actores/conejo.ts	/^    sensores: [$/;"	m
separar_imagen	pilas-engine/modos/actor_en_modo_edicion.ts	/^  private separar_imagen(imagen: string) {$/;"	m
separate	pilas-engine/declaraciones/phaser.d.ts	/^                separate(body1: Phaser.Physics.Arcade.Body, body2: Phaser.Physics.Arcade.Body, processCallback?: ArcadePhysicsCallback, callbackContext?: any, overlapOnly?: boolean, intersects?: boolean): boolean;$/;"	m
separateCircle	pilas-engine/declaraciones/phaser.d.ts	/^                separateCircle(body1: Phaser.Physics.Arcade.Body, body2: Phaser.Physics.Arcade.Body, overlapOnly?: boolean, bias?: number): boolean;$/;"	m
separation	pilas-engine/declaraciones/phaser.d.ts	/^                    separation: number;$/;"	m
sepia	pilas-engine/declaraciones/phaser.d.ts	/^            sepia(multiply?: boolean): this;$/;"	m
serializar	pilas-engine/actores/-actor-base.ts	/^  serializar() {$/;"	m
serializar	pilas-engine/escenas/-escena-base.ts	/^  serializar() {$/;"	m
serializar_escena	pilas-engine/historia.ts	/^  serializar_escena(escena_actual: any, instrumentacion: any, instrumentacion_de_bloques: any) {$/;"	m
set	pilas-engine/declaraciones/phaser.d.ts	/^                set(pipeline: Phaser.Renderer.WebGL.WebGLPipeline, gameObject?: Phaser.GameObjects.GameObject, currentShader?: Phaser.Renderer.WebGL.WebGLShader): Phaser.Renderer.WebGL.WebGLPipeline;$/;"	m
set	pilas-engine/declaraciones/phaser.d.ts	/^            set(key: K, value: V): Phaser.Structs.Map<K, V>;$/;"	m
set	pilas-engine/declaraciones/phaser.d.ts	/^            set(key: string | object, data: any): this;$/;"	m
set	pilas-engine/declaraciones/phaser.d.ts	/^            set(red?: number, green?: number, blue?: number): this;$/;"	m
set	pilas-engine/declaraciones/phaser.d.ts	/^            set(src: Phaser.Math.Matrix3): Phaser.Math.Matrix3;$/;"	m
set	pilas-engine/declaraciones/phaser.d.ts	/^            set(src: Phaser.Math.Matrix4): this;$/;"	m
set	pilas-engine/declaraciones/phaser.d.ts	/^            set(value: T): Phaser.Structs.Set<T>;$/;"	m
set	pilas-engine/declaraciones/phaser.d.ts	/^            set(value: number[]): this;$/;"	m
set	pilas-engine/declaraciones/phaser.d.ts	/^            set(x: number | object, y: number, z: number, w: number): Phaser.Math.Vector4;$/;"	m
set	pilas-engine/declaraciones/phaser.d.ts	/^            set(x: number | object, y?: number, z?: number): Phaser.Math.Vector3;$/;"	m
set	pilas-engine/declaraciones/phaser.d.ts	/^            set(x: number, y?: number): Phaser.Math.Vector2;$/;"	m
set	pilas-engine/declaraciones/phaser.d.ts	/^            set(x?: number | object, y?: number, z?: number, w?: number, update?: boolean): Phaser.Math.Quaternion;$/;"	m
set1f	pilas-engine/declaraciones/phaser.d.ts	/^                set1f(name: string, x: number): this;$/;"	m
set1f	pilas-engine/declaraciones/phaser.d.ts	/^                set1f(name: string, x: number, shader?: Phaser.Renderer.WebGL.WebGLShader): this;$/;"	m
set1fv	pilas-engine/declaraciones/phaser.d.ts	/^                set1fv(name: string, arr: number[] | Float32Array): this;$/;"	m
set1fv	pilas-engine/declaraciones/phaser.d.ts	/^                set1fv(name: string, arr: number[] | Float32Array, shader?: Phaser.Renderer.WebGL.WebGLShader): this;$/;"	m
set1i	pilas-engine/declaraciones/phaser.d.ts	/^                set1i(name: string, x: number): this;$/;"	m
set1i	pilas-engine/declaraciones/phaser.d.ts	/^                set1i(name: string, x: number, shader?: Phaser.Renderer.WebGL.WebGLShader): this;$/;"	m
set1iv	pilas-engine/declaraciones/phaser.d.ts	/^                set1iv(name: string, arr: number[] | Float32Array): this;$/;"	m
set1iv	pilas-engine/declaraciones/phaser.d.ts	/^                set1iv(name: string, arr: number[] | Float32Array, shader?: Phaser.Renderer.WebGL.WebGLShader): this;$/;"	m
set2f	pilas-engine/declaraciones/phaser.d.ts	/^                set2f(name: string, x: number, y: number): this;$/;"	m
set2f	pilas-engine/declaraciones/phaser.d.ts	/^                set2f(name: string, x: number, y: number, shader?: Phaser.Renderer.WebGL.WebGLShader): this;$/;"	m
set2fv	pilas-engine/declaraciones/phaser.d.ts	/^                set2fv(name: string, arr: number[] | Float32Array): this;$/;"	m
set2fv	pilas-engine/declaraciones/phaser.d.ts	/^                set2fv(name: string, arr: number[] | Float32Array, shader?: Phaser.Renderer.WebGL.WebGLShader): this;$/;"	m
set2i	pilas-engine/declaraciones/phaser.d.ts	/^                set2i(name: string, x: number, y: number): this;$/;"	m
set2i	pilas-engine/declaraciones/phaser.d.ts	/^                set2i(name: string, x: number, y: number, shader?: Phaser.Renderer.WebGL.WebGLShader): this;$/;"	m
set2iv	pilas-engine/declaraciones/phaser.d.ts	/^                set2iv(name: string, arr: number[] | Float32Array): this;$/;"	m
set2iv	pilas-engine/declaraciones/phaser.d.ts	/^                set2iv(name: string, arr: number[] | Float32Array, shader?: Phaser.Renderer.WebGL.WebGLShader): this;$/;"	m
set3f	pilas-engine/declaraciones/phaser.d.ts	/^                set3f(name: string, x: number, y: number, z: number): this;$/;"	m
set3f	pilas-engine/declaraciones/phaser.d.ts	/^                set3f(name: string, x: number, y: number, z: number, shader?: Phaser.Renderer.WebGL.WebGLShader): this;$/;"	m
set3fv	pilas-engine/declaraciones/phaser.d.ts	/^                set3fv(name: string, arr: number[] | Float32Array): this;$/;"	m
set3fv	pilas-engine/declaraciones/phaser.d.ts	/^                set3fv(name: string, arr: number[] | Float32Array, shader?: Phaser.Renderer.WebGL.WebGLShader): this;$/;"	m
set3i	pilas-engine/declaraciones/phaser.d.ts	/^                set3i(name: string, x: number, y: number, z: number): this;$/;"	m
set3i	pilas-engine/declaraciones/phaser.d.ts	/^                set3i(name: string, x: number, y: number, z: number, shader?: Phaser.Renderer.WebGL.WebGLShader): this;$/;"	m
set3iv	pilas-engine/declaraciones/phaser.d.ts	/^                set3iv(name: string, arr: number[] | Float32Array): this;$/;"	m
set3iv	pilas-engine/declaraciones/phaser.d.ts	/^                set3iv(name: string, arr: number[] | Float32Array, shader?: Phaser.Renderer.WebGL.WebGLShader): this;$/;"	m
set4f	pilas-engine/declaraciones/phaser.d.ts	/^                set4f(name: string, x: number, y: number, z: number, w: number): this;$/;"	m
set4f	pilas-engine/declaraciones/phaser.d.ts	/^                set4f(name: string, x: number, y: number, z: number, w: number, shader?: Phaser.Renderer.WebGL.WebGLShader): this;$/;"	m
set4fv	pilas-engine/declaraciones/phaser.d.ts	/^                set4fv(name: string, arr: number[] | Float32Array): this;$/;"	m
set4fv	pilas-engine/declaraciones/phaser.d.ts	/^                set4fv(name: string, arr: number[] | Float32Array, shader?: Phaser.Renderer.WebGL.WebGLShader): this;$/;"	m
set4i	pilas-engine/declaraciones/phaser.d.ts	/^                set4i(name: string, x: number, y: number, z: number, w: number): this;$/;"	m
set4i	pilas-engine/declaraciones/phaser.d.ts	/^                set4i(name: string, x: number, y: number, z: number, w: number, shader?: Phaser.Renderer.WebGL.WebGLShader): this;$/;"	m
set4iv	pilas-engine/declaraciones/phaser.d.ts	/^                set4iv(name: string, arr: number[] | Float32Array): this;$/;"	m
set4iv	pilas-engine/declaraciones/phaser.d.ts	/^                set4iv(name: string, arr: number[] | Float32Array, shader?: Phaser.Renderer.WebGL.WebGLShader): this;$/;"	m
setAcceleration	pilas-engine/declaraciones/phaser.d.ts	/^                    setAcceleration(x: number, y?: number): this;$/;"	m
setAcceleration	pilas-engine/declaraciones/phaser.d.ts	/^                setAcceleration(x: number, y?: number): Phaser.Physics.Arcade.Body;$/;"	m
setAcceleration	pilas-engine/declaraciones/phaser.d.ts	/^                setAcceleration(x: number, y?: number): this;$/;"	m
setAccelerationX	pilas-engine/declaraciones/phaser.d.ts	/^                    setAccelerationX(value: number): this;$/;"	m
setAccelerationX	pilas-engine/declaraciones/phaser.d.ts	/^                    setAccelerationX: number;$/;"	m
setAccelerationX	pilas-engine/declaraciones/phaser.d.ts	/^                setAccelerationX(value: number): Phaser.Physics.Arcade.Body;$/;"	m
setAccelerationX	pilas-engine/declaraciones/phaser.d.ts	/^                setAccelerationX(value: number): this;$/;"	m
setAccelerationY	pilas-engine/declaraciones/phaser.d.ts	/^                    setAccelerationY(value: number): this;$/;"	m
setAccelerationY	pilas-engine/declaraciones/phaser.d.ts	/^                    setAccelerationY: number;$/;"	m
setAccelerationY	pilas-engine/declaraciones/phaser.d.ts	/^                setAccelerationY(value: number): Phaser.Physics.Arcade.Body;$/;"	m
setAccelerationY	pilas-engine/declaraciones/phaser.d.ts	/^                setAccelerationY(value: number): this;$/;"	m
setActive	pilas-engine/declaraciones/phaser.d.ts	/^            setActive(value: boolean): this;$/;"	m
setActive	pilas-engine/declaraciones/phaser.d.ts	/^            setActive(value: boolean, data?: object): Phaser.Scenes.Systems;$/;"	m
setActive	pilas-engine/declaraciones/phaser.d.ts	/^            setActive(value: boolean, key?: string | Phaser.Scene, data?: object): this;$/;"	m
setAlign	pilas-engine/declaraciones/phaser.d.ts	/^            setAlign(align?: string): Phaser.GameObjects.Text;$/;"	m
setAlign	pilas-engine/declaraciones/phaser.d.ts	/^            setAlign(align?: string): this;$/;"	m
setAll	pilas-engine/declaraciones/phaser.d.ts	/^            setAll(property: string, value: T, startIndex?: number, endIndex?: number): void;$/;"	m
setAll	pilas-engine/declaraciones/phaser.d.ts	/^            setAll(property: string, value: any, startIndex?: number, endIndex?: number): this;$/;"	m
setAllowDrag	pilas-engine/declaraciones/phaser.d.ts	/^                    setAllowDrag: boolean;$/;"	m
setAllowDrag	pilas-engine/declaraciones/phaser.d.ts	/^                setAllowDrag(value?: boolean): Phaser.Physics.Arcade.Body;$/;"	m
setAllowGravity	pilas-engine/declaraciones/phaser.d.ts	/^                    setAllowGravity: boolean;$/;"	m
setAllowGravity	pilas-engine/declaraciones/phaser.d.ts	/^                setAllowGravity(value?: boolean): Phaser.Physics.Arcade.Body;$/;"	m
setAllowRotation	pilas-engine/declaraciones/phaser.d.ts	/^                    setAllowRotation: boolean;$/;"	m
setAllowRotation	pilas-engine/declaraciones/phaser.d.ts	/^                setAllowRotation(value?: boolean): Phaser.Physics.Arcade.Body;$/;"	m
setAlpha	pilas-engine/declaraciones/phaser.d.ts	/^                setAlpha(alpha: number): this;$/;"	m
setAlpha	pilas-engine/declaraciones/phaser.d.ts	/^                setAlpha(topLeft?: number, topRight?: number, bottomLeft?: number, bottomRight?: number): this;$/;"	m
setAlpha	pilas-engine/declaraciones/phaser.d.ts	/^                setAlpha(value: Phaser.Types.GameObjects.Particles.EmitterOpOnEmitType | Phaser.Types.GameObjects.Particles.EmitterOpOnUpdateType): this;$/;"	m
setAlpha	pilas-engine/declaraciones/phaser.d.ts	/^                setAlpha(value?: number): this;$/;"	m
setAlpha	pilas-engine/declaraciones/phaser.d.ts	/^            setAlpha(topLeft?: number, topRight?: number, bottomLeft?: number, bottomRight?: number): this;$/;"	m
setAlpha	pilas-engine/declaraciones/phaser.d.ts	/^            setAlpha(value: number): this;$/;"	m
setAlpha	pilas-engine/declaraciones/phaser.d.ts	/^            setAlpha(value: number, step?: number): this;$/;"	m
setAlpha	pilas-engine/declaraciones/phaser.d.ts	/^            setAlpha(value?: number): this;$/;"	m
setAlphas	pilas-engine/declaraciones/phaser.d.ts	/^            setAlphas(alphas?: number | number[], bottomAlpha?: number): this;$/;"	m
setAltFillStyle	pilas-engine/declaraciones/phaser.d.ts	/^            setAltFillStyle(fillColor?: number, fillAlpha?: number): this;$/;"	m
setAmbientColor	pilas-engine/declaraciones/phaser.d.ts	/^            setAmbientColor(rgb: number): this;$/;"	m
setAngle	pilas-engine/declaraciones/phaser.d.ts	/^                    setAngle(degrees?: number): this;$/;"	m
setAngle	pilas-engine/declaraciones/phaser.d.ts	/^                setAngle(degrees?: number): this;$/;"	m
setAngle	pilas-engine/declaraciones/phaser.d.ts	/^                setAngle(value: Phaser.Types.GameObjects.Particles.EmitterOpOnEmitType): this;$/;"	m
setAngle	pilas-engine/declaraciones/phaser.d.ts	/^                setAngle(value?: number): this;$/;"	m
setAngle	pilas-engine/declaraciones/phaser.d.ts	/^            setAngle(angle: number): Phaser.Math.Vector2;$/;"	m
setAngle	pilas-engine/declaraciones/phaser.d.ts	/^            setAngle(degrees?: number): this;$/;"	m
setAngularAcceleration	pilas-engine/declaraciones/phaser.d.ts	/^                    setAngularAcceleration(value: number): this;$/;"	m
setAngularAcceleration	pilas-engine/declaraciones/phaser.d.ts	/^                    setAngularAcceleration: number;$/;"	m
setAngularAcceleration	pilas-engine/declaraciones/phaser.d.ts	/^                setAngularAcceleration(value: number): Phaser.Physics.Arcade.Body;$/;"	m
setAngularAcceleration	pilas-engine/declaraciones/phaser.d.ts	/^                setAngularAcceleration(value: number): this;$/;"	m
setAngularDrag	pilas-engine/declaraciones/phaser.d.ts	/^                    setAngularDrag(value: number): this;$/;"	m
setAngularDrag	pilas-engine/declaraciones/phaser.d.ts	/^                    setAngularDrag: number;$/;"	m
setAngularDrag	pilas-engine/declaraciones/phaser.d.ts	/^                setAngularDrag(value: number): Phaser.Physics.Arcade.Body;$/;"	m
setAngularDrag	pilas-engine/declaraciones/phaser.d.ts	/^                setAngularDrag(value: number): this;$/;"	m
setAngularVelocity	pilas-engine/declaraciones/phaser.d.ts	/^                    setAngularVelocity(value: number): Phaser.GameObjects.GameObject;$/;"	m
setAngularVelocity	pilas-engine/declaraciones/phaser.d.ts	/^                    setAngularVelocity(value: number): this;$/;"	m
setAngularVelocity	pilas-engine/declaraciones/phaser.d.ts	/^                    setAngularVelocity: number;$/;"	m
setAngularVelocity	pilas-engine/declaraciones/phaser.d.ts	/^                setAngularVelocity(bodies: Phaser.Types.Physics.Matter.MatterBody | Phaser.Types.Physics.Matter.MatterBody[], value: number): this;$/;"	m
setAngularVelocity	pilas-engine/declaraciones/phaser.d.ts	/^                setAngularVelocity(value: number): Phaser.GameObjects.GameObject;$/;"	m
setAngularVelocity	pilas-engine/declaraciones/phaser.d.ts	/^                setAngularVelocity(value: number): Phaser.Physics.Arcade.Body;$/;"	m
setAngularVelocity	pilas-engine/declaraciones/phaser.d.ts	/^                setAngularVelocity(value: number): this;$/;"	m
setAnim	pilas-engine/libs/spriter.ts	/^  setAnim(anim_key: string): void {$/;"	m
setAspectMode	pilas-engine/declaraciones/phaser.d.ts	/^            setAspectMode(value?: number): this;$/;"	m
setAspectRatio	pilas-engine/declaraciones/phaser.d.ts	/^            setAspectRatio(ratio: number): this;$/;"	m
setAttribPointers	pilas-engine/declaraciones/phaser.d.ts	/^                setAttribPointers(reset?: boolean): this;$/;"	m
setAudioContext	pilas-engine/declaraciones/phaser.d.ts	/^            setAudioContext(context: AudioContext): this;$/;"	m
setAutoResize	pilas-engine/declaraciones/phaser.d.ts	/^                setAutoResize(autoResize: boolean): this;$/;"	m
setAwake	pilas-engine/declaraciones/phaser.d.ts	/^                    setAwake(): this;$/;"	m
setAwake	pilas-engine/declaraciones/phaser.d.ts	/^                setAwake(): this;$/;"	m
setAxes	pilas-engine/declaraciones/phaser.d.ts	/^            setAxes(view: Phaser.Math.Vector3, right: Phaser.Math.Vector3, up: Phaser.Math.Vector3): Phaser.Math.Quaternion;$/;"	m
setAxisAngle	pilas-engine/declaraciones/phaser.d.ts	/^            setAxisAngle(axis: Phaser.Math.Vector3, rad: number): Phaser.Math.Quaternion;$/;"	m
setAxisThreshold	pilas-engine/declaraciones/phaser.d.ts	/^                setAxisThreshold(value: number): void;$/;"	m
setBackgroundColor	pilas-engine/declaraciones/phaser.d.ts	/^                setBackgroundColor(color?: string | number | Phaser.Types.Display.InputColorObject): this;$/;"	m
setBackgroundColor	pilas-engine/declaraciones/phaser.d.ts	/^            setBackgroundColor(color: string): Phaser.GameObjects.Text;$/;"	m
setBackgroundColor	pilas-engine/declaraciones/phaser.d.ts	/^            setBackgroundColor(color: string): this;$/;"	m
setBaseTileSize	pilas-engine/declaraciones/phaser.d.ts	/^            setBaseTileSize(tileWidth: number, tileHeight: number): this;$/;"	m
setBaseURL	pilas-engine/declaraciones/phaser.d.ts	/^            setBaseURL(url?: string): this;$/;"	m
setBicubic	pilas-engine/declaraciones/phaser.d.ts	/^                function setBicubic(canvas: HTMLCanvasElement): HTMLCanvasElement;$/;"	f
setBitmap	pilas-engine/declaraciones/phaser.d.ts	/^                setBitmap(renderable: Phaser.GameObjects.GameObject): void;$/;"	m
setBlendMode	pilas-engine/declaraciones/phaser.d.ts	/^                setBlendMode(blendMode: string): this;$/;"	m
setBlendMode	pilas-engine/declaraciones/phaser.d.ts	/^                setBlendMode(blendModeId: number, force?: boolean): boolean;$/;"	m
setBlendMode	pilas-engine/declaraciones/phaser.d.ts	/^                setBlendMode(value: string | Phaser.BlendModes): this;$/;"	m
setBlendMode	pilas-engine/declaraciones/phaser.d.ts	/^            setBlendMode(value: number): this;$/;"	m
setBlendMode	pilas-engine/declaraciones/phaser.d.ts	/^            setBlendMode(value: string | Phaser.BlendModes): this;$/;"	m
setBody	pilas-engine/declaraciones/phaser.d.ts	/^                    setBody(config: string | Phaser.Types.Physics.Matter.MatterSetBodyConfig, options?: Phaser.Types.Physics.Matter.MatterBodyConfig): Phaser.GameObjects.GameObject;$/;"	m
setBody	pilas-engine/declaraciones/phaser.d.ts	/^                setBody(body: MatterJS.BodyType, addToWorld?: boolean): Phaser.Physics.Matter.TileBody;$/;"	m
setBody	pilas-engine/declaraciones/phaser.d.ts	/^                setBody(config: string | Phaser.Types.Physics.Matter.MatterSetBodyConfig, options?: Phaser.Types.Physics.Matter.MatterBodyConfig): Phaser.GameObjects.GameObject;$/;"	m
setBodyRenderStyle	pilas-engine/declaraciones/phaser.d.ts	/^                setBodyRenderStyle(body: MatterJS.BodyType, lineColor?: number, lineOpacity?: number, lineThickness?: number, fillColor?: number, fillOpacity?: number): this;$/;"	m
setBodySize	pilas-engine/declaraciones/phaser.d.ts	/^                    setBodySize(width: number, height: number, center?: boolean): this;$/;"	m
setBodySize	pilas-engine/declaraciones/phaser.d.ts	/^                setBodySize(width: number, height: number, center?: boolean): this;$/;"	m
setBounce	pilas-engine/declaraciones/phaser.d.ts	/^                    setBounce(value: number): Phaser.GameObjects.GameObject;$/;"	m
setBounce	pilas-engine/declaraciones/phaser.d.ts	/^                    setBounce(x: number, y?: number): this;$/;"	m
setBounce	pilas-engine/declaraciones/phaser.d.ts	/^                setBounce(value: number): Phaser.GameObjects.GameObject;$/;"	m
setBounce	pilas-engine/declaraciones/phaser.d.ts	/^                setBounce(x: number, y?: number): Phaser.Physics.Arcade.Body;$/;"	m
setBounce	pilas-engine/declaraciones/phaser.d.ts	/^                setBounce(x: number, y?: number): this;$/;"	m
setBounceX	pilas-engine/declaraciones/phaser.d.ts	/^                    setBounceX(value: number): this;$/;"	m
setBounceX	pilas-engine/declaraciones/phaser.d.ts	/^                    setBounceX: number;$/;"	m
setBounceX	pilas-engine/declaraciones/phaser.d.ts	/^                setBounceX(value: number): Phaser.Physics.Arcade.Body;$/;"	m
setBounceX	pilas-engine/declaraciones/phaser.d.ts	/^                setBounceX(value: number): this;$/;"	m
setBounceY	pilas-engine/declaraciones/phaser.d.ts	/^                    setBounceY(value: number): this;$/;"	m
setBounceY	pilas-engine/declaraciones/phaser.d.ts	/^                    setBounceY: number;$/;"	m
setBounceY	pilas-engine/declaraciones/phaser.d.ts	/^                setBounceY(value: number): Phaser.Physics.Arcade.Body;$/;"	m
setBounceY	pilas-engine/declaraciones/phaser.d.ts	/^                setBounceY(value: number): this;$/;"	m
setBounds	pilas-engine/declaraciones/phaser.d.ts	/^                setBounds(x: number | Phaser.Types.GameObjects.Particles.ParticleEmitterBounds | Phaser.Types.GameObjects.Particles.ParticleEmitterBoundsAlt, y: number, width: number, height: number): this;$/;"	m
setBounds	pilas-engine/declaraciones/phaser.d.ts	/^                setBounds(x: number, y: number, width: number, height: number, centerOn?: boolean): this;$/;"	m
setBounds	pilas-engine/declaraciones/phaser.d.ts	/^                setBounds(x: number, y: number, width: number, height: number, checkLeft?: boolean, checkRight?: boolean, checkUp?: boolean, checkDown?: boolean): Phaser.Physics.Arcade.World;$/;"	m
setBounds	pilas-engine/declaraciones/phaser.d.ts	/^                setBounds(x?: number, y?: number, width?: number, height?: number, thickness?: number, left?: boolean, right?: boolean, top?: boolean, bottom?: boolean): Phaser.Physics.Matter.World;$/;"	m
setBoundsCollision	pilas-engine/declaraciones/phaser.d.ts	/^                setBoundsCollision(left?: boolean, right?: boolean, up?: boolean, down?: boolean): Phaser.Physics.Arcade.World;$/;"	m
setBoundsRectangle	pilas-engine/declaraciones/phaser.d.ts	/^                    setBoundsRectangle: Phaser.Geom.Rectangle;$/;"	m
setBoundsRectangle	pilas-engine/declaraciones/phaser.d.ts	/^                setBoundsRectangle(bounds?: Phaser.Geom.Rectangle): this;$/;"	m
setCORS	pilas-engine/declaraciones/phaser.d.ts	/^            setCORS(crossOrigin?: string): this;$/;"	m
setCSS	pilas-engine/declaraciones/phaser.d.ts	/^            setCSS(element: HTMLElement): void;$/;"	m
setCallback	pilas-engine/declaraciones/phaser.d.ts	/^            setCallback(type: string, callback: Function, params?: any[], scope?: any): this;$/;"	m
setCallback	pilas-engine/declaraciones/phaser.d.ts	/^            setCallback(type: string, callback: Function, params?: any[], scope?: object): this;$/;"	m
setCamera	pilas-engine/declaraciones/phaser.d.ts	/^                setCamera(camera: Phaser.Cameras.Scene2D.Camera): this;$/;"	m
setCenterAlign	pilas-engine/declaraciones/phaser.d.ts	/^            setCenterAlign(): this;$/;"	m
setChannel1	pilas-engine/declaraciones/phaser.d.ts	/^            setChannel1(textureKey: string, textureData?: any): this;$/;"	m
setChannel2	pilas-engine/declaraciones/phaser.d.ts	/^            setChannel2(textureKey: string, textureData?: any): this;$/;"	m
setChannel3	pilas-engine/declaraciones/phaser.d.ts	/^            setChannel3(textureKey: string, textureData?: any): this;$/;"	m
setCharacterTint	pilas-engine/declaraciones/phaser.d.ts	/^            setCharacterTint(start?: number, length?: number, tintFill?: boolean, topLeft?: number, topRight?: number, bottomLeft?: number, bottomRight?: number): this;$/;"	m
setCircle	pilas-engine/declaraciones/phaser.d.ts	/^                    setCircle(radius: number, offsetX?: number, offsetY?: number): this;$/;"	m
setCircle	pilas-engine/declaraciones/phaser.d.ts	/^                    setCircle(radius: number, options?: Phaser.Types.Physics.Matter.MatterBodyConfig): Phaser.GameObjects.GameObject;$/;"	m
setCircle	pilas-engine/declaraciones/phaser.d.ts	/^                setCircle(radius: number, offsetX?: number, offsetY?: number): Phaser.Physics.Arcade.Body;$/;"	m
setCircle	pilas-engine/declaraciones/phaser.d.ts	/^                setCircle(radius: number, offsetX?: number, offsetY?: number): Phaser.Physics.Arcade.StaticBody;$/;"	m
setCircle	pilas-engine/declaraciones/phaser.d.ts	/^                setCircle(radius: number, offsetX?: number, offsetY?: number): this;$/;"	m
setCircle	pilas-engine/declaraciones/phaser.d.ts	/^                setCircle(radius: number, options?: Phaser.Types.Physics.Matter.MatterBodyConfig): Phaser.GameObjects.GameObject;$/;"	m
setCircleDropZone	pilas-engine/declaraciones/phaser.d.ts	/^            setCircleDropZone(radius: number): this;$/;"	m
setClassName	pilas-engine/declaraciones/phaser.d.ts	/^            setClassName(className: string): this;$/;"	m
setClockwise	pilas-engine/declaraciones/phaser.d.ts	/^            setClockwise(value: boolean): this;$/;"	m
setClosePath	pilas-engine/declaraciones/phaser.d.ts	/^            setClosePath(value: boolean): this;$/;"	m
setCollideWorldBounds	pilas-engine/declaraciones/phaser.d.ts	/^                    setCollideWorldBounds(value?: boolean, bounceX?: number, bounceY?: number): this;$/;"	m
setCollideWorldBounds	pilas-engine/declaraciones/phaser.d.ts	/^                    setCollideWorldBounds: boolean;$/;"	m
setCollideWorldBounds	pilas-engine/declaraciones/phaser.d.ts	/^                setCollideWorldBounds(value?: boolean, bounceX?: number, bounceY?: number): this;$/;"	m
setCollideWorldBounds	pilas-engine/declaraciones/phaser.d.ts	/^                setCollideWorldBounds(value?: boolean, bounceX?: number, bounceY?: number, onWorldBounds?: boolean): Phaser.Physics.Arcade.Body;$/;"	m
setCollidesWith	pilas-engine/declaraciones/phaser.d.ts	/^                    setCollidesWith(categories: number | number[]): Phaser.GameObjects.GameObject;$/;"	m
setCollidesWith	pilas-engine/declaraciones/phaser.d.ts	/^                setCollidesWith(bodies: Phaser.Types.Physics.Matter.MatterBody[], categories: number | number[]): this;$/;"	m
setCollidesWith	pilas-engine/declaraciones/phaser.d.ts	/^                setCollidesWith(categories: number | number[]): Phaser.GameObjects.GameObject;$/;"	m
setCollision	pilas-engine/declaraciones/phaser.d.ts	/^            setCollision(indexes: number | any[], collides?: boolean, recalculateFaces?: boolean, layer?: string | number | Phaser.Tilemaps.TilemapLayer, updateLayer?: boolean): Phaser.Tilemaps.Tilemap;$/;"	m
setCollision	pilas-engine/declaraciones/phaser.d.ts	/^            setCollision(indexes: number | any[], collides?: boolean, recalculateFaces?: boolean, updateLayer?: boolean): this;$/;"	m
setCollision	pilas-engine/declaraciones/phaser.d.ts	/^            setCollision(left: boolean, right?: boolean, up?: boolean, down?: boolean, recalculateFaces?: boolean): this;$/;"	m
setCollisionBetween	pilas-engine/declaraciones/phaser.d.ts	/^            setCollisionBetween(start: number, stop: number, collides?: boolean, recalculateFaces?: boolean): this;$/;"	m
setCollisionBetween	pilas-engine/declaraciones/phaser.d.ts	/^            setCollisionBetween(start: number, stop: number, collides?: boolean, recalculateFaces?: boolean, layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Tilemaps.Tilemap;$/;"	m
setCollisionByExclusion	pilas-engine/declaraciones/phaser.d.ts	/^            setCollisionByExclusion(indexes: number[], collides?: boolean, recalculateFaces?: boolean): this;$/;"	m
setCollisionByExclusion	pilas-engine/declaraciones/phaser.d.ts	/^            setCollisionByExclusion(indexes: number[], collides?: boolean, recalculateFaces?: boolean, layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Tilemaps.Tilemap;$/;"	m
setCollisionByProperty	pilas-engine/declaraciones/phaser.d.ts	/^            setCollisionByProperty(properties: object, collides?: boolean, recalculateFaces?: boolean): this;$/;"	m
setCollisionByProperty	pilas-engine/declaraciones/phaser.d.ts	/^            setCollisionByProperty(properties: object, collides?: boolean, recalculateFaces?: boolean, layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Tilemaps.Tilemap;$/;"	m
setCollisionCallback	pilas-engine/declaraciones/phaser.d.ts	/^            setCollisionCallback(callback: Function, context: object): this;$/;"	m
setCollisionCategory	pilas-engine/declaraciones/phaser.d.ts	/^                    setCollisionCategory(value: number): Phaser.GameObjects.GameObject;$/;"	m
setCollisionCategory	pilas-engine/declaraciones/phaser.d.ts	/^                setCollisionCategory(bodies: Phaser.Types.Physics.Matter.MatterBody[], value: number): this;$/;"	m
setCollisionCategory	pilas-engine/declaraciones/phaser.d.ts	/^                setCollisionCategory(value: number): Phaser.GameObjects.GameObject;$/;"	m
setCollisionFromCollisionGroup	pilas-engine/declaraciones/phaser.d.ts	/^            setCollisionFromCollisionGroup(collides?: boolean, recalculateFaces?: boolean): this;$/;"	m
setCollisionFromCollisionGroup	pilas-engine/declaraciones/phaser.d.ts	/^            setCollisionFromCollisionGroup(collides?: boolean, recalculateFaces?: boolean, layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Tilemaps.Tilemap;$/;"	m
setCollisionGroup	pilas-engine/declaraciones/phaser.d.ts	/^                    setCollisionGroup(value: number): Phaser.GameObjects.GameObject;$/;"	m
setCollisionGroup	pilas-engine/declaraciones/phaser.d.ts	/^                setCollisionGroup(bodies: Phaser.Types.Physics.Matter.MatterBody[], value: number): this;$/;"	m
setCollisionGroup	pilas-engine/declaraciones/phaser.d.ts	/^                setCollisionGroup(value: number): Phaser.GameObjects.GameObject;$/;"	m
setColor	pilas-engine/declaraciones/phaser.d.ts	/^            setColor(color: string): Phaser.GameObjects.Text;$/;"	m
setColor	pilas-engine/declaraciones/phaser.d.ts	/^            setColor(color: string): this;$/;"	m
setColor	pilas-engine/declaraciones/phaser.d.ts	/^            setColor(rgb: number): this;$/;"	m
setColors	pilas-engine/declaraciones/phaser.d.ts	/^            setColors(colors?: number | number[]): this;$/;"	m
setCompositeRenderStyle	pilas-engine/declaraciones/phaser.d.ts	/^                setCompositeRenderStyle(composite: MatterJS.CompositeType): this;$/;"	m
setConstraintRenderStyle	pilas-engine/declaraciones/phaser.d.ts	/^                setConstraintRenderStyle(constraint: MatterJS.ConstraintType, lineColor?: number, lineOpacity?: number, lineThickness?: number, pinSize?: number, anchorColor?: number, anchorSize?: number): this;$/;"	m
setContext	pilas-engine/declaraciones/phaser.d.ts	/^                setContext(ctx?: CanvasRenderingContext2D): this;$/;"	m
setCrisp	pilas-engine/declaraciones/phaser.d.ts	/^                function setCrisp(canvas: HTMLCanvasElement): HTMLCanvasElement;$/;"	f
setCrop	pilas-engine/declaraciones/phaser.d.ts	/^                setCrop(x?: number | Phaser.Geom.Rectangle, y?: number, width?: number, height?: number): this;$/;"	m
setCrop	pilas-engine/declaraciones/phaser.d.ts	/^            setCrop(x?: number | Phaser.Geom.Rectangle, y?: number, width?: number, height?: number): this;$/;"	m
setCropUVs	pilas-engine/declaraciones/phaser.d.ts	/^            setCropUVs(crop: object, x: number, y: number, width: number, height: number, flipX: boolean, flipY: boolean): object;$/;"	m
setCullPadding	pilas-engine/declaraciones/phaser.d.ts	/^            setCullPadding(paddingX?: number, paddingY?: number): this;$/;"	m
setCurrentFrame	pilas-engine/declaraciones/phaser.d.ts	/^            setCurrentFrame(animationFrame: Phaser.Animations.AnimationFrame): Phaser.GameObjects.GameObject;$/;"	m
setCurrentTime	pilas-engine/declaraciones/phaser.d.ts	/^            setCurrentTime(value: string | number): this;$/;"	m
setDamping	pilas-engine/declaraciones/phaser.d.ts	/^                    setDamping(value: boolean): this;$/;"	m
setDamping	pilas-engine/declaraciones/phaser.d.ts	/^                setDamping(value: boolean): Phaser.Physics.Arcade.Body;$/;"	m
setDamping	pilas-engine/declaraciones/phaser.d.ts	/^                setDamping(value: boolean): this;$/;"	m
setData	pilas-engine/declaraciones/phaser.d.ts	/^            setData(key: string | object, data?: any): this;$/;"	m
setDataEnabled	pilas-engine/declaraciones/phaser.d.ts	/^            setDataEnabled(): this;$/;"	m
setDataSource	pilas-engine/declaraciones/phaser.d.ts	/^            setDataSource(data: HTMLImageElement | HTMLCanvasElement | HTMLImageElement[] | HTMLCanvasElement[]): void;$/;"	m
setDeadzone	pilas-engine/declaraciones/phaser.d.ts	/^                setDeadzone(width?: number, height?: number): this;$/;"	m
setDeathZone	pilas-engine/declaraciones/phaser.d.ts	/^                setDeathZone(zoneConfig?: Phaser.Types.GameObjects.Particles.ParticleEmitterDeathZoneConfig): this;$/;"	m
setDebug	pilas-engine/declaraciones/phaser.d.ts	/^                    setDebug(showBody: boolean, showVelocity: boolean, bodyColor: number): this;$/;"	m
setDebug	pilas-engine/declaraciones/phaser.d.ts	/^                setDebug(showBody: boolean, showVelocity: boolean, bodyColor: number): this;$/;"	m
setDebug	pilas-engine/declaraciones/phaser.d.ts	/^            setDebug(graphic?: Phaser.GameObjects.Graphics, callback?: Function): this;$/;"	m
setDebugBodyColor	pilas-engine/declaraciones/phaser.d.ts	/^                    setDebugBodyColor(value: number): this;$/;"	m
setDebugBodyColor	pilas-engine/declaraciones/phaser.d.ts	/^                setDebugBodyColor(value: number): this;$/;"	m
setDefaultCursor	pilas-engine/declaraciones/phaser.d.ts	/^            setDefaultCursor(cursor: string): this;$/;"	m
setDefaultCursor	pilas-engine/declaraciones/phaser.d.ts	/^            setDefaultCursor(cursor: string): void;$/;"	m
setDefaultStyles	pilas-engine/declaraciones/phaser.d.ts	/^            setDefaultStyles(options: Phaser.Types.GameObjects.Graphics.Styles): this;$/;"	m
setDensity	pilas-engine/declaraciones/phaser.d.ts	/^                    setDensity(value: number): Phaser.GameObjects.GameObject;$/;"	m
setDensity	pilas-engine/declaraciones/phaser.d.ts	/^                setDensity(value: number): Phaser.GameObjects.GameObject;$/;"	m
setDepth	pilas-engine/declaraciones/phaser.d.ts	/^                setDepth(value: number): this;$/;"	m
setDepth	pilas-engine/declaraciones/phaser.d.ts	/^            setDepth(value: number): this;$/;"	m
setDepth	pilas-engine/declaraciones/phaser.d.ts	/^            setDepth(value: number, step?: number): this;$/;"	m
setDetune	pilas-engine/declaraciones/phaser.d.ts	/^            setDetune(value: number): Phaser.Sound.BaseSoundManager;$/;"	m
setDetune	pilas-engine/declaraciones/phaser.d.ts	/^            setDetune(value: number): this;$/;"	m
setDirty	pilas-engine/declaraciones/phaser.d.ts	/^            setDirty(): this;$/;"	m
setDisplayCallback	pilas-engine/declaraciones/phaser.d.ts	/^            setDisplayCallback(callback: Phaser.Types.GameObjects.BitmapText.DisplayCallback): this;$/;"	m
setDisplayOrigin	pilas-engine/declaraciones/phaser.d.ts	/^                setDisplayOrigin(x?: number, y?: number): this;$/;"	m
setDisplayOrigin	pilas-engine/declaraciones/phaser.d.ts	/^            setDisplayOrigin(x?: number, y?: number): this;$/;"	m
setDisplaySize	pilas-engine/declaraciones/phaser.d.ts	/^                setDisplaySize(width: number, height: number): this;$/;"	m
setDisplaySize	pilas-engine/declaraciones/phaser.d.ts	/^            setDisplaySize(width: number, height: number): this;$/;"	m
setDrag	pilas-engine/declaraciones/phaser.d.ts	/^                    setDrag(x: number, y?: number): this;$/;"	m
setDrag	pilas-engine/declaraciones/phaser.d.ts	/^                setDrag(x: number, y?: number): Phaser.Physics.Arcade.Body;$/;"	m
setDrag	pilas-engine/declaraciones/phaser.d.ts	/^                setDrag(x: number, y?: number): this;$/;"	m
setDragState	pilas-engine/declaraciones/phaser.d.ts	/^            setDragState(pointer: Phaser.Input.Pointer, state: number): void;$/;"	m
setDragX	pilas-engine/declaraciones/phaser.d.ts	/^                    setDragX(value: number): this;$/;"	m
setDragX	pilas-engine/declaraciones/phaser.d.ts	/^                    setDragX: number;$/;"	m
setDragX	pilas-engine/declaraciones/phaser.d.ts	/^                setDragX(value: number): Phaser.Physics.Arcade.Body;$/;"	m
setDragX	pilas-engine/declaraciones/phaser.d.ts	/^                setDragX(value: number): this;$/;"	m
setDragY	pilas-engine/declaraciones/phaser.d.ts	/^                    setDragY(value: number): this;$/;"	m
setDragY	pilas-engine/declaraciones/phaser.d.ts	/^                    setDragY: number;$/;"	m
setDragY	pilas-engine/declaraciones/phaser.d.ts	/^                setDragY(value: number): Phaser.Physics.Arcade.Body;$/;"	m
setDragY	pilas-engine/declaraciones/phaser.d.ts	/^                setDragY(value: number): this;$/;"	m
setDraggable	pilas-engine/declaraciones/phaser.d.ts	/^            setDraggable(gameObjects: Phaser.GameObjects.GameObject | Phaser.GameObjects.GameObject[], value?: boolean): this;$/;"	m
setDropShadow	pilas-engine/declaraciones/phaser.d.ts	/^            setDropShadow(x?: number, y?: number, color?: number, alpha?: number): this;$/;"	m
setDropZone	pilas-engine/declaraciones/phaser.d.ts	/^            setDropZone(hitArea?: object, hitAreaCallback?: Phaser.Types.Input.HitAreaCallback): this;$/;"	m
setElement	pilas-engine/declaraciones/phaser.d.ts	/^            setElement(element: string | Element, style?: string | any, innerText?: string): this;$/;"	m
setEmitOnRepeat	pilas-engine/declaraciones/phaser.d.ts	/^                setEmitOnRepeat(value: boolean): this;$/;"	m
setEmitZone	pilas-engine/declaraciones/phaser.d.ts	/^                setEmitZone(zoneConfig?: Phaser.Types.GameObjects.Particles.ParticleEmitterEdgeZoneConfig | Phaser.Types.GameObjects.Particles.ParticleEmitterRandomZoneConfig): this;$/;"	m
setEmitterAngle	pilas-engine/declaraciones/phaser.d.ts	/^                setEmitterAngle(value: Phaser.Types.GameObjects.Particles.EmitterOpOnEmitType): this;$/;"	m
setEmitterFrames	pilas-engine/declaraciones/phaser.d.ts	/^                setEmitterFrames(frames: Phaser.Textures.Frame | Phaser.Textures.Frame[], emitter: Phaser.GameObjects.Particles.ParticleEmitter): this;$/;"	m
setEmpty	pilas-engine/declaraciones/phaser.d.ts	/^            setEmpty(): this;$/;"	m
setEnable	pilas-engine/declaraciones/phaser.d.ts	/^                    setEnable: boolean;$/;"	m
setEnable	pilas-engine/declaraciones/phaser.d.ts	/^                setEnable(value?: boolean): Phaser.Physics.Arcade.Body;$/;"	m
setEndAngle	pilas-engine/declaraciones/phaser.d.ts	/^            setEndAngle(value: number): this;$/;"	m
setEntity	pilas-engine/libs/spriter.ts	/^  setEntity(entity_key: string): void {$/;"	m
setEventsProxy	pilas-engine/declaraciones/phaser.d.ts	/^                setEventsProxy(): void;$/;"	m
setExclusive	pilas-engine/declaraciones/phaser.d.ts	/^            setExclusive(value?: boolean): this;$/;"	m
setExistingBody	pilas-engine/declaraciones/phaser.d.ts	/^                    setExistingBody(body: MatterJS.BodyType, addToWorld?: boolean): Phaser.GameObjects.GameObject;$/;"	m
setExistingBody	pilas-engine/declaraciones/phaser.d.ts	/^                setExistingBody(body: MatterJS.BodyType, addToWorld?: boolean): Phaser.GameObjects.GameObject;$/;"	m
setFPS	pilas-engine/declaraciones/phaser.d.ts	/^                setFPS(framerate: number): this;$/;"	m
setFaces	pilas-engine/declaraciones/phaser.d.ts	/^            setFaces(showTop?: boolean, showLeft?: boolean, showRight?: boolean): this;$/;"	m
setFill	pilas-engine/declaraciones/phaser.d.ts	/^            setFill(color: string | any): this;$/;"	m
setFill	pilas-engine/declaraciones/phaser.d.ts	/^            setFill(color: string): Phaser.GameObjects.Text;$/;"	m
setFillStyle	pilas-engine/declaraciones/phaser.d.ts	/^            setFillStyle(color?: number, alpha?: number): this;$/;"	m
setFillStyle	pilas-engine/declaraciones/phaser.d.ts	/^            setFillStyle(fillColor?: number, fillAlpha?: number): this;$/;"	m
setFillStyle	pilas-engine/declaraciones/phaser.d.ts	/^            setFillStyle(fillTop?: number, fillLeft?: number, fillRight?: number): this;$/;"	m
setFilter	pilas-engine/declaraciones/phaser.d.ts	/^            setFilter(filterMode: Phaser.Textures.FilterMode): void;$/;"	m
setFixedRotation	pilas-engine/declaraciones/phaser.d.ts	/^                    setFixedRotation(): this;$/;"	m
setFixedRotation	pilas-engine/declaraciones/phaser.d.ts	/^                setFixedRotation(): this;$/;"	m
setFixedSize	pilas-engine/declaraciones/phaser.d.ts	/^            setFixedSize(width: number, height: number): Phaser.GameObjects.Text;$/;"	m
setFixedSize	pilas-engine/declaraciones/phaser.d.ts	/^            setFixedSize(width: number, height: number): this;$/;"	m
setFlip	pilas-engine/declaraciones/phaser.d.ts	/^                setFlip(x: boolean, y: boolean): this;$/;"	m
setFlip	pilas-engine/declaraciones/phaser.d.ts	/^            setFlip(x: boolean, y: boolean): this;$/;"	m
setFlipX	pilas-engine/declaraciones/phaser.d.ts	/^                setFlipX(value: boolean): this;$/;"	m
setFlipX	pilas-engine/declaraciones/phaser.d.ts	/^            setFlipX(value: boolean): this;$/;"	m
setFlipY	pilas-engine/declaraciones/phaser.d.ts	/^                setFlipY(value: boolean): this;$/;"	m
setFlipY	pilas-engine/declaraciones/phaser.d.ts	/^            setFlipY(value: boolean): this;$/;"	m
setFlipY	pilas-engine/declaraciones/phaser.d.ts	/^            setFlipY(value?: boolean): void;$/;"	m
setFollowOffset	pilas-engine/declaraciones/phaser.d.ts	/^                setFollowOffset(x?: number, y?: number): this;$/;"	m
setFont	pilas-engine/declaraciones/phaser.d.ts	/^            setFont(font: string | object, updateText?: boolean): Phaser.GameObjects.Text;$/;"	m
setFont	pilas-engine/declaraciones/phaser.d.ts	/^            setFont(font: string): this;$/;"	m
setFont	pilas-engine/declaraciones/phaser.d.ts	/^            setFont(font: string, size?: number, align?: number): this;$/;"	m
setFontFamily	pilas-engine/declaraciones/phaser.d.ts	/^            setFontFamily(family: string): Phaser.GameObjects.Text;$/;"	m
setFontFamily	pilas-engine/declaraciones/phaser.d.ts	/^            setFontFamily(family: string): this;$/;"	m
setFontSize	pilas-engine/declaraciones/phaser.d.ts	/^            setFontSize(size: number | string): Phaser.GameObjects.Text;$/;"	m
setFontSize	pilas-engine/declaraciones/phaser.d.ts	/^            setFontSize(size: number): this;$/;"	m
setFontStyle	pilas-engine/declaraciones/phaser.d.ts	/^            setFontStyle(style: string): Phaser.GameObjects.Text;$/;"	m
setFontStyle	pilas-engine/declaraciones/phaser.d.ts	/^            setFontStyle(style: string): this;$/;"	m
setFrame	pilas-engine/declaraciones/phaser.d.ts	/^                setFrame(frame: string | number, updateSize?: boolean, updateOrigin?: boolean): this;$/;"	m
setFrame	pilas-engine/declaraciones/phaser.d.ts	/^                setFrame(frame?: string | number): this;$/;"	m
setFrame	pilas-engine/declaraciones/phaser.d.ts	/^                setFrame(frames: any[] | string | number | Phaser.Types.GameObjects.Particles.ParticleEmitterFrameConfig, pickRandom?: boolean, quantity?: number): this;$/;"	m
setFrame	pilas-engine/declaraciones/phaser.d.ts	/^            setFrame(frame: string | number): this;$/;"	m
setFrame	pilas-engine/declaraciones/phaser.d.ts	/^            setFrame(frame: string | number, updateSize?: boolean, updateOrigin?: boolean): this;$/;"	m
setFrame	pilas-engine/declaraciones/phaser.d.ts	/^            setFrame(frame?: string | number | Phaser.Textures.Frame): this;$/;"	m
setFramebuffer	pilas-engine/declaraciones/phaser.d.ts	/^                setFramebuffer(framebuffer: WebGLFramebuffer, updateScissor?: boolean, resetTextures?: boolean, setViewport?: boolean): this;$/;"	m
setFreeze	pilas-engine/declaraciones/phaser.d.ts	/^            setFreeze(value: boolean): this;$/;"	m
setFrequency	pilas-engine/declaraciones/phaser.d.ts	/^                setFrequency(frequency: number, quantity?: Phaser.Types.GameObjects.Particles.EmitterOpOnEmitType): this;$/;"	m
setFriction	pilas-engine/declaraciones/phaser.d.ts	/^                    setFriction(value: number, air?: number, fstatic?: number): Phaser.GameObjects.GameObject;$/;"	m
setFriction	pilas-engine/declaraciones/phaser.d.ts	/^                    setFriction(x: number, y?: number): this;$/;"	m
setFriction	pilas-engine/declaraciones/phaser.d.ts	/^                setFriction(value: number, air?: number, fstatic?: number): Phaser.GameObjects.GameObject;$/;"	m
setFriction	pilas-engine/declaraciones/phaser.d.ts	/^                setFriction(x: number, y?: number): Phaser.Physics.Arcade.Body;$/;"	m
setFriction	pilas-engine/declaraciones/phaser.d.ts	/^                setFriction(x: number, y?: number): this;$/;"	m
setFrictionAir	pilas-engine/declaraciones/phaser.d.ts	/^                    setFrictionAir(value: number): Phaser.GameObjects.GameObject;$/;"	m
setFrictionAir	pilas-engine/declaraciones/phaser.d.ts	/^                setFrictionAir(value: number): Phaser.GameObjects.GameObject;$/;"	m
setFrictionStatic	pilas-engine/declaraciones/phaser.d.ts	/^                    setFrictionStatic(value: number): Phaser.GameObjects.GameObject;$/;"	m
setFrictionStatic	pilas-engine/declaraciones/phaser.d.ts	/^                setFrictionStatic(value: number): Phaser.GameObjects.GameObject;$/;"	m
setFrictionX	pilas-engine/declaraciones/phaser.d.ts	/^                    setFrictionX(x: number): this;$/;"	m
setFrictionX	pilas-engine/declaraciones/phaser.d.ts	/^                    setFrictionX: number;$/;"	m
setFrictionX	pilas-engine/declaraciones/phaser.d.ts	/^                setFrictionX(value: number): Phaser.Physics.Arcade.Body;$/;"	m
setFrictionX	pilas-engine/declaraciones/phaser.d.ts	/^                setFrictionX(x: number): this;$/;"	m
setFrictionY	pilas-engine/declaraciones/phaser.d.ts	/^                    setFrictionY(y: number): this;$/;"	m
setFrictionY	pilas-engine/declaraciones/phaser.d.ts	/^                    setFrictionY: number;$/;"	m
setFrictionY	pilas-engine/declaraciones/phaser.d.ts	/^                setFrictionY(value: number): Phaser.Physics.Arcade.Body;$/;"	m
setFrictionY	pilas-engine/declaraciones/phaser.d.ts	/^                setFrictionY(y: number): this;$/;"	m
setFromEuler	pilas-engine/declaraciones/phaser.d.ts	/^            setFromEuler(euler: Phaser.Math.Euler, update?: boolean): Phaser.Math.Quaternion;$/;"	m
setFromHSV	pilas-engine/declaraciones/phaser.d.ts	/^            setFromHSV(h: number, s: number, v: number): Phaser.Display.Color;$/;"	m
setFromMatrixColumn	pilas-engine/declaraciones/phaser.d.ts	/^            setFromMatrixColumn(mat4: Phaser.Math.Matrix4, index: number): Phaser.Math.Vector3;$/;"	m
setFromMatrixPosition	pilas-engine/declaraciones/phaser.d.ts	/^            setFromMatrixPosition(mat4: Phaser.Math.Matrix4): Phaser.Math.Vector3;$/;"	m
setFromObject	pilas-engine/declaraciones/phaser.d.ts	/^            setFromObject(obj: Phaser.Types.Math.Vector2Like): Phaser.Math.Vector2;$/;"	m
setFromRGB	pilas-engine/declaraciones/phaser.d.ts	/^            setFromRGB(color: Phaser.Types.Display.InputColorObject): Phaser.Display.Color;$/;"	m
setFromRotationMatrix	pilas-engine/declaraciones/phaser.d.ts	/^            setFromRotationMatrix(mat4: Phaser.Math.Matrix4): Phaser.Math.Quaternion;$/;"	m
setFromTileCollision	pilas-engine/declaraciones/phaser.d.ts	/^                setFromTileCollision(options?: Phaser.Types.Physics.Matter.MatterBodyTileOptions): Phaser.Physics.Matter.TileBody;$/;"	m
setFromTileRectangle	pilas-engine/declaraciones/phaser.d.ts	/^                setFromTileRectangle(options?: Phaser.Types.Physics.Matter.MatterBodyTileOptions): Phaser.Physics.Matter.TileBody;$/;"	m
setGLTo	pilas-engine/declaraciones/phaser.d.ts	/^            setGLTo(red: number, green: number, blue: number, alpha?: number): Phaser.Display.Color;$/;"	m
setGameObject	pilas-engine/declaraciones/phaser.d.ts	/^                setGameObject(gameObject: Phaser.GameObjects.GameObject, frame?: Phaser.Textures.Frame): number;$/;"	m
setGameObject	pilas-engine/declaraciones/phaser.d.ts	/^                setGameObject(gameObject: Phaser.GameObjects.GameObject, update?: boolean): Phaser.Physics.Arcade.StaticBody;$/;"	m
setGameSize	pilas-engine/declaraciones/phaser.d.ts	/^            setGameSize(width: number, height: number): this;$/;"	m
setGlobalAlpha	pilas-engine/declaraciones/phaser.d.ts	/^            setGlobalAlpha(alpha: number): this;$/;"	m
setGlobalTimeScale	pilas-engine/declaraciones/phaser.d.ts	/^            setGlobalTimeScale(value: number): Phaser.Tweens.TweenManager;$/;"	m
setGlobalTint	pilas-engine/declaraciones/phaser.d.ts	/^            setGlobalTint(tint: number): this;$/;"	m
setGlobalTopOnly	pilas-engine/declaraciones/phaser.d.ts	/^            setGlobalTopOnly(value: boolean): this;$/;"	m
setGravity	pilas-engine/declaraciones/phaser.d.ts	/^                    setGravity(x: number, y?: number): this;$/;"	m
setGravity	pilas-engine/declaraciones/phaser.d.ts	/^                setGravity(x: number, y: number): this;$/;"	m
setGravity	pilas-engine/declaraciones/phaser.d.ts	/^                setGravity(x: number, y?: number): Phaser.Physics.Arcade.Body;$/;"	m
setGravity	pilas-engine/declaraciones/phaser.d.ts	/^                setGravity(x: number, y?: number): this;$/;"	m
setGravity	pilas-engine/declaraciones/phaser.d.ts	/^                setGravity(x?: number, y?: number, scale?: number): this;$/;"	m
setGravityX	pilas-engine/declaraciones/phaser.d.ts	/^                    setGravityX(x: number): this;$/;"	m
setGravityX	pilas-engine/declaraciones/phaser.d.ts	/^                    setGravityX: number;$/;"	m
setGravityX	pilas-engine/declaraciones/phaser.d.ts	/^                setGravityX(value: number): Phaser.Physics.Arcade.Body;$/;"	m
setGravityX	pilas-engine/declaraciones/phaser.d.ts	/^                setGravityX(value: number): this;$/;"	m
setGravityX	pilas-engine/declaraciones/phaser.d.ts	/^                setGravityX(x: number): this;$/;"	m
setGravityY	pilas-engine/declaraciones/phaser.d.ts	/^                    setGravityY(y: number): this;$/;"	m
setGravityY	pilas-engine/declaraciones/phaser.d.ts	/^                    setGravityY: number;$/;"	m
setGravityY	pilas-engine/declaraciones/phaser.d.ts	/^                setGravityY(value: number): Phaser.Physics.Arcade.Body;$/;"	m
setGravityY	pilas-engine/declaraciones/phaser.d.ts	/^                setGravityY(value: number): this;$/;"	m
setGravityY	pilas-engine/declaraciones/phaser.d.ts	/^                setGravityY(y: number): this;$/;"	m
setHTML	pilas-engine/declaraciones/phaser.d.ts	/^            setHTML(html: string): this;$/;"	m
setHeight	pilas-engine/declaraciones/phaser.d.ts	/^            setHeight(height: number): this;$/;"	m
setHeight	pilas-engine/declaraciones/phaser.d.ts	/^            setHeight(value: number): this;$/;"	m
setHitArea	pilas-engine/declaraciones/phaser.d.ts	/^            setHitArea(gameObjects: Phaser.GameObjects.GameObject | Phaser.GameObjects.GameObject[], hitArea?: Phaser.Types.Input.InputConfiguration | any, hitAreaCallback?: Phaser.Types.Input.HitAreaCallback): this;$/;"	m
setHitArea	pilas-engine/declaraciones/phaser.d.ts	/^            setHitArea(hitArea: any, hitAreaCallback: Phaser.Types.Input.HitAreaCallback): this;$/;"	m
setHitAreaCircle	pilas-engine/declaraciones/phaser.d.ts	/^            setHitAreaCircle(gameObjects: Phaser.GameObjects.GameObject | Phaser.GameObjects.GameObject[], x: number, y: number, radius: number, callback?: Phaser.Types.Input.HitAreaCallback): this;$/;"	m
setHitAreaEllipse	pilas-engine/declaraciones/phaser.d.ts	/^            setHitAreaEllipse(gameObjects: Phaser.GameObjects.GameObject | Phaser.GameObjects.GameObject[], x: number, y: number, width: number, height: number, callback?: Phaser.Types.Input.HitAreaCallback): this;$/;"	m
setHitAreaFromTexture	pilas-engine/declaraciones/phaser.d.ts	/^            setHitAreaFromTexture(gameObjects: Phaser.GameObjects.GameObject | Phaser.GameObjects.GameObject[], callback?: Phaser.Types.Input.HitAreaCallback): this;$/;"	m
setHitAreaRectangle	pilas-engine/declaraciones/phaser.d.ts	/^            setHitAreaRectangle(gameObjects: Phaser.GameObjects.GameObject | Phaser.GameObjects.GameObject[], x: number, y: number, width: number, height: number, callback?: Phaser.Types.Input.HitAreaCallback): this;$/;"	m
setHitAreaTriangle	pilas-engine/declaraciones/phaser.d.ts	/^            setHitAreaTriangle(gameObjects: Phaser.GameObjects.GameObject | Phaser.GameObjects.GameObject[], x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, callback?: Phaser.Types.Input.HitAreaCallback): this;$/;"	m
setHorizontal	pilas-engine/declaraciones/phaser.d.ts	/^            setHorizontal(points?: number | Phaser.Types.Math.Vector2Like[], colors?: number | number[], alphas?: number | number[]): this;$/;"	m
setIgnoreGravity	pilas-engine/declaraciones/phaser.d.ts	/^                    setIgnoreGravity(value: boolean): Phaser.GameObjects.GameObject;$/;"	m
setIgnoreGravity	pilas-engine/declaraciones/phaser.d.ts	/^                setIgnoreGravity(value: boolean): Phaser.GameObjects.GameObject;$/;"	m
setImage	pilas-engine/declaraciones/phaser.d.ts	/^            setImage(texture: Phaser.Textures.Texture): Phaser.Tilemaps.Tileset;$/;"	m
setImmovable	pilas-engine/declaraciones/phaser.d.ts	/^                    setImmovable(value?: boolean): this;$/;"	m
setImmovable	pilas-engine/declaraciones/phaser.d.ts	/^                    setImmovable: boolean;$/;"	m
setImmovable	pilas-engine/declaraciones/phaser.d.ts	/^                setImmovable(value?: boolean): Phaser.Physics.Arcade.Body;$/;"	m
setImmovable	pilas-engine/declaraciones/phaser.d.ts	/^                setImmovable(value?: boolean): this;$/;"	m
setInnerRadius	pilas-engine/declaraciones/phaser.d.ts	/^            setInnerRadius(value: number): this;$/;"	m
setIntensity	pilas-engine/declaraciones/phaser.d.ts	/^            setIntensity(intensity: number): this;$/;"	m
setInteractive	pilas-engine/declaraciones/phaser.d.ts	/^            setInteractive(): this;$/;"	m
setInteractive	pilas-engine/declaraciones/phaser.d.ts	/^            setInteractive(hitArea?: Phaser.Types.Input.InputConfiguration | any, callback?: Phaser.Types.Input.HitAreaCallback, dropZone?: boolean): this;$/;"	m
setInvertAlpha	pilas-engine/declaraciones/phaser.d.ts	/^                setInvertAlpha(value?: boolean): this;$/;"	m
setIterations	pilas-engine/declaraciones/phaser.d.ts	/^            setIterations(value: number): this;$/;"	m
setLayer	pilas-engine/declaraciones/phaser.d.ts	/^            setLayer(layer?: string | number | Phaser.Tilemaps.TilemapLayer): this;$/;"	m
setLayerTileSize	pilas-engine/declaraciones/phaser.d.ts	/^            setLayerTileSize(tileWidth: number, tileHeight: number, layer?: string | number | Phaser.Tilemaps.TilemapLayer): this;$/;"	m
setLeftAlign	pilas-engine/declaraciones/phaser.d.ts	/^            setLeftAlign(): this;$/;"	m
setLength	pilas-engine/declaraciones/phaser.d.ts	/^            setLength(length: number): Phaser.Math.Vector2;$/;"	m
setLerp	pilas-engine/declaraciones/phaser.d.ts	/^                setLerp(x?: number, y?: number): this;$/;"	m
setLetterSpacing	pilas-engine/declaraciones/phaser.d.ts	/^            setLetterSpacing(spacing?: number): this;$/;"	m
setLifespan	pilas-engine/declaraciones/phaser.d.ts	/^                setLifespan(value: Phaser.Types.GameObjects.Particles.EmitterOpOnEmitType): this;$/;"	m
setLineSpacing	pilas-engine/declaraciones/phaser.d.ts	/^            setLineSpacing(value: number): this;$/;"	m
setLineWidth	pilas-engine/declaraciones/phaser.d.ts	/^            setLineWidth(startWidth: number, endWidth?: number): this;$/;"	m
setLink	pilas-engine/declaraciones/phaser.d.ts	/^            setLink(fileB: Phaser.Loader.File): void;$/;"	m
setLoop	pilas-engine/declaraciones/phaser.d.ts	/^            setLoop(value: boolean): Phaser.Sound.HTML5AudioSound;$/;"	m
setLoop	pilas-engine/declaraciones/phaser.d.ts	/^            setLoop(value: boolean): this;$/;"	m
setLoop	pilas-engine/declaraciones/phaser.d.ts	/^            setLoop(value?: boolean): this;$/;"	m
setMask	pilas-engine/declaraciones/phaser.d.ts	/^                setMask(mask: Phaser.Display.Masks.BitmapMask | Phaser.Display.Masks.GeometryMask): this;$/;"	m
setMask	pilas-engine/declaraciones/phaser.d.ts	/^                setMask(mask: Phaser.Display.Masks.BitmapMask | Phaser.Display.Masks.GeometryMask, fixedPosition?: boolean): this;$/;"	m
setMask	pilas-engine/declaraciones/phaser.d.ts	/^            setMask(mask: Phaser.Display.Masks.BitmapMask | Phaser.Display.Masks.GeometryMask): this;$/;"	m
setMass	pilas-engine/declaraciones/phaser.d.ts	/^                    setMass(value: number): Phaser.GameObjects.GameObject;$/;"	m
setMass	pilas-engine/declaraciones/phaser.d.ts	/^                    setMass(value: number): this;$/;"	m
setMass	pilas-engine/declaraciones/phaser.d.ts	/^                    setMass: number;$/;"	m
setMass	pilas-engine/declaraciones/phaser.d.ts	/^                setMass(value: number): Phaser.GameObjects.GameObject;$/;"	m
setMass	pilas-engine/declaraciones/phaser.d.ts	/^                setMass(value: number): Phaser.Physics.Arcade.Body;$/;"	m
setMass	pilas-engine/declaraciones/phaser.d.ts	/^                setMass(value: number): Phaser.Physics.Arcade.StaticBody;$/;"	m
setMass	pilas-engine/declaraciones/phaser.d.ts	/^                setMass(value: number): this;$/;"	m
setMatrix2fv	pilas-engine/declaraciones/phaser.d.ts	/^                setMatrix2fv(name: string, transpose: boolean, matrix: number[] | Float32Array): this;$/;"	m
setMatrix2fv	pilas-engine/declaraciones/phaser.d.ts	/^                setMatrix2fv(name: string, transpose: boolean, matrix: number[] | Float32Array, shader?: Phaser.Renderer.WebGL.WebGLShader): this;$/;"	m
setMatrix3fv	pilas-engine/declaraciones/phaser.d.ts	/^                setMatrix3fv(name: string, transpose: boolean, matrix: Float32Array): this;$/;"	m
setMatrix3fv	pilas-engine/declaraciones/phaser.d.ts	/^                setMatrix3fv(name: string, transpose: boolean, matrix: Float32Array, shader?: Phaser.Renderer.WebGL.WebGLShader): this;$/;"	m
setMatrix4fv	pilas-engine/declaraciones/phaser.d.ts	/^                setMatrix4fv(name: string, transpose: boolean, matrix: Float32Array): this;$/;"	m
setMatrix4fv	pilas-engine/declaraciones/phaser.d.ts	/^                setMatrix4fv(name: string, transpose: boolean, matrix: Float32Array, shader?: Phaser.Renderer.WebGL.WebGLShader): this;$/;"	m
setMax	pilas-engine/declaraciones/phaser.d.ts	/^            setMax(width?: number, height?: number): this;$/;"	m
setMaxLines	pilas-engine/declaraciones/phaser.d.ts	/^            setMaxLines(max?: number): Phaser.GameObjects.Text;$/;"	m
setMaxLines	pilas-engine/declaraciones/phaser.d.ts	/^            setMaxLines(max?: number): this;$/;"	m
setMaxSpeed	pilas-engine/declaraciones/phaser.d.ts	/^                setMaxSpeed(value: number): Phaser.Physics.Arcade.Body;$/;"	m
setMaxVelocity	pilas-engine/declaraciones/phaser.d.ts	/^                    setMaxVelocity(x: number, y?: number): this;$/;"	m
setMaxVelocity	pilas-engine/declaraciones/phaser.d.ts	/^                setMaxVelocity(x: number, y?: number): Phaser.Physics.Arcade.Body;$/;"	m
setMaxVelocity	pilas-engine/declaraciones/phaser.d.ts	/^                setMaxVelocity(x: number, y?: number): this;$/;"	m
setMaxVelocityX	pilas-engine/declaraciones/phaser.d.ts	/^                setMaxVelocityX(value: number): Phaser.Physics.Arcade.Body;$/;"	m
setMaxVelocityY	pilas-engine/declaraciones/phaser.d.ts	/^                setMaxVelocityY(value: number): Phaser.Physics.Arcade.Body;$/;"	m
setMaxWidth	pilas-engine/declaraciones/phaser.d.ts	/^            setMaxWidth(value: number, wordWrapCharCode?: number): this;$/;"	m
setMaxZoom	pilas-engine/declaraciones/phaser.d.ts	/^            setMaxZoom(): this;$/;"	m
setMethods	pilas-engine/declaraciones/phaser.d.ts	/^                setMethods(): this;$/;"	m
setMin	pilas-engine/declaraciones/phaser.d.ts	/^            setMin(width?: number, height?: number): this;$/;"	m
setMulti	pilas-engine/declaraciones/phaser.d.ts	/^                setMulti(): Phaser.Renderer.WebGL.Pipelines.MultiPipeline;$/;"	m
setMute	pilas-engine/declaraciones/phaser.d.ts	/^            setMute(value: boolean): Phaser.Sound.HTML5AudioSoundManager;$/;"	m
setMute	pilas-engine/declaraciones/phaser.d.ts	/^            setMute(value: boolean): Phaser.Sound.WebAudioSoundManager;$/;"	m
setMute	pilas-engine/declaraciones/phaser.d.ts	/^            setMute(value: boolean): this;$/;"	m
setMute	pilas-engine/declaraciones/phaser.d.ts	/^            setMute(value?: boolean): this;$/;"	m
setName	pilas-engine/declaraciones/phaser.d.ts	/^                setName(name: string): Phaser.Physics.Arcade.Collider;$/;"	m
setName	pilas-engine/declaraciones/phaser.d.ts	/^                setName(value?: string): this;$/;"	m
setName	pilas-engine/declaraciones/phaser.d.ts	/^            setName(value: string): this;$/;"	m
setNormalMap	pilas-engine/declaraciones/phaser.d.ts	/^                setNormalMap(texture: WebGLTexture): void;$/;"	m
setNormalMapRotation	pilas-engine/declaraciones/phaser.d.ts	/^                    setNormalMapRotation(rotation: number): void;$/;"	m
setOffset	pilas-engine/declaraciones/phaser.d.ts	/^                    setOffset(x: number, y?: number): this;$/;"	m
setOffset	pilas-engine/declaraciones/phaser.d.ts	/^                setOffset(x: number, y: number): Phaser.Physics.Arcade.StaticBody;$/;"	m
setOffset	pilas-engine/declaraciones/phaser.d.ts	/^                setOffset(x: number, y?: number): Phaser.Physics.Arcade.Body;$/;"	m
setOffset	pilas-engine/declaraciones/phaser.d.ts	/^                setOffset(x: number, y?: number): this;$/;"	m
setOnCollide	pilas-engine/declaraciones/phaser.d.ts	/^                    setOnCollide(callback: Function): Phaser.GameObjects.GameObject;$/;"	m
setOnCollide	pilas-engine/declaraciones/phaser.d.ts	/^                setOnCollide(callback: Function): Phaser.GameObjects.GameObject;$/;"	m
setOnCollideActive	pilas-engine/declaraciones/phaser.d.ts	/^                    setOnCollideActive(callback: Function): Phaser.GameObjects.GameObject;$/;"	m
setOnCollideActive	pilas-engine/declaraciones/phaser.d.ts	/^                setOnCollideActive(callback: Function): Phaser.GameObjects.GameObject;$/;"	m
setOnCollideEnd	pilas-engine/declaraciones/phaser.d.ts	/^                    setOnCollideEnd(callback: Function): Phaser.GameObjects.GameObject;$/;"	m
setOnCollideEnd	pilas-engine/declaraciones/phaser.d.ts	/^                setOnCollideEnd(callback: Function): Phaser.GameObjects.GameObject;$/;"	m
setOnCollideWith	pilas-engine/declaraciones/phaser.d.ts	/^                    setOnCollideWith(body: MatterJS.Body | MatterJS.Body[], callback: Function): Phaser.GameObjects.GameObject;$/;"	m
setOnCollideWith	pilas-engine/declaraciones/phaser.d.ts	/^                setOnCollideWith(body: MatterJS.Body | MatterJS.Body[], callback: Function): Phaser.GameObjects.GameObject;$/;"	m
setOrigin	pilas-engine/declaraciones/phaser.d.ts	/^                setOrigin(x?: number, y?: number): this;$/;"	m
setOrigin	pilas-engine/declaraciones/phaser.d.ts	/^            setOrigin(originX: number, originY?: number, stepX?: number, stepY?: number): this;$/;"	m
setOrigin	pilas-engine/declaraciones/phaser.d.ts	/^            setOrigin(x?: number, y?: number): this;$/;"	m
setOriginFromFrame	pilas-engine/declaraciones/phaser.d.ts	/^                setOriginFromFrame(): this;$/;"	m
setOriginFromFrame	pilas-engine/declaraciones/phaser.d.ts	/^            setOriginFromFrame(): this;$/;"	m
setOrtho	pilas-engine/declaraciones/phaser.d.ts	/^            setOrtho(scaleX?: number, scaleY?: number, near?: number, far?: number): void;$/;"	m
setOuterRadius	pilas-engine/declaraciones/phaser.d.ts	/^            setOuterRadius(value: number): this;$/;"	m
setOutlineStyle	pilas-engine/declaraciones/phaser.d.ts	/^            setOutlineStyle(fillColor?: number, fillAlpha?: number): this;$/;"	m
setPadding	pilas-engine/declaraciones/phaser.d.ts	/^            setPadding(left: number | Phaser.Types.GameObjects.Text.TextPadding, top?: number, right?: number, bottom?: number): this;$/;"	m
setPan	pilas-engine/declaraciones/phaser.d.ts	/^            setPan(value: number): this;$/;"	m
setParent	pilas-engine/declaraciones/phaser.d.ts	/^            setParent(parent?: any): this;$/;"	m
setParentSize	pilas-engine/declaraciones/phaser.d.ts	/^            setParentSize(width: number, height: number): this;$/;"	m
setPath	pilas-engine/declaraciones/phaser.d.ts	/^                setPath(path: Phaser.Curves.Path, config?: number | Phaser.Types.GameObjects.PathFollower.PathConfig | Phaser.Types.Tweens.NumberTweenBuilderConfig): this;$/;"	m
setPath	pilas-engine/declaraciones/phaser.d.ts	/^            setPath(path: Phaser.Curves.Path, config?: number | Phaser.Types.GameObjects.PathFollower.PathConfig | Phaser.Types.Tweens.NumberTweenBuilderConfig): this;$/;"	m
setPath	pilas-engine/declaraciones/phaser.d.ts	/^            setPath(path?: string): this;$/;"	m
setPaused	pilas-engine/declaraciones/phaser.d.ts	/^            setPaused(value?: boolean): this;$/;"	m
setPerspective	pilas-engine/declaraciones/phaser.d.ts	/^            setPerspective(value: number): this;$/;"	m
setPerspective	pilas-engine/declaraciones/phaser.d.ts	/^            setPerspective(width: number, height: number, fov?: number, near?: number, far?: number): void;$/;"	m
setPipeline	pilas-engine/declaraciones/phaser.d.ts	/^                setPipeline(pipeline: string | Phaser.Renderer.WebGL.WebGLPipeline, pipelineData?: object, copyData?: boolean): this;$/;"	m
setPipeline	pilas-engine/declaraciones/phaser.d.ts	/^            setPipeline(pipeline: string | Phaser.Renderer.WebGL.WebGLPipeline, pipelineData?: object, copyData?: boolean): this;$/;"	m
setPipelineData	pilas-engine/declaraciones/phaser.d.ts	/^                setPipelineData(key: string, value?: any): this;$/;"	m
setPipelineData	pilas-engine/declaraciones/phaser.d.ts	/^            setPipelineData(key: string, value?: any): this;$/;"	m
setPixel	pilas-engine/declaraciones/phaser.d.ts	/^            setPixel(x: number, y: number, red: number, green: number, blue: number, alpha?: number): this;$/;"	m
setPlaybackRate	pilas-engine/declaraciones/phaser.d.ts	/^            setPlaybackRate(rate?: number): this;$/;"	m
setPointer	pilas-engine/declaraciones/phaser.d.ts	/^            setPointer(pointer?: Phaser.Input.Pointer): this;$/;"	m
setPoints	pilas-engine/declaraciones/phaser.d.ts	/^            setPoints(points?: number | Phaser.Types.Math.Vector2Like[], colors?: number | number[], alphas?: number | number[]): this;$/;"	m
setPoints	pilas-engine/declaraciones/phaser.d.ts	/^            setPoints(value: number): this;$/;"	m
setPollAlways	pilas-engine/declaraciones/phaser.d.ts	/^            setPollAlways(): this;$/;"	m
setPollOnMove	pilas-engine/declaraciones/phaser.d.ts	/^            setPollOnMove(): this;$/;"	m
setPollRate	pilas-engine/declaraciones/phaser.d.ts	/^            setPollRate(value: number): this;$/;"	m
setPolygon	pilas-engine/declaraciones/phaser.d.ts	/^                    setPolygon(radius: number, sides: number, options?: Phaser.Types.Physics.Matter.MatterBodyConfig): Phaser.GameObjects.GameObject;$/;"	m
setPolygon	pilas-engine/declaraciones/phaser.d.ts	/^                setPolygon(radius: number, sides: number, options?: Phaser.Types.Physics.Matter.MatterBodyConfig): Phaser.GameObjects.GameObject;$/;"	m
setPosition	pilas-engine/declaraciones/phaser.d.ts	/^                    setPosition(x?: number, y?: number): this;$/;"	m
setPosition	pilas-engine/declaraciones/phaser.d.ts	/^                setPosition(x: Phaser.Types.GameObjects.Particles.EmitterOpOnEmitType, y: Phaser.Types.GameObjects.Particles.EmitterOpOnEmitType): this;$/;"	m
setPosition	pilas-engine/declaraciones/phaser.d.ts	/^                setPosition(x: number, y?: number): this;$/;"	m
setPosition	pilas-engine/declaraciones/phaser.d.ts	/^                setPosition(x?: number, y?: number, z?: number, w?: number): this;$/;"	m
setPosition	pilas-engine/declaraciones/phaser.d.ts	/^            setPosition(x: number, y: number): this;$/;"	m
setPosition	pilas-engine/declaraciones/phaser.d.ts	/^            setPosition(x: number, y?: number): this;$/;"	m
setPosition	pilas-engine/declaraciones/phaser.d.ts	/^            setPosition(x?: number, y?: number): this;$/;"	m
setPosition	pilas-engine/declaraciones/phaser.d.ts	/^            setPosition(x?: number, y?: number, z?: number, w?: number): this;$/;"	m
setPostPipeline	pilas-engine/declaraciones/phaser.d.ts	/^                setPostPipeline(pipelines: string | string[] | Function | Function[] | Phaser.Renderer.WebGL.Pipelines.PostFXPipeline | Phaser.Renderer.WebGL.Pipelines.PostFXPipeline[], pipelineData?: object, copyData?: boolean): this;$/;"	m
setPostPipeline	pilas-engine/declaraciones/phaser.d.ts	/^            setPostPipeline(pipelines: string | string[] | Function | Function[] | Phaser.Renderer.WebGL.Pipelines.PostFXPipeline | Phaser.Renderer.WebGL.Pipelines.PostFXPipeline[], pipelineData?: object, copyData?: boolean): this;$/;"	m
setPrefix	pilas-engine/declaraciones/phaser.d.ts	/^            setPrefix(prefix?: string): this;$/;"	m
setProgram	pilas-engine/declaraciones/phaser.d.ts	/^                setProgram(program: WebGLProgram): boolean;$/;"	m
setProgress	pilas-engine/declaraciones/phaser.d.ts	/^            setProgress(value?: number): Phaser.GameObjects.GameObject;$/;"	m
setProjection	pilas-engine/declaraciones/phaser.d.ts	/^            setProjection(value: number): this;$/;"	m
setProjectionMatrix	pilas-engine/declaraciones/phaser.d.ts	/^                setProjectionMatrix(width: number, height: number): this;$/;"	m
setPropertiesFromTiledObject	pilas-engine/declaraciones/phaser.d.ts	/^            setPropertiesFromTiledObject(sprite: Phaser.GameObjects.GameObject, obj: Phaser.Types.Tilemaps.TiledObject): void;$/;"	m
setPushable	pilas-engine/declaraciones/phaser.d.ts	/^                    setPushable(value?: boolean): this;$/;"	m
setPushable	pilas-engine/declaraciones/phaser.d.ts	/^                setPushable(value?: boolean): this;$/;"	m
setQuantity	pilas-engine/declaraciones/phaser.d.ts	/^                setQuantity(quantity: Phaser.Types.GameObjects.Particles.EmitterOpOnEmitType): this;$/;"	m
setRadial	pilas-engine/declaraciones/phaser.d.ts	/^                setRadial(value?: boolean): this;$/;"	m
setRadius	pilas-engine/declaraciones/phaser.d.ts	/^            setRadius(radius: number): this;$/;"	m
setRadius	pilas-engine/declaraciones/phaser.d.ts	/^            setRadius(value: number): this;$/;"	m
setRandomPosition	pilas-engine/declaraciones/phaser.d.ts	/^                setRandomPosition(x?: number, y?: number, width?: number, height?: number): this;$/;"	m
setRandomPosition	pilas-engine/declaraciones/phaser.d.ts	/^            setRandomPosition(x?: number, y?: number, width?: number, height?: number): this;$/;"	m
setRate	pilas-engine/declaraciones/phaser.d.ts	/^            setRate(value: number): Phaser.Sound.BaseSoundManager;$/;"	m
setRate	pilas-engine/declaraciones/phaser.d.ts	/^            setRate(value: number): this;$/;"	m
setRectangle	pilas-engine/declaraciones/phaser.d.ts	/^                    setRectangle(width: number, height: number, options?: Phaser.Types.Physics.Matter.MatterBodyConfig): Phaser.GameObjects.GameObject;$/;"	m
setRectangle	pilas-engine/declaraciones/phaser.d.ts	/^                setRectangle(width: number, height: number, options?: Phaser.Types.Physics.Matter.MatterBodyConfig): Phaser.GameObjects.GameObject;$/;"	m
setRectangleDropZone	pilas-engine/declaraciones/phaser.d.ts	/^            setRectangleDropZone(width: number, height: number): this;$/;"	m
setRenderOrder	pilas-engine/declaraciones/phaser.d.ts	/^            setRenderOrder(renderOrder: number | string): this;$/;"	m
setRenderToTexture	pilas-engine/declaraciones/phaser.d.ts	/^            setRenderToTexture(key?: string, flipY?: boolean): this;$/;"	m
setRepeat	pilas-engine/declaraciones/phaser.d.ts	/^            setRepeat(value: number): Phaser.GameObjects.GameObject;$/;"	m
setResolution	pilas-engine/declaraciones/phaser.d.ts	/^            setResolution(value: number): Phaser.GameObjects.Text;$/;"	m
setResolution	pilas-engine/declaraciones/phaser.d.ts	/^            setResolution(value: number): this;$/;"	m
setReversed	pilas-engine/declaraciones/phaser.d.ts	/^            setReversed(reversed: boolean): this;$/;"	m
setRightAlign	pilas-engine/declaraciones/phaser.d.ts	/^            setRightAlign(): this;$/;"	m
setRotateToPath	pilas-engine/declaraciones/phaser.d.ts	/^                setRotateToPath(value: boolean, offset?: number): this;$/;"	m
setRotateToPath	pilas-engine/declaraciones/phaser.d.ts	/^            setRotateToPath(value: boolean, offset?: number): this;$/;"	m
setRotation	pilas-engine/declaraciones/phaser.d.ts	/^                    setRotation(radians?: number): this;$/;"	m
setRotation	pilas-engine/declaraciones/phaser.d.ts	/^                setRotation(radians?: number): this;$/;"	m
setRotation	pilas-engine/declaraciones/phaser.d.ts	/^                setRotation(value?: number): this;$/;"	m
setRotation	pilas-engine/declaraciones/phaser.d.ts	/^            setRotation(radians?: number): this;$/;"	m
setRotation	pilas-engine/declaraciones/phaser.d.ts	/^            setRotation(value: number): this;$/;"	m
setRoundPixels	pilas-engine/declaraciones/phaser.d.ts	/^                setRoundPixels(value: boolean): this;$/;"	m
setSampler2D	pilas-engine/declaraciones/phaser.d.ts	/^            setSampler2D(uniformKey: string, textureKey: string, textureIndex?: number, textureData?: any): this;$/;"	m
setSampler2DBuffer	pilas-engine/declaraciones/phaser.d.ts	/^            setSampler2DBuffer(uniformKey: string, texture: WebGLTexture, width: number, height: number, textureIndex?: number, textureData?: any): this;$/;"	m
setScale	pilas-engine/declaraciones/phaser.d.ts	/^                    setScale(x?: number, y?: number, point?: Phaser.Math.Vector2): this;$/;"	m
setScale	pilas-engine/declaraciones/phaser.d.ts	/^                setScale(value: Phaser.Types.GameObjects.Particles.EmitterOpOnEmitType | Phaser.Types.GameObjects.Particles.EmitterOpOnUpdateType): this;$/;"	m
setScale	pilas-engine/declaraciones/phaser.d.ts	/^                setScale(x: number, y?: number): this;$/;"	m
setScale	pilas-engine/declaraciones/phaser.d.ts	/^            setScale(x: number, y?: number): this;$/;"	m
setScaleX	pilas-engine/declaraciones/phaser.d.ts	/^                setScaleX(value: Phaser.Types.GameObjects.Particles.EmitterOpOnEmitType | Phaser.Types.GameObjects.Particles.EmitterOpOnUpdateType): this;$/;"	m
setScaleY	pilas-engine/declaraciones/phaser.d.ts	/^                setScaleY(value: Phaser.Types.GameObjects.Particles.EmitterOpOnEmitType | Phaser.Types.GameObjects.Particles.EmitterOpOnUpdateType): this;$/;"	m
setScene	pilas-engine/declaraciones/phaser.d.ts	/^                setScene(scene: Phaser.Scene): this;$/;"	m
setScissor	pilas-engine/declaraciones/phaser.d.ts	/^                setScissor(x: number, y: number, width: number, height: number, drawingBufferHeight?: number): void;$/;"	m
setScore	pilas-engine/declaraciones/phaser.d.ts	/^        setScore(score: integer, data?: string | any): this;$/;"	m
setScroll	pilas-engine/declaraciones/phaser.d.ts	/^                setScroll(x: number, y?: number): this;$/;"	m
setScrollFactor	pilas-engine/declaraciones/phaser.d.ts	/^                setScrollFactor(x: number, y?: number): this;$/;"	m
setScrollFactor	pilas-engine/declaraciones/phaser.d.ts	/^            setScrollFactor(x: number, y?: number): this;$/;"	m
setScrollFactor	pilas-engine/declaraciones/phaser.d.ts	/^            setScrollFactor(x: number, y?: number, updateChildren?: boolean): this;$/;"	m
setScrollX	pilas-engine/declaraciones/phaser.d.ts	/^            setScrollX(value: number): this;$/;"	m
setScrollY	pilas-engine/declaraciones/phaser.d.ts	/^            setScrollY(value: number): this;$/;"	m
setSeek	pilas-engine/declaraciones/phaser.d.ts	/^            setSeek(value: number): this;$/;"	m
setSensor	pilas-engine/declaraciones/phaser.d.ts	/^                    setSensor(value: boolean): Phaser.GameObjects.GameObject;$/;"	m
setSensor	pilas-engine/declaraciones/phaser.d.ts	/^                setSensor(value: boolean): Phaser.GameObjects.GameObject;$/;"	m
setShader	pilas-engine/declaraciones/phaser.d.ts	/^                setShader(shader: Phaser.Renderer.WebGL.WebGLShader, setAttributes?: boolean): this;$/;"	m
setShader	pilas-engine/declaraciones/phaser.d.ts	/^            setShader(key: string | Phaser.Display.BaseShader, textures?: string[], textureData?: any): this;$/;"	m
setShadersFromConfig	pilas-engine/declaraciones/phaser.d.ts	/^                setShadersFromConfig(config: Phaser.Types.Renderer.WebGL.WebGLPipelineConfig): this;$/;"	m
setShadow	pilas-engine/declaraciones/phaser.d.ts	/^            setShadow(x?: number, y?: number, color?: string, blur?: number, shadowStroke?: boolean, shadowFill?: boolean): Phaser.GameObjects.Text;$/;"	m
setShadow	pilas-engine/declaraciones/phaser.d.ts	/^            setShadow(x?: number, y?: number, color?: string, blur?: number, shadowStroke?: boolean, shadowFill?: boolean): this;$/;"	m
setShadowBlur	pilas-engine/declaraciones/phaser.d.ts	/^            setShadowBlur(blur: number): this;$/;"	m
setShadowBlur	pilas-engine/declaraciones/phaser.d.ts	/^            setShadowBlur(blur?: number): Phaser.GameObjects.Text;$/;"	m
setShadowColor	pilas-engine/declaraciones/phaser.d.ts	/^            setShadowColor(color: string): this;$/;"	m
setShadowColor	pilas-engine/declaraciones/phaser.d.ts	/^            setShadowColor(color?: string): Phaser.GameObjects.Text;$/;"	m
setShadowFill	pilas-engine/declaraciones/phaser.d.ts	/^            setShadowFill(enabled: boolean): Phaser.GameObjects.Text;$/;"	m
setShadowFill	pilas-engine/declaraciones/phaser.d.ts	/^            setShadowFill(enabled: boolean): this;$/;"	m
setShadowOffset	pilas-engine/declaraciones/phaser.d.ts	/^            setShadowOffset(x: number, y: number): this;$/;"	m
setShadowOffset	pilas-engine/declaraciones/phaser.d.ts	/^            setShadowOffset(x?: number, y?: number): Phaser.GameObjects.Text;$/;"	m
setShadowStroke	pilas-engine/declaraciones/phaser.d.ts	/^            setShadowStroke(enabled: boolean): Phaser.GameObjects.Text;$/;"	m
setShadowStroke	pilas-engine/declaraciones/phaser.d.ts	/^            setShadowStroke(enabled: boolean): this;$/;"	m
setShape	pilas-engine/declaraciones/phaser.d.ts	/^                setShape(graphicsGeometry: Phaser.GameObjects.Graphics): this;$/;"	m
setSize	pilas-engine/declaraciones/phaser.d.ts	/^                    setSize(width: number, height: number, center?: boolean): this;$/;"	m
setSize	pilas-engine/declaraciones/phaser.d.ts	/^                setSize(width: number, height: number): this;$/;"	m
setSize	pilas-engine/declaraciones/phaser.d.ts	/^                setSize(width: number, height?: number): this;$/;"	m
setSize	pilas-engine/declaraciones/phaser.d.ts	/^                setSize(width?: number, height?: number, center?: boolean): Phaser.Physics.Arcade.Body;$/;"	m
setSize	pilas-engine/declaraciones/phaser.d.ts	/^                setSize(width?: number, height?: number, center?: boolean): Phaser.Physics.Arcade.StaticBody;$/;"	m
setSize	pilas-engine/declaraciones/phaser.d.ts	/^            setSize(tileWidth: number, tileHeight: number, baseWidth: number, baseHeight: number): this;$/;"	m
setSize	pilas-engine/declaraciones/phaser.d.ts	/^            setSize(width: number, height: number): this;$/;"	m
setSize	pilas-engine/declaraciones/phaser.d.ts	/^            setSize(width: number, height: number, resizeInput?: boolean): this;$/;"	m
setSize	pilas-engine/declaraciones/phaser.d.ts	/^            setSize(width: number, height: number, x?: number, y?: number): Phaser.Textures.Frame;$/;"	m
setSize	pilas-engine/declaraciones/phaser.d.ts	/^            setSize(width: number, height?: number): Phaser.Textures.CanvasTexture;$/;"	m
setSize	pilas-engine/declaraciones/phaser.d.ts	/^            setSize(width: number, height?: number): this;$/;"	m
setSize	pilas-engine/declaraciones/phaser.d.ts	/^            setSize(width?: number, height?: number): this;$/;"	m
setSizeToFrame	pilas-engine/declaraciones/phaser.d.ts	/^                setSizeToFrame(frame: Phaser.Textures.Frame): this;$/;"	m
setSizeToFrame	pilas-engine/declaraciones/phaser.d.ts	/^            setSizeToFrame(frame: Phaser.Textures.Frame): this;$/;"	m
setSkew	pilas-engine/declaraciones/phaser.d.ts	/^            setSkew(x?: number, y?: number): this;$/;"	m
setSkipCull	pilas-engine/declaraciones/phaser.d.ts	/^            setSkipCull(value?: boolean): this;$/;"	m
setSleepEndEvent	pilas-engine/declaraciones/phaser.d.ts	/^                    setSleepEndEvent(value: boolean): this;$/;"	m
setSleepEndEvent	pilas-engine/declaraciones/phaser.d.ts	/^                setSleepEndEvent(value: boolean): this;$/;"	m
setSleepEvents	pilas-engine/declaraciones/phaser.d.ts	/^                    setSleepEvents(start: boolean, end: boolean): this;$/;"	m
setSleepEvents	pilas-engine/declaraciones/phaser.d.ts	/^                setSleepEvents(start: boolean, end: boolean): this;$/;"	m
setSleepStartEvent	pilas-engine/declaraciones/phaser.d.ts	/^                    setSleepStartEvent(value: boolean): this;$/;"	m
setSleepStartEvent	pilas-engine/declaraciones/phaser.d.ts	/^                setSleepStartEvent(value: boolean): this;$/;"	m
setSleepThreshold	pilas-engine/declaraciones/phaser.d.ts	/^                    setSleepThreshold(value?: number): this;$/;"	m
setSleepThreshold	pilas-engine/declaraciones/phaser.d.ts	/^                setSleepThreshold(value?: number): this;$/;"	m
setSmoothness	pilas-engine/declaraciones/phaser.d.ts	/^            setSmoothness(value: number): this;$/;"	m
setSnap	pilas-engine/declaraciones/phaser.d.ts	/^            setSnap(snapWidth?: number, snapHeight?: number): this;$/;"	m
setSpacing	pilas-engine/declaraciones/phaser.d.ts	/^            setSpacing(margin?: number, spacing?: number): Phaser.Tilemaps.Tileset;$/;"	m
setSpeed	pilas-engine/declaraciones/phaser.d.ts	/^                setSpeed(value: Phaser.Types.GameObjects.Particles.EmitterOpOnEmitType): this;$/;"	m
setSpeedX	pilas-engine/declaraciones/phaser.d.ts	/^                setSpeedX(value: Phaser.Types.GameObjects.Particles.EmitterOpOnEmitType): this;$/;"	m
setSpeedY	pilas-engine/declaraciones/phaser.d.ts	/^                setSpeedY(value: Phaser.Types.GameObjects.Particles.EmitterOpOnEmitType): this;$/;"	m
setStartAngle	pilas-engine/declaraciones/phaser.d.ts	/^            setStartAngle(value: number): this;$/;"	m
setState	pilas-engine/declaraciones/phaser.d.ts	/^            setState(value: number | string): this;$/;"	m
setStateFromEnd	pilas-engine/declaraciones/phaser.d.ts	/^            setStateFromEnd(tween: Phaser.Tweens.Tween, tweenData: Phaser.Types.Tweens.TweenDataConfig, diff: number): number;$/;"	m
setStateFromStart	pilas-engine/declaraciones/phaser.d.ts	/^            setStateFromStart(tween: Phaser.Tweens.Tween, tweenData: Phaser.Types.Tweens.TweenDataConfig, diff: number): number;$/;"	m
setStatic	pilas-engine/declaraciones/phaser.d.ts	/^                    setStatic(value: boolean): Phaser.GameObjects.GameObject;$/;"	m
setStatic	pilas-engine/declaraciones/phaser.d.ts	/^                setStatic(value: boolean): Phaser.GameObjects.GameObject;$/;"	m
setStroke	pilas-engine/declaraciones/phaser.d.ts	/^            setStroke(color: string, thickness: number): Phaser.GameObjects.Text;$/;"	m
setStroke	pilas-engine/declaraciones/phaser.d.ts	/^            setStroke(color: string, thickness: number): this;$/;"	m
setStrokeStyle	pilas-engine/declaraciones/phaser.d.ts	/^            setStrokeStyle(lineWidth?: number, color?: number, alpha?: number): this;$/;"	m
setStyle	pilas-engine/declaraciones/phaser.d.ts	/^            setStyle(style: Phaser.Types.GameObjects.Text.TextStyle, updateText?: boolean, setDefaults?: boolean): Phaser.GameObjects.Text;$/;"	m
setStyle	pilas-engine/declaraciones/phaser.d.ts	/^            setStyle(style: object): this;$/;"	m
setTargetUVs	pilas-engine/declaraciones/phaser.d.ts	/^                    setTargetUVs(source: Phaser.Renderer.WebGL.RenderTarget, target: Phaser.Renderer.WebGL.RenderTarget): void;$/;"	m
setTestString	pilas-engine/declaraciones/phaser.d.ts	/^            setTestString(string: string): Phaser.GameObjects.Text;$/;"	m
setText	pilas-engine/declaraciones/phaser.d.ts	/^            setText(text: string): this;$/;"	m
setText	pilas-engine/declaraciones/phaser.d.ts	/^            setText(value: string | string[]): this;$/;"	m
setTexture	pilas-engine/declaraciones/phaser.d.ts	/^                setTexture(key: string | Phaser.Textures.Texture, frame?: string | number): this;$/;"	m
setTexture	pilas-engine/declaraciones/phaser.d.ts	/^                setTexture(key: string, frame?: string | number): this;$/;"	m
setTexture	pilas-engine/declaraciones/phaser.d.ts	/^            setTexture(gameObject: Phaser.GameObjects.GameObject, key: string, frame?: string | number): Phaser.GameObjects.GameObject;$/;"	m
setTexture	pilas-engine/declaraciones/phaser.d.ts	/^            setTexture(key: string | Phaser.Textures.Texture, frame?: string | number): this;$/;"	m
setTexture	pilas-engine/declaraciones/phaser.d.ts	/^            setTexture(key: string, frame?: string | number): this;$/;"	m
setTexture2D	pilas-engine/declaraciones/phaser.d.ts	/^                setTexture2D(texture: WebGLTexture): number;$/;"	m
setTexture2D	pilas-engine/declaraciones/phaser.d.ts	/^                setTexture2D(texture?: WebGLTexture): number;$/;"	m
setTextureAndFrame	pilas-engine/declaraciones/phaser.d.ts	/^            setTextureAndFrame(sprite: Phaser.GameObjects.GameObject, key?: string | Phaser.Textures.Texture, frame?: string | number | Phaser.Textures.Frame, obj?: Phaser.Types.Tilemaps.TiledObject): void;$/;"	m
setTextureFilter	pilas-engine/declaraciones/phaser.d.ts	/^                setTextureFilter(texture: number, filter: number): this;$/;"	m
setTextureSource	pilas-engine/declaraciones/phaser.d.ts	/^                setTextureSource(textureSource: Phaser.Textures.TextureSource): number;$/;"	m
setTextureZero	pilas-engine/declaraciones/phaser.d.ts	/^                setTextureZero(texture: WebGLTexture, flush?: boolean): void;$/;"	m
setTileIndexCallback	pilas-engine/declaraciones/phaser.d.ts	/^            setTileIndexCallback(indexes: number | number[], callback: Function, callbackContext: object): this;$/;"	m
setTileIndexCallback	pilas-engine/declaraciones/phaser.d.ts	/^            setTileIndexCallback(indexes: number | number[], callback: Function, callbackContext: object, layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Tilemaps.Tilemap;$/;"	m
setTileLocationCallback	pilas-engine/declaraciones/phaser.d.ts	/^            setTileLocationCallback(tileX: number, tileY: number, width: number, height: number, callback: Function, callbackContext?: object, layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Tilemaps.Tilemap;$/;"	m
setTileLocationCallback	pilas-engine/declaraciones/phaser.d.ts	/^            setTileLocationCallback(tileX?: number, tileY?: number, width?: number, height?: number, callback?: Function, callbackContext?: object): this;$/;"	m
setTilePosition	pilas-engine/declaraciones/phaser.d.ts	/^            setTilePosition(x?: number, y?: number): this;$/;"	m
setTileScale	pilas-engine/declaraciones/phaser.d.ts	/^            setTileScale(x?: number, y?: number): this;$/;"	m
setTileSize	pilas-engine/declaraciones/phaser.d.ts	/^            setTileSize(tileWidth?: number, tileHeight?: number): Phaser.Tilemaps.Tileset;$/;"	m
setTime	pilas-engine/declaraciones/phaser.d.ts	/^                setTime(name: string): this;$/;"	m
setTime	pilas-engine/libs/spriter.ts	/^  setTime(time: number): void {$/;"	m
setTimeScale	pilas-engine/declaraciones/phaser.d.ts	/^            setTimeScale(value: number): this;$/;"	m
setTimeout	pilas-engine/mensajes.ts	/^    setTimeout(() => {$/;"	m
setTimeout	pilas-engine/pilas.ts	/^      setTimeout(() => {$/;"	m
setTint	pilas-engine/declaraciones/phaser.d.ts	/^                setTint(topLeft?: number, topRight?: number, bottomLeft?: number, bottomRight?: number): this;$/;"	m
setTint	pilas-engine/declaraciones/phaser.d.ts	/^                setTint(value: Phaser.Types.GameObjects.Particles.EmitterOpOnEmitType | Phaser.Types.GameObjects.Particles.EmitterOpOnUpdateType): this;$/;"	m
setTint	pilas-engine/declaraciones/phaser.d.ts	/^            setTint(topLeft: number, topRight?: number, bottomLeft?: number, bottomRight?: number): this;$/;"	m
setTint	pilas-engine/declaraciones/phaser.d.ts	/^            setTint(topLeft?: number, topRight?: number, bottomLeft?: number, bottomRight?: number): this;$/;"	m
setTint	pilas-engine/declaraciones/phaser.d.ts	/^            setTint(value: number): this;$/;"	m
setTintFill	pilas-engine/declaraciones/phaser.d.ts	/^                setTintFill(topLeft?: number, topRight?: number, bottomLeft?: number, bottomRight?: number): this;$/;"	m
setTintFill	pilas-engine/declaraciones/phaser.d.ts	/^            setTintFill(topLeft?: number, topRight?: number, bottomLeft?: number, bottomRight?: number): this;$/;"	m
setTintFill	pilas-engine/declaraciones/phaser.d.ts	/^            setTintFill(value?: boolean): this;$/;"	m
setTo	pilas-engine/declaraciones/phaser.d.ts	/^            setTo(points?: string | number[] | Phaser.Types.Math.Vector2Like[]): this;$/;"	m
setTo	pilas-engine/declaraciones/phaser.d.ts	/^            setTo(red: number, green: number, blue: number, alpha?: number, updateHSV?: boolean): Phaser.Display.Color;$/;"	m
setTo	pilas-engine/declaraciones/phaser.d.ts	/^            setTo(x1?: number, y1?: number, x2?: number, y2?: number): this;$/;"	m
setTo	pilas-engine/declaraciones/phaser.d.ts	/^            setTo(x1?: number, y1?: number, x2?: number, y2?: number, x3?: number, y3?: number): this;$/;"	m
setTo	pilas-engine/declaraciones/phaser.d.ts	/^            setTo(x: number, y: number, width: number, height: number): this;$/;"	m
setTo	pilas-engine/declaraciones/phaser.d.ts	/^            setTo(x: number, y?: number): Phaser.Math.Vector2;$/;"	m
setTo	pilas-engine/declaraciones/phaser.d.ts	/^            setTo(x?: number, y?: number): this;$/;"	m
setTo	pilas-engine/declaraciones/phaser.d.ts	/^            setTo(x?: number, y?: number, radius?: number): this;$/;"	m
setToContext	pilas-engine/declaraciones/phaser.d.ts	/^                setToContext(ctx: CanvasRenderingContext2D): CanvasRenderingContext2D;$/;"	m
setToPolar	pilas-engine/declaraciones/phaser.d.ts	/^            setToPolar(azimuth: number, radius?: number): Phaser.Math.Vector2;$/;"	m
setToSleep	pilas-engine/declaraciones/phaser.d.ts	/^                    setToSleep(): this;$/;"	m
setToSleep	pilas-engine/declaraciones/phaser.d.ts	/^                setToSleep(): this;$/;"	m
setTopOnly	pilas-engine/declaraciones/phaser.d.ts	/^            setTopOnly(value: boolean): this;$/;"	m
setTransform	pilas-engine/declaraciones/phaser.d.ts	/^                setTransform(a: number, b: number, c: number, d: number, tx: number, ty: number): this;$/;"	m
setTrapezoid	pilas-engine/declaraciones/phaser.d.ts	/^                    setTrapezoid(width: number, height: number, slope: number, options?: Phaser.Types.Physics.Matter.MatterBodyConfig): Phaser.GameObjects.GameObject;$/;"	m
setTrapezoid	pilas-engine/declaraciones/phaser.d.ts	/^                setTrapezoid(width: number, height: number, slope: number, options?: Phaser.Types.Physics.Matter.MatterBodyConfig): Phaser.GameObjects.GameObject;$/;"	m
setTrim	pilas-engine/declaraciones/phaser.d.ts	/^            setTrim(actualWidth: number, actualHeight: number, destX: number, destY: number, destWidth: number, destHeight: number): Phaser.Textures.Frame;$/;"	m
setUVs	pilas-engine/declaraciones/phaser.d.ts	/^                    setUVs(uA: number, vA: number, uB: number, vB: number, uC: number, vC: number, uD: number, vD: number): void;$/;"	m
setUVs	pilas-engine/declaraciones/phaser.d.ts	/^                setUVs(u: number, v: number): this;$/;"	m
setUVs	pilas-engine/declaraciones/phaser.d.ts	/^            setUVs(width: number, height: number, u0: number, v0: number, u1: number, v1: number): Phaser.Textures.Frame;$/;"	m
setUniform	pilas-engine/declaraciones/phaser.d.ts	/^            setUniform(key: string, value: any): this;$/;"	m
setUniform1	pilas-engine/declaraciones/phaser.d.ts	/^                setUniform1(setter: Function, name: string, value1: boolean | number | number[] | Float32Array, skipCheck?: boolean): this;$/;"	m
setUniform2	pilas-engine/declaraciones/phaser.d.ts	/^                setUniform2(setter: Function, name: string, value1: boolean | number | number[] | Float32Array, value2: boolean | number | number[] | Float32Array, skipCheck?: boolean): this;$/;"	m
setUniform3	pilas-engine/declaraciones/phaser.d.ts	/^                setUniform3(setter: Function, name: string, value1: boolean | number | number[] | Float32Array, value2: boolean | number | number[] | Float32Array, value3: boolean | number | number[] | Float32Array, skipCheck?: boolean): this;$/;"	m
setUniform4	pilas-engine/declaraciones/phaser.d.ts	/^                setUniform4(setter: Function, name: string, value1: boolean | number | number[] | Float32Array, value2: boolean | number | number[] | Float32Array, value3: boolean | number | number[] | Float32Array, value4: boolean | number | number[] | Float32Array, skipCheck?: boolean): this;$/;"	m
setUtility	pilas-engine/declaraciones/phaser.d.ts	/^                setUtility(currentShader?: Phaser.Renderer.WebGL.WebGLShader): Phaser.Renderer.WebGL.Pipelines.UtilityPipeline;$/;"	m
setValues	pilas-engine/declaraciones/phaser.d.ts	/^            setValues(m00: number, m01: number, m02: number, m03: number, m10: number, m11: number, m12: number, m13: number, m20: number, m21: number, m22: number, m23: number, m30: number, m31: number, m32: number, m33: number): this;$/;"	m
setVelocity	pilas-engine/declaraciones/phaser.d.ts	/^                    setVelocity(x: number, y?: number): Phaser.GameObjects.GameObject;$/;"	m
setVelocity	pilas-engine/declaraciones/phaser.d.ts	/^                    setVelocity(x: number, y?: number): this;$/;"	m
setVelocity	pilas-engine/declaraciones/phaser.d.ts	/^                setVelocity(bodies: Phaser.Types.Physics.Matter.MatterBody | Phaser.Types.Physics.Matter.MatterBody[], x: number, y: number): this;$/;"	m
setVelocity	pilas-engine/declaraciones/phaser.d.ts	/^                setVelocity(x: number, y: number, step?: number): Phaser.Physics.Arcade.Group;$/;"	m
setVelocity	pilas-engine/declaraciones/phaser.d.ts	/^                setVelocity(x: number, y?: number): Phaser.GameObjects.GameObject;$/;"	m
setVelocity	pilas-engine/declaraciones/phaser.d.ts	/^                setVelocity(x: number, y?: number): Phaser.Physics.Arcade.Body;$/;"	m
setVelocity	pilas-engine/declaraciones/phaser.d.ts	/^                setVelocity(x: number, y?: number): this;$/;"	m
setVelocityX	pilas-engine/declaraciones/phaser.d.ts	/^                    setVelocityX(x: number): Phaser.GameObjects.GameObject;$/;"	m
setVelocityX	pilas-engine/declaraciones/phaser.d.ts	/^                    setVelocityX(x: number): this;$/;"	m
setVelocityX	pilas-engine/declaraciones/phaser.d.ts	/^                    setVelocityX: number;$/;"	m
setVelocityX	pilas-engine/declaraciones/phaser.d.ts	/^                setVelocityX(bodies: Phaser.Types.Physics.Matter.MatterBody | Phaser.Types.Physics.Matter.MatterBody[], x: number): this;$/;"	m
setVelocityX	pilas-engine/declaraciones/phaser.d.ts	/^                setVelocityX(value: number): Phaser.Physics.Arcade.Body;$/;"	m
setVelocityX	pilas-engine/declaraciones/phaser.d.ts	/^                setVelocityX(value: number, step?: number): Phaser.Physics.Arcade.Group;$/;"	m
setVelocityX	pilas-engine/declaraciones/phaser.d.ts	/^                setVelocityX(x: number): Phaser.GameObjects.GameObject;$/;"	m
setVelocityX	pilas-engine/declaraciones/phaser.d.ts	/^                setVelocityX(x: number): this;$/;"	m
setVelocityY	pilas-engine/declaraciones/phaser.d.ts	/^                    setVelocityY(y: number): Phaser.GameObjects.GameObject;$/;"	m
setVelocityY	pilas-engine/declaraciones/phaser.d.ts	/^                    setVelocityY(y: number): this;$/;"	m
setVelocityY	pilas-engine/declaraciones/phaser.d.ts	/^                    setVelocityY: number;$/;"	m
setVelocityY	pilas-engine/declaraciones/phaser.d.ts	/^                setVelocityY(bodies: Phaser.Types.Physics.Matter.MatterBody | Phaser.Types.Physics.Matter.MatterBody[], y: number): this;$/;"	m
setVelocityY	pilas-engine/declaraciones/phaser.d.ts	/^                setVelocityY(value: number): Phaser.Physics.Arcade.Body;$/;"	m
setVelocityY	pilas-engine/declaraciones/phaser.d.ts	/^                setVelocityY(value: number, step?: number): Phaser.Physics.Arcade.Group;$/;"	m
setVelocityY	pilas-engine/declaraciones/phaser.d.ts	/^                setVelocityY(y: number): Phaser.GameObjects.GameObject;$/;"	m
setVelocityY	pilas-engine/declaraciones/phaser.d.ts	/^                setVelocityY(y: number): this;$/;"	m
setVertexBuffer	pilas-engine/declaraciones/phaser.d.ts	/^                setVertexBuffer(): boolean;$/;"	m
setVertical	pilas-engine/declaraciones/phaser.d.ts	/^            setVertical(points?: number | Phaser.Types.Math.Vector2Like[], colors?: number | number[], alphas?: number | number[]): this;$/;"	m
setViewport	pilas-engine/declaraciones/phaser.d.ts	/^                setViewport(x: number, y: number, width: number, height?: number): this;$/;"	m
setVisible	pilas-engine/declaraciones/phaser.d.ts	/^                setVisible(value: boolean): this;$/;"	m
setVisible	pilas-engine/declaraciones/phaser.d.ts	/^            setVisible(value: boolean): Phaser.Scenes.Systems;$/;"	m
setVisible	pilas-engine/declaraciones/phaser.d.ts	/^            setVisible(value: boolean): this;$/;"	m
setVisible	pilas-engine/declaraciones/phaser.d.ts	/^            setVisible(value: boolean, index?: number, direction?: number): this;$/;"	m
setVisible	pilas-engine/declaraciones/phaser.d.ts	/^            setVisible(value: boolean, key?: string | Phaser.Scene): this;$/;"	m
setVolume	pilas-engine/declaraciones/phaser.d.ts	/^            setVolume(value: number): Phaser.Sound.HTML5AudioSoundManager;$/;"	m
setVolume	pilas-engine/declaraciones/phaser.d.ts	/^            setVolume(value: number): Phaser.Sound.WebAudioSoundManager;$/;"	m
setVolume	pilas-engine/declaraciones/phaser.d.ts	/^            setVolume(value: number): this;$/;"	m
setVolume	pilas-engine/declaraciones/phaser.d.ts	/^            setVolume(value?: number): this;$/;"	m
setW	pilas-engine/declaraciones/phaser.d.ts	/^                setW(value?: number): this;$/;"	m
setW	pilas-engine/declaraciones/phaser.d.ts	/^            setW(value?: number): this;$/;"	m
setWidth	pilas-engine/declaraciones/phaser.d.ts	/^            setWidth(value: number): this;$/;"	m
setWidth	pilas-engine/declaraciones/phaser.d.ts	/^            setWidth(width: number): this;$/;"	m
setWordTint	pilas-engine/declaraciones/phaser.d.ts	/^            setWordTint(word: string | number, count?: number, tintFill?: boolean, topLeft?: number, topRight?: number, bottomLeft?: number, bottomRight?: number): this;$/;"	m
setWordWrapCallback	pilas-engine/declaraciones/phaser.d.ts	/^            setWordWrapCallback(callback: TextStyleWordWrapCallback, scope?: object): Phaser.GameObjects.Text;$/;"	m
setWordWrapCallback	pilas-engine/declaraciones/phaser.d.ts	/^            setWordWrapCallback(callback: TextStyleWordWrapCallback, scope?: object): this;$/;"	m
setWordWrapWidth	pilas-engine/declaraciones/phaser.d.ts	/^            setWordWrapWidth(width: number, useAdvancedWrap?: boolean): Phaser.GameObjects.Text;$/;"	m
setWordWrapWidth	pilas-engine/declaraciones/phaser.d.ts	/^            setWordWrapWidth(width: number, useAdvancedWrap?: boolean): this;$/;"	m
setWorldMatrix	pilas-engine/declaraciones/phaser.d.ts	/^            setWorldMatrix(rotation: Phaser.Math.Vector3, position: Phaser.Math.Vector3, scale: Phaser.Math.Vector3, viewMatrix?: Phaser.Math.Matrix4, projectionMatrix?: Phaser.Math.Matrix4): this;$/;"	m
setX	pilas-engine/declaraciones/phaser.d.ts	/^                setX(value?: number): this;$/;"	m
setX	pilas-engine/declaraciones/phaser.d.ts	/^            setX(value: number, step?: number): this;$/;"	m
setX	pilas-engine/declaraciones/phaser.d.ts	/^            setX(value?: number): this;$/;"	m
setXRadius	pilas-engine/declaraciones/phaser.d.ts	/^            setXRadius(value: number): this;$/;"	m
setXY	pilas-engine/declaraciones/phaser.d.ts	/^            setXY(x: number, y?: number, stepX?: number, stepY?: number): this;$/;"	m
setY	pilas-engine/declaraciones/phaser.d.ts	/^                setY(value?: number): this;$/;"	m
setY	pilas-engine/declaraciones/phaser.d.ts	/^            setY(value: number, step?: number): this;$/;"	m
setY	pilas-engine/declaraciones/phaser.d.ts	/^            setY(value?: number): this;$/;"	m
setYRadius	pilas-engine/declaraciones/phaser.d.ts	/^            setYRadius(value: number): this;$/;"	m
setZ	pilas-engine/declaraciones/phaser.d.ts	/^                setZ(value?: number): this;$/;"	m
setZ	pilas-engine/declaraciones/phaser.d.ts	/^            setZ(value?: number): this;$/;"	m
setZoom	pilas-engine/declaraciones/phaser.d.ts	/^                setZoom(x?: number, y?: number): this;$/;"	m
setZoom	pilas-engine/declaraciones/phaser.d.ts	/^            setZoom(value: number): this;$/;"	m
settings	pilas-engine/declaraciones/phaser.d.ts	/^                settings: Phaser.Types.Scenes.SettingsObject;$/;"	m
settings	pilas-engine/declaraciones/phaser.d.ts	/^            settings: Phaser.Types.Scenes.SettingsObject;$/;"	m
shader	pilas-engine/declaraciones/phaser.d.ts	/^            shader(config: Phaser.Types.GameObjects.Shader.ShaderConfig, addToScene?: boolean): Phaser.GameObjects.Shader;$/;"	m
shader	pilas-engine/declaraciones/phaser.d.ts	/^            shader(key: string | Phaser.Display.BaseShader, x?: number, y?: number, width?: number, height?: number, textures?: string[], textureData?: object): Phaser.GameObjects.Shader;$/;"	m
shader	pilas-engine/declaraciones/phaser.d.ts	/^            shader: Phaser.Cache.BaseCache;$/;"	m
shader	pilas-engine/declaraciones/phaser.d.ts	/^            shader: Phaser.Display.BaseShader;$/;"	m
shaders	pilas-engine/declaraciones/phaser.d.ts	/^                shaders: Phaser.Renderer.WebGL.WebGLShader[];$/;"	m
shadowBlur	pilas-engine/declaraciones/phaser.d.ts	/^            shadowBlur: number;$/;"	m
shadowColor	pilas-engine/declaraciones/phaser.d.ts	/^            shadowColor: string;$/;"	m
shadowFill	pilas-engine/declaraciones/phaser.d.ts	/^            shadowFill: boolean;$/;"	m
shadowOffsetX	pilas-engine/declaraciones/phaser.d.ts	/^            shadowOffsetX: number;$/;"	m
shadowOffsetY	pilas-engine/declaraciones/phaser.d.ts	/^            shadowOffsetY: number;$/;"	m
shadowStroke	pilas-engine/declaraciones/phaser.d.ts	/^            shadowStroke: boolean;$/;"	m
shake	pilas-engine/declaraciones/phaser.d.ts	/^                shake(duration?: number, intensity?: number | Phaser.Math.Vector2, force?: boolean, callback?: Function, context?: any): this;$/;"	m
shakeEffect	pilas-engine/declaraciones/phaser.d.ts	/^                shakeEffect: Phaser.Cameras.Scene2D.Effects.Shake;$/;"	m
shift	pilas-engine/declaraciones/phaser.d.ts	/^                    shift: Phaser.Input.Keyboard.Key;$/;"	m
shiftKey	pilas-engine/declaraciones/phaser.d.ts	/^                shiftKey: boolean;$/;"	m
shiftPosition	pilas-engine/declaraciones/phaser.d.ts	/^            shiftPosition(x: number, y: number, direction?: number): this;$/;"	m
shiftToBGR	pilas-engine/declaraciones/phaser.d.ts	/^            shiftToBGR(multiply?: boolean): this;$/;"	m
shortest	pilas-engine/declaraciones/phaser.d.ts	/^                    shortest: number;$/;"	m
shortestPath	pilas-engine/declaraciones/phaser.d.ts	/^                    shortestPath: boolean;$/;"	m
shouldFlush	pilas-engine/declaraciones/phaser.d.ts	/^                shouldFlush(amount?: number): boolean;$/;"	m
showAd	pilas-engine/declaraciones/phaser.d.ts	/^        showAd(placementID: string): this;$/;"	m
showAltCells	pilas-engine/declaraciones/phaser.d.ts	/^            showAltCells: boolean;$/;"	m
showCells	pilas-engine/declaraciones/phaser.d.ts	/^            showCells: boolean;$/;"	m
showLeft	pilas-engine/declaraciones/phaser.d.ts	/^            showLeft: boolean;$/;"	m
showLoadProgress	pilas-engine/declaraciones/phaser.d.ts	/^        showLoadProgress(scene: Phaser.Scene): this;$/;"	m
showOnStart	pilas-engine/declaraciones/phaser.d.ts	/^                showOnStart: boolean;$/;"	m
showOnStart	pilas-engine/declaraciones/phaser.d.ts	/^            showOnStart: boolean;$/;"	m
showOutline	pilas-engine/declaraciones/phaser.d.ts	/^            showOutline: boolean;$/;"	m
showRight	pilas-engine/declaraciones/phaser.d.ts	/^            showRight: boolean;$/;"	m
showTop	pilas-engine/declaraciones/phaser.d.ts	/^            showTop: boolean;$/;"	m
showVideo	pilas-engine/declaraciones/phaser.d.ts	/^        showVideo(placementID: string): this;$/;"	m
shown	pilas-engine/declaraciones/phaser.d.ts	/^    shown: boolean;$/;"	m
shuffle	pilas-engine/declaraciones/phaser.d.ts	/^            shuffle(): Phaser.Structs.List<T>;$/;"	m
shuffle	pilas-engine/declaraciones/phaser.d.ts	/^            shuffle(): this;$/;"	m
shuffle	pilas-engine/declaraciones/phaser.d.ts	/^            shuffle(tileX?: number, tileY?: number, width?: number, height?: number): this;$/;"	m
shuffle	pilas-engine/declaraciones/phaser.d.ts	/^            shuffle(tileX?: number, tileY?: number, width?: number, height?: number, layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Tilemaps.Tilemap;$/;"	m
shutdown	pilas-engine/declaraciones/phaser.d.ts	/^                shutdown(): void;$/;"	m
shutdown	pilas-engine/declaraciones/phaser.d.ts	/^            shutdown(): void;$/;"	m
shutdown	pilas-engine/declaraciones/phaser.d.ts	/^            shutdown(data?: object): void;$/;"	m
sign	pilas-engine/declaraciones/phaser.d.ts	/^            sign(): number;$/;"	m
signs	pilas-engine/declaraciones/phaser.d.ts	/^            signs: number[];$/;"	m
silk	pilas-engine/declaraciones/phaser.d.ts	/^            silk: boolean;$/;"	m
similitud	pilas-engine/comportamientos.ts	/^        similitud: this.pilas.utilidades.obtener_similaridad(h.nombre, comportamiento),$/;"	m
similitud	pilas-engine/habilidades.ts	/^        similitud: this.pilas.utilidades.obtener_similaridad($/;"	m
similitud	pilas-engine/utilidades.ts	/^        similitud: this.obtener_similaridad(h, nombre),$/;"	m
simular_pulsacion	pilas-engine/control.ts	/^  simular_pulsacion(nombre: string, pulsacion: boolean) {$/;"	m
sin	pilas-engine/declaraciones/phaser.d.ts	/^                sin: number;$/;"	m
sin	pilas-engine/libs/spriter.ts	/^  get sin(): number {$/;"	m
sin_rotacion	pilas-engine/actores/-actor-base.ts	/^  sin_rotacion: false;$/;"	m
sincronizar_contenedor	pilas-engine/utilidades.ts	/^  sincronizar_contenedor(contenedor, sprite) {$/;"	m
size	pilas-engine/declaraciones/phaser.d.ts	/^                    size: number;$/;"	m
size	pilas-engine/declaraciones/phaser.d.ts	/^                size: number;$/;"	m
size	pilas-engine/declaraciones/phaser.d.ts	/^            size: number;$/;"	m
skewX	pilas-engine/declaraciones/phaser.d.ts	/^            skewX: number;$/;"	m
skewY	pilas-engine/declaraciones/phaser.d.ts	/^            skewY: number;$/;"	m
skipCull	pilas-engine/declaraciones/phaser.d.ts	/^            skipCull: boolean;$/;"	m
skipMissedFrames	pilas-engine/declaraciones/phaser.d.ts	/^                skipMissedFrames: boolean;$/;"	m
skipMissedFrames	pilas-engine/declaraciones/phaser.d.ts	/^            skipMissedFrames: boolean;$/;"	m
sleep	pilas-engine/declaraciones/phaser.d.ts	/^            sleep(): void;$/;"	m
sleep	pilas-engine/declaraciones/phaser.d.ts	/^            sleep(data?: object): Phaser.Scenes.Systems;$/;"	m
sleep	pilas-engine/declaraciones/phaser.d.ts	/^            sleep(key: string | Phaser.Scene, data?: object): this;$/;"	m
sleep	pilas-engine/declaraciones/phaser.d.ts	/^            sleep(key?: string | Phaser.Scene, data?: object): this;$/;"	m
slerp	pilas-engine/declaraciones/phaser.d.ts	/^            slerp(b: Phaser.Math.Quaternion | Phaser.Math.Vector4, t: number): Phaser.Math.Quaternion;$/;"	m
slice	pilas-engine/declaraciones/phaser.d.ts	/^            slice(x: number, y: number, radius: number, startAngle: number, endAngle: number, anticlockwise?: boolean, overshoot?: number): this;$/;"	m
slop	pilas-engine/declaraciones/phaser.d.ts	/^                    slop: number;$/;"	m
slope	pilas-engine/laser.ts	/^  get slope() {$/;"	m
smooth	pilas-engine/declaraciones/phaser.d.ts	/^            smooth(iterations?: number): this;$/;"	m
smoothFactor	pilas-engine/declaraciones/phaser.d.ts	/^            smoothFactor: number;$/;"	m
smoothStep	pilas-engine/declaraciones/phaser.d.ts	/^            smoothStep: boolean;$/;"	m
smoothness	pilas-engine/declaraciones/phaser.d.ts	/^            smoothness: number;$/;"	m
snapTo	pilas-engine/declaraciones/phaser.d.ts	/^            readonly snapTo: Phaser.Math.Vector2;$/;"	m
snapshot	pilas-engine/declaraciones/phaser.d.ts	/^                snapshot(callback: Phaser.Types.Renderer.Snapshot.SnapshotCallback, type?: string, encoderOptions?: number): this;$/;"	m
snapshot	pilas-engine/declaraciones/phaser.d.ts	/^            snapshot(callback: Phaser.Types.Renderer.Snapshot.SnapshotCallback, type?: string, encoderOptions?: number): this;$/;"	m
snapshot	pilas-engine/declaraciones/phaser.d.ts	/^            snapshot(width?: number, height?: number): Phaser.Textures.CanvasTexture;$/;"	m
snapshotArea	pilas-engine/declaraciones/phaser.d.ts	/^                snapshotArea(x: number, y: number, width: number, height: number, callback: Phaser.Types.Renderer.Snapshot.SnapshotCallback, type?: string, encoderOptions?: number): this;$/;"	m
snapshotArea	pilas-engine/declaraciones/phaser.d.ts	/^            snapshotArea(x: number, y: number, width: number, height: number, callback: Phaser.Types.Renderer.Snapshot.SnapshotCallback, type?: string, encoderOptions?: number): this;$/;"	m
snapshotArea	pilas-engine/declaraciones/phaser.d.ts	/^            snapshotArea(x?: number, y?: number, srcWidth?: number, srcHeight?: number, destWidth?: number, destHeight?: number): Phaser.Textures.CanvasTexture;$/;"	m
snapshotCanvas	pilas-engine/declaraciones/phaser.d.ts	/^                snapshotCanvas(canvas: HTMLCanvasElement, callback: Phaser.Types.Renderer.Snapshot.SnapshotCallback, getPixel?: boolean, x?: number, y?: number, width?: number, height?: number, type?: string, encoderOptions?: number): this;$/;"	m
snapshotFramebuffer	pilas-engine/declaraciones/phaser.d.ts	/^                snapshotFramebuffer(framebuffer: WebGLFramebuffer, bufferWidth: number, bufferHeight: number, callback: Phaser.Types.Renderer.Snapshot.SnapshotCallback, getPixel?: boolean, x?: number, y?: number, width?: number, height?: number, type?: string, encoderOptions?: number): this;$/;"	m
snapshotPixel	pilas-engine/declaraciones/phaser.d.ts	/^                snapshotPixel(x: number, y: number, callback: Phaser.Types.Renderer.Snapshot.SnapshotCallback): this;$/;"	m
snapshotPixel	pilas-engine/declaraciones/phaser.d.ts	/^            snapshotPixel(x: number, y: number, callback: Phaser.Types.Renderer.Snapshot.SnapshotCallback): this;$/;"	m
snapshotState	pilas-engine/declaraciones/phaser.d.ts	/^                snapshotState: Phaser.Types.Renderer.Snapshot.SnapshotState;$/;"	m
snapshotTexture	pilas-engine/declaraciones/phaser.d.ts	/^            snapshotTexture: Phaser.Textures.CanvasTexture;$/;"	m
softBody	pilas-engine/declaraciones/phaser.d.ts	/^                softBody(x: number, y: number, columns: number, rows: number, columnGap: number, rowGap: number, crossBrace: boolean, particleRadius: number, particleOptions?: Phaser.Types.Physics.Matter.MatterBodyConfig, constraintOptions?: Phaser.Types.Physics.Matter.MatterConstraintConfig): MatterJS.CompositeType;$/;"	m
solicitar_modo_pantalla_completa	pilas-engine/pilas.ts	/^  solicitar_modo_pantalla_completa() {$/;"	m
solicitar_modo_ventana	pilas-engine/pilas.ts	/^  solicitar_modo_ventana() {$/;"	m
sonidos	pilas-engine/pilas.ts	/^        sonidos: [$/;"	m
sonidos	pilas-engine/pilas.ts	/^  sonidos: Sonidos;$/;"	m
sort	pilas-engine/declaraciones/phaser.d.ts	/^            sort(property: string, handler?: Function): T[];$/;"	m
sort	pilas-engine/declaraciones/phaser.d.ts	/^            sort(property: string, handler?: Function): this;$/;"	m
sortByDepth	pilas-engine/declaraciones/phaser.d.ts	/^            sortByDepth(childA: Phaser.GameObjects.GameObject, childB: Phaser.GameObjects.GameObject): number;$/;"	m
sortByDepth	pilas-engine/declaraciones/phaser.d.ts	/^            sortByDepth(faceA: Phaser.Geom.Mesh.Face, faceB: Phaser.Geom.Mesh.Face): number;$/;"	m
sortChildrenFlag	pilas-engine/declaraciones/phaser.d.ts	/^            sortChildrenFlag: boolean;$/;"	m
sortDropZones	pilas-engine/declaraciones/phaser.d.ts	/^            sortDropZones(gameObjects: Phaser.GameObjects.GameObject[]): Phaser.GameObjects.GameObject[];$/;"	m
sortGameObjects	pilas-engine/declaraciones/phaser.d.ts	/^            sortGameObjects(gameObjects: Phaser.GameObjects.GameObject[], pointer: Phaser.Input.Pointer): Phaser.GameObjects.GameObject[];$/;"	m
sound	pilas-engine/declaraciones/phaser.d.ts	/^            sound: Phaser.Sound.NoAudioSoundManager | Phaser.Sound.HTML5AudioSoundManager | Phaser.Sound.WebAudioSoundManager;$/;"	m
sound	pilas-engine/declaraciones/phaser.d.ts	/^        sound: Phaser.Sound.NoAudioSoundManager | Phaser.Sound.HTML5AudioSoundManager | Phaser.Sound.WebAudioSoundManager;$/;"	m
sound	pilas-engine/libs/spriter.ts	/^  sound: SoundObject;$/;"	m
sound_array	pilas-engine/libs/spriter.ts	/^  sound_array: any[] = [];$/;"	m
soundline_array	pilas-engine/libs/spriter.ts	/^  soundline_array: Soundline[];$/;"	m
source	pilas-engine/declaraciones/phaser.d.ts	/^                    source: Phaser.Math.Vector2;$/;"	m
source	pilas-engine/declaraciones/phaser.d.ts	/^                    source: Phaser.Types.GameObjects.Particles.DeathZoneSource;$/;"	m
source	pilas-engine/declaraciones/phaser.d.ts	/^                    source: Phaser.Types.GameObjects.Particles.EdgeZoneSource | Phaser.Types.GameObjects.Particles.RandomZoneSource;$/;"	m
source	pilas-engine/declaraciones/phaser.d.ts	/^                    source: Phaser.Types.GameObjects.Particles.EdgeZoneSource;$/;"	m
source	pilas-engine/declaraciones/phaser.d.ts	/^                    source: Phaser.Types.GameObjects.Particles.RandomZoneSource;$/;"	m
source	pilas-engine/declaraciones/phaser.d.ts	/^                    source: any;$/;"	m
source	pilas-engine/declaraciones/phaser.d.ts	/^                    source: number;$/;"	m
source	pilas-engine/declaraciones/phaser.d.ts	/^            source: AudioBufferSourceNode;$/;"	m
source	pilas-engine/declaraciones/phaser.d.ts	/^            source: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement | Phaser.GameObjects.RenderTexture | WebGLTexture | Phaser.Types.Textures.CompressedTextureData;$/;"	m
source	pilas-engine/declaraciones/phaser.d.ts	/^            source: Phaser.Textures.TextureSource;$/;"	m
source	pilas-engine/declaraciones/phaser.d.ts	/^            source: Phaser.Textures.TextureSource[];$/;"	m
sourceHeight	pilas-engine/declaraciones/phaser.d.ts	/^                sourceHeight: number;$/;"	m
sourceIndex	pilas-engine/declaraciones/phaser.d.ts	/^            sourceIndex: number;$/;"	m
sourceWidth	pilas-engine/declaraciones/phaser.d.ts	/^                sourceWidth: number;$/;"	m
sow	pilas-engine/declaraciones/phaser.d.ts	/^            sow(seeds: string[]): void;$/;"	m
space	pilas-engine/declaraciones/phaser.d.ts	/^                    space: Phaser.Input.Keyboard.Key;$/;"	m
speed	pilas-engine/declaraciones/phaser.d.ts	/^                speed: number;$/;"	m
speedX	pilas-engine/declaraciones/phaser.d.ts	/^                speedX: Phaser.GameObjects.Particles.EmitterOp;$/;"	m
speedX	pilas-engine/declaraciones/phaser.d.ts	/^                speedX: number;$/;"	m
speedY	pilas-engine/declaraciones/phaser.d.ts	/^                speedY: Phaser.GameObjects.Particles.EmitterOp;$/;"	m
speedY	pilas-engine/declaraciones/phaser.d.ts	/^                speedY: number;$/;"	m
spin	pilas-engine/libs/spriter.ts	/^  spin: number = 1; \/\/ 1: counter-clockwise, -1: clockwise$/;"	m
splineTo	pilas-engine/declaraciones/phaser.d.ts	/^            splineTo(points: Phaser.Math.Vector2[]): this;$/;"	m
splitRegExp	pilas-engine/declaraciones/phaser.d.ts	/^            splitRegExp: object;$/;"	m
spring	pilas-engine/declaraciones/phaser.d.ts	/^                spring(bodyA: MatterJS.BodyType, bodyB: MatterJS.BodyType, length?: number, stiffness?: number, options?: Phaser.Types.Physics.Matter.MatterConstraintConfig): MatterJS.ConstraintType;$/;"	m
sprite	pilas-engine/actores/-actor-base.ts	/^  sprite: Phaser.GameObjects.Sprite;$/;"	m
sprite	pilas-engine/declaraciones/phaser.d.ts	/^                sprite(x: number, y: number, key: string, frame?: string | number): Phaser.Types.Physics.Arcade.SpriteWithDynamicBody;$/;"	m
sprite	pilas-engine/declaraciones/phaser.d.ts	/^                sprite(x: number, y: number, key: string, frame?: string | number, options?: Phaser.Types.Physics.Matter.MatterBodyConfig): Phaser.Physics.Matter.Sprite;$/;"	m
sprite	pilas-engine/declaraciones/phaser.d.ts	/^                sprite: Phaser.GameObjects.Components.TransformMatrix;$/;"	m
sprite	pilas-engine/declaraciones/phaser.d.ts	/^            sprite(config: Phaser.Types.GameObjects.Sprite.SpriteConfig, addToScene?: boolean): Phaser.GameObjects.Sprite;$/;"	m
sprite	pilas-engine/declaraciones/phaser.d.ts	/^            sprite(x: number, y: number, texture: string | Phaser.Textures.Texture, frame?: string | number): Phaser.GameObjects.Sprite;$/;"	m
sprite	pilas-engine/libs/spriter.ts	/^  sprite: SpriteObject;$/;"	m
sprite	pilas-engine/modos/actor_en_modo_edicion.ts	/^  sprite: Phaser.GameObjects.Sprite;$/;"	m
sprite_borde_de_la_camara	pilas-engine/modos/modo_deprecated.ts	/^  sprite_borde_de_la_camara: Phaser.GameObjects.Sprite;$/;"	m
sprite_cursor_de_la_grilla	pilas-engine/modos/modo_deprecated.ts	/^  sprite_cursor_de_la_grilla: Phaser.GameObjects.Sprite;$/;"	m
sprite_cursor_de_la_grilla	pilas-engine/modos/modo_editor.ts	/^  sprite_cursor_de_la_grilla: Phaser.GameObjects.Sprite;$/;"	m
sprite_frame_array	pilas-engine/libs/spriter.ts	/^  sprite_frame_array: SpriteFrame[];$/;"	m
spritemap	pilas-engine/declaraciones/phaser.d.ts	/^                spritemap: object;$/;"	m
sprites	pilas-engine/huesos.ts	/^  sprites: any = {};$/;"	m
sprites	pilas-engine/modos/modo_pausa.ts	/^  sprites: any;$/;"	m
spritesheet	pilas-engine/declaraciones/phaser.d.ts	/^            spritesheet(key: string | Phaser.Types.Loader.FileTypes.SpriteSheetFileConfig | Phaser.Types.Loader.FileTypes.SpriteSheetFileConfig[], url?: string, frameConfig?: Phaser.Types.Loader.FileTypes.ImageFrameConfig, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject): this;$/;"	m
src	pilas-engine/declaraciones/phaser.d.ts	/^            src: string;$/;"	m
stack	pilas-engine/declaraciones/phaser.d.ts	/^                stack(x: number, y: number, columns: number, rows: number, columnGap: number, rowGap: number, callback: Function): MatterJS.CompositeType;$/;"	m
stack	pilas-engine/mensajes.ts	/^      stack: stacktrace$/;"	m
stacktrace	pilas-engine/mensajes.ts	/^      stacktrace: stacktrace,$/;"	m
stagger	pilas-engine/declaraciones/phaser.d.ts	/^            stagger(value: number | number[], config: Phaser.Types.Tweens.StaggerConfig): Function;$/;"	m
star	pilas-engine/declaraciones/phaser.d.ts	/^            star(x?: number, y?: number, points?: number, innerRadius?: number, outerRadius?: number, fillColor?: number, fillAlpha?: number): Phaser.GameObjects.Star;$/;"	m
start	pilas-engine/declaraciones/phaser.d.ts	/^                    start(direction?: boolean, duration?: number, red?: number, green?: number, blue?: number, force?: boolean, callback?: Phaser.Types.Cameras.Scene2D.CameraFadeCallback, context?: any): Phaser.Cameras.Scene2D.Camera;$/;"	m
start	pilas-engine/declaraciones/phaser.d.ts	/^                    start(duration?: number, intensity?: number | Phaser.Math.Vector2, force?: boolean, callback?: Phaser.Types.Cameras.Scene2D.CameraShakeCallback, context?: any): Phaser.Cameras.Scene2D.Camera;$/;"	m
start	pilas-engine/declaraciones/phaser.d.ts	/^                    start(duration?: number, red?: number, green?: number, blue?: number, force?: boolean, callback?: Phaser.Types.Cameras.Scene2D.CameraFlashCallback, context?: any): Phaser.Cameras.Scene2D.Camera;$/;"	m
start	pilas-engine/declaraciones/phaser.d.ts	/^                    start(radians: number, shortestPath?: boolean, duration?: number, ease?: string | Function, force?: boolean, callback?: CameraRotateCallback, context?: any): Phaser.Cameras.Scene2D.Camera;$/;"	m
start	pilas-engine/declaraciones/phaser.d.ts	/^                    start(x: number, y: number, duration?: number, ease?: string | Function, force?: boolean, callback?: Phaser.Types.Cameras.Scene2D.CameraPanCallback, context?: any): Phaser.Cameras.Scene2D.Camera;$/;"	m
start	pilas-engine/declaraciones/phaser.d.ts	/^                    start(zoom: number, duration?: number, ease?: string | Function, force?: boolean, callback?: Phaser.Types.Cameras.Scene2D.CameraZoomCallback, context?: any): Phaser.Cameras.Scene2D.Camera;$/;"	m
start	pilas-engine/declaraciones/phaser.d.ts	/^                    start: number;$/;"	m
start	pilas-engine/declaraciones/phaser.d.ts	/^                start(): this;$/;"	m
start	pilas-engine/declaraciones/phaser.d.ts	/^                start: number;$/;"	m
start	pilas-engine/declaraciones/phaser.d.ts	/^            start(): void;$/;"	m
start	pilas-engine/declaraciones/phaser.d.ts	/^            start(callback: FrameRequestCallback, forceSetTimeOut: boolean, targetFPS: number): void;$/;"	m
start	pilas-engine/declaraciones/phaser.d.ts	/^            start(callback: Phaser.Types.Core.TimeStepCallback): void;$/;"	m
start	pilas-engine/declaraciones/phaser.d.ts	/^            start(data: object): void;$/;"	m
start	pilas-engine/declaraciones/phaser.d.ts	/^            start(key: string | Phaser.Scene, data?: object): this;$/;"	m
start	pilas-engine/declaraciones/phaser.d.ts	/^            start(key: string, runAs?: string): Phaser.Plugins.BasePlugin;$/;"	m
start	pilas-engine/declaraciones/phaser.d.ts	/^            start(key?: string | Phaser.Scene, data?: object): this;$/;"	m
start	pilas-engine/declaraciones/phaser.d.ts	/^        protected start(): void;$/;"	m
start	pilas-engine/laser.ts	/^  start: any;$/;"	m
startActiveTexture	pilas-engine/declaraciones/phaser.d.ts	/^                startActiveTexture: number;$/;"	m
startAngle	pilas-engine/declaraciones/phaser.d.ts	/^                startAngle: number;$/;"	m
startAngle	pilas-engine/declaraciones/phaser.d.ts	/^            startAngle: number;$/;"	m
startAnimation	pilas-engine/declaraciones/phaser.d.ts	/^            startAnimation(key: string | Phaser.Types.Animations.PlayAnimationConfig): Phaser.GameObjects.GameObject;$/;"	m
startAt	pilas-engine/declaraciones/phaser.d.ts	/^            startAt: number;$/;"	m
startDelay	pilas-engine/declaraciones/phaser.d.ts	/^            startDelay: number;$/;"	m
startFollow	pilas-engine/declaraciones/phaser.d.ts	/^                startFollow(config?: number | Phaser.Types.GameObjects.PathFollower.PathConfig | Phaser.Types.Tweens.NumberTweenBuilderConfig, startAt?: number): this;$/;"	m
startFollow	pilas-engine/declaraciones/phaser.d.ts	/^                startFollow(target: Phaser.GameObjects.GameObject | object, roundPixels?: boolean, lerpX?: number, lerpY?: number, offsetX?: number, offsetY?: number): this;$/;"	m
startFollow	pilas-engine/declaraciones/phaser.d.ts	/^                startFollow(target: Phaser.GameObjects.GameObject, offsetX?: number, offsetY?: number, trackVisible?: boolean): this;$/;"	m
startFollow	pilas-engine/declaraciones/phaser.d.ts	/^            startFollow(config?: number | Phaser.Types.GameObjects.PathFollower.PathConfig | Phaser.Types.Tweens.NumberTweenBuilderConfig, startAt?: number): this;$/;"	m
startFullscreen	pilas-engine/declaraciones/phaser.d.ts	/^            startFullscreen(fullscreenOptions?: object): void;$/;"	m
startListeners	pilas-engine/declaraciones/phaser.d.ts	/^                startListeners(): void;$/;"	m
startListeners	pilas-engine/declaraciones/phaser.d.ts	/^            startListeners(): void;$/;"	m
startPoint	pilas-engine/declaraciones/phaser.d.ts	/^            startPoint: Phaser.Math.Vector2;$/;"	m
startTime	pilas-engine/declaraciones/phaser.d.ts	/^            startTime: number;$/;"	m
started	pilas-engine/declaraciones/phaser.d.ts	/^            readonly started: boolean;$/;"	m
state	pilas-engine/declaraciones/phaser.d.ts	/^            readonly state: number;$/;"	m
state	pilas-engine/declaraciones/phaser.d.ts	/^            state(state?: string): string;$/;"	m
state	pilas-engine/declaraciones/phaser.d.ts	/^            state: number | string;$/;"	m
state	pilas-engine/declaraciones/phaser.d.ts	/^            state: number;$/;"	m
staticBodies	pilas-engine/declaraciones/phaser.d.ts	/^                staticBodies: Phaser.Structs.Set<Phaser.Physics.Arcade.StaticBody>;$/;"	m
staticBodyDebugColor	pilas-engine/declaraciones/phaser.d.ts	/^                    staticBodyDebugColor: number;$/;"	m
staticGroup	pilas-engine/declaraciones/phaser.d.ts	/^                staticGroup(children?: Phaser.GameObjects.GameObject[] | Phaser.Types.GameObjects.Group.GroupConfig | Phaser.Types.GameObjects.Group.GroupCreateConfig, config?: Phaser.Types.GameObjects.Group.GroupConfig | Phaser.Types.GameObjects.Group.GroupCreateConfig): Phaser.Physics.Arcade.StaticGroup;$/;"	m
staticImage	pilas-engine/declaraciones/phaser.d.ts	/^                staticImage(x: number, y: number, texture: string | Phaser.Textures.Texture, frame?: string | number): Phaser.Types.Physics.Arcade.ImageWithStaticBody;$/;"	m
staticSprite	pilas-engine/declaraciones/phaser.d.ts	/^                staticSprite(x: number, y: number, texture: string | Phaser.Textures.Texture, frame?: string | number): Phaser.Types.Physics.Arcade.SpriteWithStaticBody;$/;"	m
staticTree	pilas-engine/declaraciones/phaser.d.ts	/^                staticTree: Phaser.Structs.RTree;$/;"	m
staticValueEmit	pilas-engine/declaraciones/phaser.d.ts	/^                staticValueEmit(): number;$/;"	m
staticValueUpdate	pilas-engine/declaraciones/phaser.d.ts	/^                staticValueUpdate(): number;$/;"	m
status	pilas-engine/declaraciones/phaser.d.ts	/^                status: number;$/;"	m
step	pilas-engine/declaraciones/phaser.d.ts	/^                step(delta: number): void;$/;"	m
step	pilas-engine/declaraciones/phaser.d.ts	/^                step(delta?: number, correction?: number): void;$/;"	m
step	pilas-engine/declaraciones/phaser.d.ts	/^            step(): void;$/;"	m
step	pilas-engine/declaraciones/phaser.d.ts	/^            step(time: number, delta: number): void;$/;"	m
step	pilas-engine/declaraciones/phaser.d.ts	/^            step: FrameRequestCallback;$/;"	m
step	pilas-engine/declaraciones/phaser.d.ts	/^        step(time: number, delta: number): void;$/;"	m
stepRate	pilas-engine/declaraciones/phaser.d.ts	/^                    stepRate: number;$/;"	m
stepTimeout	pilas-engine/declaraciones/phaser.d.ts	/^            stepTimeout: Function;$/;"	m
steppedEmit	pilas-engine/declaraciones/phaser.d.ts	/^                steppedEmit(): number;$/;"	m
steps	pilas-engine/declaraciones/phaser.d.ts	/^                    steps: number;$/;"	m
steps	pilas-engine/declaraciones/phaser.d.ts	/^                steps: number;$/;"	m
stepsLastFrame	pilas-engine/declaraciones/phaser.d.ts	/^                readonly stepsLastFrame: number;$/;"	m
stop	pilas-engine/declaraciones/phaser.d.ts	/^                stop(): Phaser.Physics.Arcade.Body;$/;"	m
stop	pilas-engine/declaraciones/phaser.d.ts	/^                stop(): Phaser.Physics.Arcade.StaticBody;$/;"	m
stop	pilas-engine/declaraciones/phaser.d.ts	/^                stop(): this;$/;"	m
stop	pilas-engine/declaraciones/phaser.d.ts	/^            stop(): Phaser.GameObjects.GameObject;$/;"	m
stop	pilas-engine/declaraciones/phaser.d.ts	/^            stop(): boolean;$/;"	m
stop	pilas-engine/declaraciones/phaser.d.ts	/^            stop(): this;$/;"	m
stop	pilas-engine/declaraciones/phaser.d.ts	/^            stop(): void;$/;"	m
stop	pilas-engine/declaraciones/phaser.d.ts	/^            stop(key: string | Phaser.Scene, data?: object): this;$/;"	m
stop	pilas-engine/declaraciones/phaser.d.ts	/^            stop(key: string): this;$/;"	m
stop	pilas-engine/declaraciones/phaser.d.ts	/^            stop(key?: string | Phaser.Scene, data?: any): this;$/;"	m
stop	pilas-engine/declaraciones/phaser.d.ts	/^            stop(resetTo?: number): this;$/;"	m
stopAfterDelay	pilas-engine/declaraciones/phaser.d.ts	/^            stopAfterDelay(delay: number): Phaser.GameObjects.GameObject;$/;"	m
stopAfterDelay	pilas-engine/declaraciones/phaser.d.ts	/^            stopAfterDelay(delay: number): this;$/;"	m
stopAfterRepeat	pilas-engine/declaraciones/phaser.d.ts	/^            stopAfterRepeat(repeatCount?: number): Phaser.GameObjects.GameObject;$/;"	m
stopAfterRepeat	pilas-engine/declaraciones/phaser.d.ts	/^            stopAfterRepeat(repeatCount?: number): this;$/;"	m
stopAll	pilas-engine/declaraciones/phaser.d.ts	/^            stopAll(): void;$/;"	m
stopByKey	pilas-engine/declaraciones/phaser.d.ts	/^            stopByKey(key: string): number;$/;"	m
stopDrag	pilas-engine/declaraciones/phaser.d.ts	/^                stopDrag(): void;$/;"	m
stopFollow	pilas-engine/declaraciones/phaser.d.ts	/^                stopFollow(): this;$/;"	m
stopFollow	pilas-engine/declaraciones/phaser.d.ts	/^            stopFollow(): this;$/;"	m
stopFullscreen	pilas-engine/declaraciones/phaser.d.ts	/^            stopFullscreen(): void;$/;"	m
stopListeners	pilas-engine/declaraciones/phaser.d.ts	/^                stopListeners(): void;$/;"	m
stopListeners	pilas-engine/declaraciones/phaser.d.ts	/^            stopListeners(): void;$/;"	m
stopOnFrame	pilas-engine/declaraciones/phaser.d.ts	/^            stopOnFrame(frame: Phaser.Animations.AnimationFrame): Phaser.GameObjects.GameObject;$/;"	m
stopOnFrame	pilas-engine/declaraciones/phaser.d.ts	/^            stopOnFrame(frame: Phaser.Animations.AnimationFrame): this;$/;"	m
stopPropagation	pilas-engine/declaraciones/phaser.d.ts	/^                stopPropagation: Function;$/;"	m
stopPropagation	pilas-engine/declaraciones/phaser.d.ts	/^            stopPropagation(): this;$/;"	m
strike	pilas-engine/libs/spriter.ts	/^  strike(): void {$/;"	m
stroke	pilas-engine/declaraciones/phaser.d.ts	/^            stroke(): this;$/;"	m
stroke	pilas-engine/declaraciones/phaser.d.ts	/^            stroke: string;$/;"	m
strokeAlpha	pilas-engine/declaraciones/phaser.d.ts	/^            strokeAlpha: number;$/;"	m
strokeCircle	pilas-engine/declaraciones/phaser.d.ts	/^            strokeCircle(x: number, y: number, radius: number): this;$/;"	m
strokeCircleShape	pilas-engine/declaraciones/phaser.d.ts	/^            strokeCircleShape(circle: Phaser.Geom.Circle): this;$/;"	m
strokeColor	pilas-engine/declaraciones/phaser.d.ts	/^            strokeColor: number;$/;"	m
strokeEllipse	pilas-engine/declaraciones/phaser.d.ts	/^            strokeEllipse(x: number, y: number, width: number, height: number, smoothness?: number): this;$/;"	m
strokeEllipseShape	pilas-engine/declaraciones/phaser.d.ts	/^            strokeEllipseShape(ellipse: Phaser.Geom.Ellipse, smoothness?: number): this;$/;"	m
strokeLineShape	pilas-engine/declaraciones/phaser.d.ts	/^            strokeLineShape(line: Phaser.Geom.Line): this;$/;"	m
strokePath	pilas-engine/declaraciones/phaser.d.ts	/^            strokePath(): this;$/;"	m
strokePoints	pilas-engine/declaraciones/phaser.d.ts	/^            strokePoints(points: any[] | Phaser.Geom.Point[], closeShape?: boolean, closePath?: boolean, endIndex?: number): this;$/;"	m
strokeRect	pilas-engine/declaraciones/phaser.d.ts	/^            strokeRect(x: number, y: number, width: number, height: number): this;$/;"	m
strokeRectShape	pilas-engine/declaraciones/phaser.d.ts	/^            strokeRectShape(rect: Phaser.Geom.Rectangle): this;$/;"	m
strokeRoundedRect	pilas-engine/declaraciones/phaser.d.ts	/^            strokeRoundedRect(x: number, y: number, width: number, height: number, radius?: Phaser.Types.GameObjects.Graphics.RoundedRectRadius | number): this;$/;"	m
strokeThickness	pilas-engine/declaraciones/phaser.d.ts	/^            strokeThickness: number;$/;"	m
strokeTriangle	pilas-engine/declaraciones/phaser.d.ts	/^            strokeTriangle(x0: number, y0: number, x1: number, y1: number, x2: number, y2: number): this;$/;"	m
strokeTriangleShape	pilas-engine/declaraciones/phaser.d.ts	/^            strokeTriangleShape(triangle: Phaser.Geom.Triangle): this;$/;"	m
style	pilas-engine/declaraciones/phaser.d.ts	/^            style: Phaser.GameObjects.TextStyle;$/;"	m
subdividir_lista	pilas-engine/pilas.ts	/^  subdividir_lista(lista_original, cantidad_de_elementos: number) {$/;"	m
subscribeBot	pilas-engine/declaraciones/phaser.d.ts	/^        subscribeBot(): this;$/;"	m
subtract	pilas-engine/declaraciones/phaser.d.ts	/^            subtract(src: Phaser.Types.Math.Vector2Like): Phaser.Math.Vector2;$/;"	m
subtract	pilas-engine/declaraciones/phaser.d.ts	/^            subtract(v: Phaser.Math.Quaternion | Phaser.Math.Vector4): Phaser.Math.Quaternion;$/;"	m
subtract	pilas-engine/declaraciones/phaser.d.ts	/^            subtract(v: Phaser.Math.Vector2 | Phaser.Math.Vector3 | Phaser.Math.Vector4): Phaser.Math.Vector4;$/;"	m
subtract	pilas-engine/declaraciones/phaser.d.ts	/^            subtract(v: Phaser.Math.Vector2 | Phaser.Math.Vector3): Phaser.Math.Vector3;$/;"	m
suelo	pilas-engine/actores.ts	/^  suelo() {$/;"	m
suelo	pilas-engine/actores/suelo.ts	/^class suelo extends Actor {$/;"	c
super	pilas-engine/animacion_nula.ts	/^    super(null, null, null, null, null);$/;"	m
super	pilas-engine/libs/spriter.ts	/^    super("bone");$/;"	m
super	pilas-engine/libs/spriter.ts	/^    super("box");$/;"	m
super	pilas-engine/libs/spriter.ts	/^    super("entity");$/;"	m
super	pilas-engine/libs/spriter.ts	/^    super("image");$/;"	m
super	pilas-engine/libs/spriter.ts	/^    super("point");$/;"	m
super	pilas-engine/libs/spriter.ts	/^    super("sound");$/;"	m
super	pilas-engine/libs/spriter.ts	/^    super("sprite");$/;"	m
super	pilas-engine/libs/spriter.ts	/^    super("variable");$/;"	m
super	pilas-engine/libs/spriter.ts	/^    super();$/;"	m
super	pilas-engine/libs/spriter.ts	/^    super(0.0);$/;"	m
super	pilas-engine/libs/spriter.ts	/^    super(0.0, 0.0);$/;"	m
super	pilas-engine/libs/spriter.ts	/^    super(0.0, 1.0);$/;"	m
super	pilas-engine/libs/spriter.ts	/^    super(1.0, 1.0);$/;"	m
super	pilas-engine/modos/actor_en_modo_edicion.ts	/^    super(scene, 0, 0);$/;"	m
super	pilas-engine/modos/camara_en_modo_edicion.ts	/^    super(scene, x + ancho\/2, y + alto\/2);$/;"	m
super	pilas-engine/modos/modo.ts	/^    super(data);$/;"	m
super	pilas-engine/modos/modo_cargador.ts	/^    super({ key: "ModoCargador" });$/;"	m
super	pilas-engine/modos/modo_deprecated.ts	/^    super({ key: "ModoEditor" });$/;"	m
super	pilas-engine/modos/modo_editor.ts	/^    super({ key: "ModoEditor" });$/;"	m
super	pilas-engine/modos/modo_ejecucion.ts	/^    super({ key: "ModoEjecucion" });$/;"	m
super	pilas-engine/modos/modo_ejecucion_en_pausa.ts	/^    super({ key: "ModoEjecucionEnPausa" });$/;"	m
super	pilas-engine/modos/modo_error.ts	/^    super({ key: "ModoError" });$/;"	m
super	pilas-engine/modos/modo_pausa.ts	/^    super({ key: "ModoPausa" });$/;"	m
support32bit	pilas-engine/declaraciones/phaser.d.ts	/^            support32bit: boolean;$/;"	m
supportInverseAlpha	pilas-engine/declaraciones/phaser.d.ts	/^            supportInverseAlpha: boolean;$/;"	m
supportNewBlendModes	pilas-engine/declaraciones/phaser.d.ts	/^            supportNewBlendModes: boolean;$/;"	m
supportedAPIs	pilas-engine/declaraciones/phaser.d.ts	/^        supportedAPIs: string[];$/;"	m
supportedExtensions	pilas-engine/declaraciones/phaser.d.ts	/^                supportedExtensions: string[];$/;"	m
supports	pilas-engine/declaraciones/phaser.d.ts	/^                    supports: MatterJS.Vector[];$/;"	m
supportsCompressedTexture	pilas-engine/declaraciones/phaser.d.ts	/^                supportsCompressedTexture(baseFormat: string, format?: GLenum): boolean;$/;"	m
svg	pilas-engine/declaraciones/phaser.d.ts	/^                svg: MatterJS.SvgFactory;$/;"	m
svg	pilas-engine/declaraciones/phaser.d.ts	/^            svg(key: string | Phaser.Types.Loader.FileTypes.SVGFileConfig | Phaser.Types.Loader.FileTypes.SVGFileConfig[], url?: string, svgConfig?: Phaser.Types.Loader.FileTypes.SVGSizeConfig, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject): this;$/;"	m
swap	pilas-engine/declaraciones/phaser.d.ts	/^            swap(child1: Phaser.GameObjects.GameObject, child2: Phaser.GameObjects.GameObject): this;$/;"	m
swap	pilas-engine/declaraciones/phaser.d.ts	/^            swap(child1: T, child2: T): void;$/;"	m
swapByIndex	pilas-engine/declaraciones/phaser.d.ts	/^            swapByIndex(tileA: number, tileB: number, tileX?: number, tileY?: number, width?: number, height?: number): this;$/;"	m
swapByIndex	pilas-engine/declaraciones/phaser.d.ts	/^            swapByIndex(tileA: number, tileB: number, tileX?: number, tileY?: number, width?: number, height?: number, layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Tilemaps.Tilemap;$/;"	m
swapPosition	pilas-engine/declaraciones/phaser.d.ts	/^            swapPosition(keyA: string | Phaser.Scene, keyB: string | Phaser.Scene): this;$/;"	m
swapPosition	pilas-engine/declaraciones/phaser.d.ts	/^            swapPosition(keyA: string | Phaser.Scene, keyB?: string | Phaser.Scene): this;$/;"	m
switch	pilas-engine/actores/-actor-base.ts	/^    switch (figura) {$/;"	m
switch	pilas-engine/actores/-actor-base.ts	/^    switch (tipo) {$/;"	m
switch	pilas-engine/declaraciones/phaser.d.ts	/^            switch(from: string | Phaser.Scene, to: string | Phaser.Scene): this;$/;"	m
switch	pilas-engine/declaraciones/phaser.d.ts	/^            switch(key: string | Phaser.Scene): this;$/;"	m
switch	pilas-engine/libs/spriter.ts	/^              switch (object.type) {$/;"	m
switch	pilas-engine/libs/spriter.ts	/^            switch (var_def.type) {$/;"	m
switch	pilas-engine/libs/spriter.ts	/^        switch (file_json.type) {$/;"	m
switch	pilas-engine/libs/spriter.ts	/^        switch (object.type) {$/;"	m
switch	pilas-engine/libs/spriter.ts	/^        switch (timeline.type) {$/;"	m
switch	pilas-engine/libs/spriter.ts	/^      switch (obj_info_json.type) {$/;"	m
switch	pilas-engine/libs/spriter.ts	/^    switch (this.type) {$/;"	m
switch	pilas-engine/libs/spriter.ts	/^    switch (timeline.type) {$/;"	m
switch	pilas-engine/libs/spriter.ts	/^    switch (typeof json.val) {$/;"	m
switch	pilas-engine/libs/spriter.ts	/^  switch (typeof value) {$/;"	m
switchContext	pilas-engine/declaraciones/phaser.d.ts	/^        switchContext(contextID: string): this;$/;"	m
switchGame	pilas-engine/declaraciones/phaser.d.ts	/^        switchGame(appID: string, data?: object): this;$/;"	m
syncBounds	pilas-engine/declaraciones/phaser.d.ts	/^                syncBounds: boolean;$/;"	m
syncFont	pilas-engine/declaraciones/phaser.d.ts	/^            syncFont(canvas: HTMLCanvasElement, context: CanvasRenderingContext2D): void;$/;"	m
syncShadow	pilas-engine/declaraciones/phaser.d.ts	/^            syncShadow(context: CanvasRenderingContext2D, enabled: boolean): void;$/;"	m
syncStyle	pilas-engine/declaraciones/phaser.d.ts	/^            syncStyle(canvas: HTMLCanvasElement, context: CanvasRenderingContext2D): void;$/;"	m
sys	pilas-engine/declaraciones/phaser.d.ts	/^                sys: Phaser.Scenes.Systems;$/;"	m
sys	pilas-engine/declaraciones/phaser.d.ts	/^        sys: Phaser.Scenes.Systems;$/;"	m
systems	pilas-engine/declaraciones/phaser.d.ts	/^                systems: Phaser.Scenes.Systems;$/;"	m
systems	pilas-engine/declaraciones/phaser.d.ts	/^            protected systems: Phaser.Scenes.Systems;$/;"	m
systems	pilas-engine/declaraciones/phaser.d.ts	/^            systems: Phaser.Scenes.Systems;$/;"	m
t	pilas-engine/actores/-actor-base.ts	/^      t: 1,$/;"	m
t	pilas-engine/declaraciones/phaser.d.ts	/^                    t: number;$/;"	m
ta	pilas-engine/declaraciones/phaser.d.ts	/^                ta: number;$/;"	m
tabIndex	pilas-engine/declaraciones/phaser.d.ts	/^            tabIndex: number;$/;"	m
tag_array	pilas-engine/libs/spriter.ts	/^  tag_array: Tag[];$/;"	m
tag_array	pilas-engine/libs/spriter.ts	/^  tag_array: string[] = [];$/;"	m
tag_def_array	pilas-engine/libs/spriter.ts	/^  tag_def_array: TagDef[] = [];$/;"	m
tag_def_index	pilas-engine/libs/spriter.ts	/^  tag_def_index: number = -1;$/;"	m
tag_index	pilas-engine/libs/spriter.ts	/^  tag_index: number = -1;$/;"	m
tagline	pilas-engine/libs/spriter.ts	/^  tagline: Tagline;$/;"	m
tangent	pilas-engine/declaraciones/phaser.d.ts	/^                    tangent: MatterJS.Vector;$/;"	m
tarea	pilas-engine/pilas.ts	/^        tarea();$/;"	m
target	pilas-engine/declaraciones/phaser.d.ts	/^                target: Phaser.GameObjects.GameObject;$/;"	m
target	pilas-engine/declaraciones/phaser.d.ts	/^                target: any;$/;"	m
target	pilas-engine/declaraciones/phaser.d.ts	/^                target: string;$/;"	m
target	pilas-engine/declaraciones/phaser.d.ts	/^            target: number;$/;"	m
target	pilas-engine/pilas.ts	/^        target: opciones.fps,$/;"	m
targetFps	pilas-engine/declaraciones/phaser.d.ts	/^            targetFps: number;$/;"	m
target_file_index	pilas-engine/libs/spriter.ts	/^  target_file_index: number = -1;$/;"	m
target_folder_index	pilas-engine/libs/spriter.ts	/^  target_folder_index: number = -1;$/;"	m
targets	pilas-engine/actores/-actor-base.ts	/^      targets: { t: 0 },$/;"	m
targets	pilas-engine/declaraciones/phaser.d.ts	/^                targets: any;$/;"	m
targets	pilas-engine/declaraciones/phaser.d.ts	/^                targets: object | object[];$/;"	m
targets	pilas-engine/declaraciones/phaser.d.ts	/^            targets: object[];$/;"	m
targets	pilas-engine/pilas.ts	/^      targets: actor,$/;"	m
technicolor	pilas-engine/declaraciones/phaser.d.ts	/^            technicolor(multiply?: boolean): this;$/;"	m
techo	pilas-engine/actores.ts	/^  techo() {$/;"	m
techo	pilas-engine/actores/techo.ts	/^class techo extends Actor {$/;"	c
tecla_1	pilas-engine/control.ts	/^  get tecla_1() {$/;"	m
tecla_2	pilas-engine/control.ts	/^  get tecla_2() {$/;"	m
tecla_3	pilas-engine/control.ts	/^  get tecla_3() {$/;"	m
tecla_4	pilas-engine/control.ts	/^  get tecla_4() {$/;"	m
tecla_5	pilas-engine/control.ts	/^  get tecla_5() {$/;"	m
tecla_6	pilas-engine/control.ts	/^  get tecla_6() {$/;"	m
tecla_7	pilas-engine/control.ts	/^  get tecla_7() {$/;"	m
tecla_8	pilas-engine/control.ts	/^  get tecla_8() {$/;"	m
tecla_9	pilas-engine/control.ts	/^  get tecla_9() {$/;"	m
tecla_a	pilas-engine/control.ts	/^  get tecla_a() {$/;"	m
tecla_b	pilas-engine/control.ts	/^  get tecla_b() {$/;"	m
tecla_c	pilas-engine/control.ts	/^  get tecla_c() {$/;"	m
tecla_d	pilas-engine/control.ts	/^  get tecla_d() {$/;"	m
tecla_derecha	pilas-engine/modos/modo_pausa.ts	/^  tecla_derecha: any;$/;"	m
tecla_e	pilas-engine/control.ts	/^  get tecla_e() {$/;"	m
tecla_f	pilas-engine/control.ts	/^  get tecla_f() {$/;"	m
tecla_g	pilas-engine/control.ts	/^  get tecla_g() {$/;"	m
tecla_h	pilas-engine/control.ts	/^  get tecla_h() {$/;"	m
tecla_i	pilas-engine/control.ts	/^  get tecla_i() {$/;"	m
tecla_izquierda	pilas-engine/modos/modo_pausa.ts	/^  tecla_izquierda: any;$/;"	m
tecla_j	pilas-engine/control.ts	/^  get tecla_j() {$/;"	m
tecla_k	pilas-engine/control.ts	/^  get tecla_k() {$/;"	m
tecla_l	pilas-engine/control.ts	/^  get tecla_l() {$/;"	m
tecla_m	pilas-engine/control.ts	/^  get tecla_m() {$/;"	m
tecla_meta_pulsada	pilas-engine/modos/modo_deprecated.ts	/^  tecla_meta_pulsada: boolean;$/;"	m
tecla_meta_pulsada	pilas-engine/modos/modo_editor.ts	/^  tecla_meta_pulsada: boolean;$/;"	m
tecla_n	pilas-engine/control.ts	/^  get tecla_n() {$/;"	m
tecla_o	pilas-engine/control.ts	/^  get tecla_o() {$/;"	m
tecla_p	pilas-engine/control.ts	/^  get tecla_p() {$/;"	m
tecla_q	pilas-engine/control.ts	/^  get tecla_q() {$/;"	m
tecla_r	pilas-engine/control.ts	/^  get tecla_r() {$/;"	m
tecla_s	pilas-engine/control.ts	/^  get tecla_s() {$/;"	m
tecla_t	pilas-engine/control.ts	/^  get tecla_t() {$/;"	m
tecla_u	pilas-engine/control.ts	/^  get tecla_u() {$/;"	m
tecla_v	pilas-engine/control.ts	/^  get tecla_v() {$/;"	m
tecla_w	pilas-engine/control.ts	/^  get tecla_w() {$/;"	m
tecla_x	pilas-engine/control.ts	/^  get tecla_x() {$/;"	m
tecla_y	pilas-engine/control.ts	/^  get tecla_y() {$/;"	m
tecla_z	pilas-engine/control.ts	/^  get tecla_z() {$/;"	m
teclas	pilas-engine/control.ts	/^  private teclas: any;$/;"	m
teclas	pilas-engine/modos/modo_ejecucion.ts	/^  teclas: Set<string> = null;$/;"	m
tempTextures	pilas-engine/declaraciones/phaser.d.ts	/^                tempTextures: any[];$/;"	m
terminar	pilas-engine/comportamientos/-comportamiento.ts	/^  terminar() {}$/;"	m
terminar	pilas-engine/comportamientos/aparecer.ts	/^  terminar() {}$/;"	m
terminar	pilas-engine/comportamientos/desaparecer.ts	/^  terminar() {}$/;"	m
terminar	pilas-engine/comportamientos/eliminar.ts	/^  terminar() {}$/;"	m
terminar	pilas-engine/comportamientos/mover.ts	/^  terminar() {}$/;"	m
terminar	pilas-engine/control.ts	/^  terminar() {}$/;"	m
terminar	pilas-engine/escenas/-escena-base.ts	/^  terminar() {$/;"	m
testString	pilas-engine/declaraciones/phaser.d.ts	/^            testString: string;$/;"	m
texCoordinates	pilas-engine/declaraciones/phaser.d.ts	/^            readonly texCoordinates: object[];$/;"	m
text	pilas-engine/declaraciones/phaser.d.ts	/^                    text: string;$/;"	m
text	pilas-engine/declaraciones/phaser.d.ts	/^            text(config: Phaser.Types.GameObjects.Text.TextConfig, addToScene?: boolean): Phaser.GameObjects.Text;$/;"	m
text	pilas-engine/declaraciones/phaser.d.ts	/^            text(key: string | Phaser.Types.Loader.FileTypes.TextFileConfig | Phaser.Types.Loader.FileTypes.TextFileConfig[], url?: string, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject): this;$/;"	m
text	pilas-engine/declaraciones/phaser.d.ts	/^            text(x: number, y: number, text: string | string[], style?: Phaser.Types.GameObjects.Text.TextStyle): Phaser.GameObjects.Text;$/;"	m
text	pilas-engine/declaraciones/phaser.d.ts	/^            text: Phaser.Cache.BaseCache;$/;"	m
text	pilas-engine/declaraciones/phaser.d.ts	/^            text: string;$/;"	m
texto	pilas-engine/actores.ts	/^  texto() {$/;"	m
texto	pilas-engine/actores/-actor-base.ts	/^      texto: texto,$/;"	m
texto	pilas-engine/actores/-actor-base.ts	/^  texto: any;$/;"	m
texto	pilas-engine/actores/-actor-texto-base.ts	/^    texto: "Hola mundo",$/;"	m
texto	pilas-engine/actores/-actor-texto-base.ts	/^  get texto() {$/;"	m
texto	pilas-engine/actores/-actor-texto-base.ts	/^  set texto(texto: string) {$/;"	m
texto	pilas-engine/actores/boton.ts	/^    texto: "Bot√≥n",$/;"	m
texto	pilas-engine/actores/boton_activable.ts	/^    texto: "Bot√≥n",$/;"	m
texto	pilas-engine/actores/puntaje.ts	/^    texto: "PUNTAJE: 0",$/;"	m
texto	pilas-engine/actores/reiniciar_escena.ts	/^    texto: "Reiniciar escena",$/;"	m
texto	pilas-engine/actores/texto.ts	/^    texto: "Hola mundo",$/;"	m
texto	pilas-engine/actores/texto.ts	/^class texto extends ActorTextoBase {$/;"	c
texto	pilas-engine/modos/modo_pausa.ts	/^  texto: any;$/;"	m
texto_con_borde	pilas-engine/actores/-actor-base.ts	/^      texto_con_borde: this._texto_con_borde,$/;"	m
texto_con_borde	pilas-engine/actores/-actor-base.ts	/^    texto_con_borde: false$/;"	m
texture	pilas-engine/declaraciones/phaser.d.ts	/^                    texture: string | Phaser.Textures.Texture;$/;"	m
texture	pilas-engine/declaraciones/phaser.d.ts	/^                texture: Phaser.Textures.Texture | Phaser.Textures.CanvasTexture;$/;"	m
texture	pilas-engine/declaraciones/phaser.d.ts	/^                texture: Phaser.Textures.Texture;$/;"	m
texture	pilas-engine/declaraciones/phaser.d.ts	/^                texture: WebGLTexture;$/;"	m
texture	pilas-engine/declaraciones/phaser.d.ts	/^            texture(key: string, urls: Phaser.Types.Loader.FileTypes.CompressedTextureFileConfig, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject): this;$/;"	m
texture	pilas-engine/declaraciones/phaser.d.ts	/^            texture: Phaser.Textures.Texture | Phaser.Textures.CanvasTexture;$/;"	m
texture	pilas-engine/declaraciones/phaser.d.ts	/^            texture: Phaser.Textures.Texture;$/;"	m
textureCoords	pilas-engine/declaraciones/phaser.d.ts	/^                    textureCoords: Phaser.Types.Geom.Mesh.UV[];$/;"	m
textureCoordsIndex	pilas-engine/declaraciones/phaser.d.ts	/^                    textureCoordsIndex: number;$/;"	m
textureFlush	pilas-engine/declaraciones/phaser.d.ts	/^                textureFlush: number;$/;"	m
textureFrame	pilas-engine/declaraciones/phaser.d.ts	/^            textureFrame: string | number;$/;"	m
textureIndexes	pilas-engine/declaraciones/phaser.d.ts	/^                textureIndexes: any[];$/;"	m
textureKey	pilas-engine/declaraciones/phaser.d.ts	/^                textureKey: string;$/;"	m
textureKey	pilas-engine/declaraciones/phaser.d.ts	/^            textureKey: string;$/;"	m
textureManager	pilas-engine/declaraciones/phaser.d.ts	/^            protected textureManager: Phaser.Textures.TextureManager;$/;"	m
textureManager	pilas-engine/declaraciones/phaser.d.ts	/^            textureManager: Phaser.Textures.TextureManager;$/;"	m
textureZero	pilas-engine/declaraciones/phaser.d.ts	/^                textureZero: WebGLTexture;$/;"	m
textures	pilas-engine/declaraciones/phaser.d.ts	/^            textures: Phaser.Textures.TextureManager;$/;"	m
textures	pilas-engine/declaraciones/phaser.d.ts	/^        textures: Phaser.Textures.TextureManager;$/;"	m
threshold	pilas-engine/declaraciones/phaser.d.ts	/^                threshold: number;$/;"	m
thrust	pilas-engine/declaraciones/phaser.d.ts	/^                    thrust(speed: number): Phaser.GameObjects.GameObject;$/;"	m
thrust	pilas-engine/declaraciones/phaser.d.ts	/^                thrust(speed: number): Phaser.GameObjects.GameObject;$/;"	m
thrustBack	pilas-engine/declaraciones/phaser.d.ts	/^                    thrustBack(speed: number): Phaser.GameObjects.GameObject;$/;"	m
thrustBack	pilas-engine/declaraciones/phaser.d.ts	/^                thrustBack(speed: number): Phaser.GameObjects.GameObject;$/;"	m
thrustLeft	pilas-engine/declaraciones/phaser.d.ts	/^                    thrustLeft(speed: number): Phaser.GameObjects.GameObject;$/;"	m
thrustLeft	pilas-engine/declaraciones/phaser.d.ts	/^                thrustLeft(speed: number): Phaser.GameObjects.GameObject;$/;"	m
thrustRight	pilas-engine/declaraciones/phaser.d.ts	/^                    thrustRight(speed: number): Phaser.GameObjects.GameObject;$/;"	m
thrustRight	pilas-engine/declaraciones/phaser.d.ts	/^                thrustRight(speed: number): Phaser.GameObjects.GameObject;$/;"	m
tick	pilas-engine/declaraciones/phaser.d.ts	/^            tick(): void;$/;"	m
tick	pilas-engine/declaraciones/phaser.d.ts	/^            tick: number;$/;"	m
tiempo	pilas-engine/comportamientos/mover.ts	/^  tiempo: number;$/;"	m
tiene_etiqueta	pilas-engine/actores/-actor-base.ts	/^  tiene_etiqueta(etiqueta: string) {$/;"	m
tiene_habilidad	pilas-engine/actores/-actor-base.ts	/^  tiene_habilidad(habilidad: string) {$/;"	m
tile	pilas-engine/declaraciones/phaser.d.ts	/^                tile: Phaser.Tilemaps.Tile;$/;"	m
tileBody	pilas-engine/declaraciones/phaser.d.ts	/^                tileBody(tile: Phaser.Tilemaps.Tile, options?: Phaser.Types.Physics.Matter.MatterTileOptions): Phaser.Physics.Matter.TileBody;$/;"	m
tileData	pilas-engine/declaraciones/phaser.d.ts	/^            tileData: object;$/;"	m
tileHeight	pilas-engine/declaraciones/phaser.d.ts	/^            readonly tileHeight: number;$/;"	m
tileHeight	pilas-engine/declaraciones/phaser.d.ts	/^            tileHeight: number;$/;"	m
tileMargin	pilas-engine/declaraciones/phaser.d.ts	/^            readonly tileMargin: number;$/;"	m
tileOffset	pilas-engine/declaraciones/phaser.d.ts	/^            tileOffset: Phaser.Math.Vector2;$/;"	m
tilePositionX	pilas-engine/declaraciones/phaser.d.ts	/^            tilePositionX: number;$/;"	m
tilePositionY	pilas-engine/declaraciones/phaser.d.ts	/^            tilePositionY: number;$/;"	m
tileProperties	pilas-engine/declaraciones/phaser.d.ts	/^            tileProperties: object;$/;"	m
tileScaleX	pilas-engine/declaraciones/phaser.d.ts	/^            tileScaleX: number;$/;"	m
tileScaleY	pilas-engine/declaraciones/phaser.d.ts	/^            tileScaleY: number;$/;"	m
tileSpacing	pilas-engine/declaraciones/phaser.d.ts	/^            readonly tileSpacing: number;$/;"	m
tileSprite	pilas-engine/declaraciones/phaser.d.ts	/^            tileSprite(config: Phaser.Types.GameObjects.TileSprite.TileSpriteConfig, addToScene?: boolean): Phaser.GameObjects.TileSprite;$/;"	m
tileSprite	pilas-engine/declaraciones/phaser.d.ts	/^            tileSprite(x: number, y: number, width: number, height: number, texture: string | Phaser.Textures.Texture, frame?: string | number): Phaser.GameObjects.TileSprite;$/;"	m
tileToWorldX	pilas-engine/declaraciones/phaser.d.ts	/^            tileToWorldX(tileX: number, camera?: Phaser.Cameras.Scene2D.Camera): number;$/;"	m
tileToWorldX	pilas-engine/declaraciones/phaser.d.ts	/^            tileToWorldX(tileX: number, camera?: Phaser.Cameras.Scene2D.Camera, layer?: string | number | Phaser.Tilemaps.TilemapLayer): number;$/;"	m
tileToWorldXY	pilas-engine/declaraciones/phaser.d.ts	/^            tileToWorldXY(tileX: number, tileY: number, point?: Phaser.Math.Vector2, camera?: Phaser.Cameras.Scene2D.Camera): Phaser.Math.Vector2;$/;"	m
tileToWorldXY	pilas-engine/declaraciones/phaser.d.ts	/^            tileToWorldXY(tileX: number, tileY: number, vec2?: Phaser.Math.Vector2, camera?: Phaser.Cameras.Scene2D.Camera, layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Math.Vector2;$/;"	m
tileToWorldY	pilas-engine/declaraciones/phaser.d.ts	/^            tileToWorldY(tileY: number, camera?: Phaser.Cameras.Scene2D.Camera): number;$/;"	m
tileToWorldY	pilas-engine/declaraciones/phaser.d.ts	/^            tileToWorldY(tileY: number, camera?: Phaser.Cameras.Scene2D.Camera, layer?: string | number | Phaser.Tilemaps.TilemapLayer): number;$/;"	m
tileWidth	pilas-engine/declaraciones/phaser.d.ts	/^            readonly tileWidth: number;$/;"	m
tileWidth	pilas-engine/declaraciones/phaser.d.ts	/^            tileWidth: number;$/;"	m
tilemap	pilas-engine/declaraciones/phaser.d.ts	/^            readonly tilemap: Phaser.Tilemaps.Tilemap;$/;"	m
tilemap	pilas-engine/declaraciones/phaser.d.ts	/^            tilemap(config?: Phaser.Types.Tilemaps.TilemapConfig): Phaser.Tilemaps.Tilemap;$/;"	m
tilemap	pilas-engine/declaraciones/phaser.d.ts	/^            tilemap(key?: string, tileWidth?: number, tileHeight?: number, width?: number, height?: number, data?: number[][], insertNull?: boolean): Phaser.Tilemaps.Tilemap;$/;"	m
tilemap	pilas-engine/declaraciones/phaser.d.ts	/^            tilemap: Phaser.Cache.BaseCache;$/;"	m
tilemap	pilas-engine/declaraciones/phaser.d.ts	/^            tilemap: Phaser.Tilemaps.Tilemap;$/;"	m
tilemapCSV	pilas-engine/declaraciones/phaser.d.ts	/^            tilemapCSV(key: string | Phaser.Types.Loader.FileTypes.TilemapCSVFileConfig | Phaser.Types.Loader.FileTypes.TilemapCSVFileConfig[], url?: string, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject): this;$/;"	m
tilemapImpact	pilas-engine/declaraciones/phaser.d.ts	/^            tilemapImpact(key: string | Phaser.Types.Loader.FileTypes.TilemapImpactFileConfig | Phaser.Types.Loader.FileTypes.TilemapImpactFileConfig[], url?: string, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject): this;$/;"	m
tilemapLayer	pilas-engine/declaraciones/phaser.d.ts	/^            readonly tilemapLayer: Phaser.Tilemaps.TilemapLayer;$/;"	m
tilemapLayer	pilas-engine/declaraciones/phaser.d.ts	/^            tilemapLayer: Phaser.Tilemaps.TilemapLayer;$/;"	m
tilemapTiledJSON	pilas-engine/declaraciones/phaser.d.ts	/^            tilemapTiledJSON(key: string | Phaser.Types.Loader.FileTypes.TilemapJSONFileConfig | Phaser.Types.Loader.FileTypes.TilemapJSONFileConfig[], url?: object | string, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject): this;$/;"	m
tiles	pilas-engine/declaraciones/phaser.d.ts	/^            tiles: any[];$/;"	m
tilesDrawn	pilas-engine/declaraciones/phaser.d.ts	/^            readonly tilesDrawn: number;$/;"	m
tilesTotal	pilas-engine/declaraciones/phaser.d.ts	/^            readonly tilesTotal: number;$/;"	m
tileset	pilas-engine/declaraciones/phaser.d.ts	/^            readonly tileset: Phaser.Tilemaps.Tileset;$/;"	m
tileset	pilas-engine/declaraciones/phaser.d.ts	/^            tileset: Phaser.Tilemaps.Tileset[];$/;"	m
tilesets	pilas-engine/declaraciones/phaser.d.ts	/^            tilesets: Phaser.Tilemaps.Tileset[];$/;"	m
time	pilas-engine/declaraciones/phaser.d.ts	/^            readonly time: number;$/;"	m
time	pilas-engine/declaraciones/phaser.d.ts	/^            time: number;$/;"	m
time	pilas-engine/declaraciones/phaser.d.ts	/^        time: Phaser.Time.Clock;$/;"	m
time	pilas-engine/libs/spriter.ts	/^  time: number = 0;$/;"	m
timeCreated	pilas-engine/declaraciones/phaser.d.ts	/^                    timeCreated: number;$/;"	m
timeDown	pilas-engine/declaraciones/phaser.d.ts	/^                timeDown: number;$/;"	m
timeLastMatched	pilas-engine/declaraciones/phaser.d.ts	/^                timeLastMatched: number;$/;"	m
timeMatched	pilas-engine/declaraciones/phaser.d.ts	/^                timeMatched: number;$/;"	m
timeOutID	pilas-engine/declaraciones/phaser.d.ts	/^            timeOutID: number;$/;"	m
timeScale	pilas-engine/declaraciones/phaser.d.ts	/^                timeScale: number;$/;"	m
timeScale	pilas-engine/declaraciones/phaser.d.ts	/^            timeScale: number;$/;"	m
timeUp	pilas-engine/declaraciones/phaser.d.ts	/^                timeUp: number;$/;"	m
timeUpdateHandler	pilas-engine/declaraciones/phaser.d.ts	/^            timeUpdateHandler(): void;$/;"	m
timeUpdated	pilas-engine/declaraciones/phaser.d.ts	/^                    timeUpdated: number;$/;"	m
timeline	pilas-engine/animacion_de_propiedad.ts	/^  timeline: Phaser.Tweens.Timeline;$/;"	m
timeline	pilas-engine/declaraciones/phaser.d.ts	/^            timeline(config?: Phaser.Types.Tweens.TimelineBuilderConfig): Phaser.Tweens.Timeline;$/;"	m
timeline_array	pilas-engine/libs/spriter.ts	/^  timeline_array: Timeline[];$/;"	m
timeline_index	pilas-engine/libs/spriter.ts	/^  timeline_index: number = -1;$/;"	m
timestamp	pilas-engine/declaraciones/phaser.d.ts	/^                    timestamp: number;$/;"	m
timestamp	pilas-engine/declaraciones/phaser.d.ts	/^                timestamp: number;$/;"	m
timestamp	pilas-engine/declaraciones/phaser.d.ts	/^            timestamp(min: number, max: number): number;$/;"	m
timestamp	pilas-engine/declaraciones/phaser.d.ts	/^    timestamp: integer;$/;"	m
tint	pilas-engine/declaraciones/phaser.d.ts	/^                    tint: Phaser.Types.GameObjects.BitmapText.TintConfig;$/;"	m
tint	pilas-engine/declaraciones/phaser.d.ts	/^                tint: Phaser.GameObjects.Particles.EmitterOp;$/;"	m
tint	pilas-engine/declaraciones/phaser.d.ts	/^                tint: number;$/;"	m
tint	pilas-engine/declaraciones/phaser.d.ts	/^            tint: number;$/;"	m
tintBottomLeft	pilas-engine/declaraciones/phaser.d.ts	/^                tintBottomLeft: number;$/;"	m
tintBottomLeft	pilas-engine/declaraciones/phaser.d.ts	/^            tintBottomLeft: number;$/;"	m
tintBottomRight	pilas-engine/declaraciones/phaser.d.ts	/^                tintBottomRight: number;$/;"	m
tintBottomRight	pilas-engine/declaraciones/phaser.d.ts	/^            tintBottomRight: number;$/;"	m
tintFill	pilas-engine/declaraciones/phaser.d.ts	/^                tintFill: boolean;$/;"	m
tintFill	pilas-engine/declaraciones/phaser.d.ts	/^            tintFill: boolean;$/;"	m
tintTopLeft	pilas-engine/declaraciones/phaser.d.ts	/^                tintTopLeft: number;$/;"	m
tintTopLeft	pilas-engine/declaraciones/phaser.d.ts	/^            tintTopLeft: number;$/;"	m
tintTopRight	pilas-engine/declaraciones/phaser.d.ts	/^                tintTopRight: number;$/;"	m
tintTopRight	pilas-engine/declaraciones/phaser.d.ts	/^            tintTopRight: number;$/;"	m
tipo	pilas-engine/actores/-actor-base.ts	/^      tipo: this.tipo,$/;"	m
tipo	pilas-engine/actores/-actor-base.ts	/^  tipo: String;$/;"	m
tipo_de_animacion	pilas-engine/animacion_de_propiedad.ts	/^  private tipo_de_animacion: Tipo;$/;"	m
titulo	pilas-engine/modos/modo_cargador.ts	/^          titulo: "sin usar",$/;"	m
toJSON	pilas-engine/declaraciones/phaser.d.ts	/^                toJSON(): Phaser.Types.Cameras.Scene2D.JSONCamera;$/;"	m
toJSON	pilas-engine/declaraciones/phaser.d.ts	/^                toJSON(): object;$/;"	m
toJSON	pilas-engine/declaraciones/phaser.d.ts	/^                toJSON(output?: object): object;$/;"	m
toJSON	pilas-engine/declaraciones/phaser.d.ts	/^            toJSON(): Phaser.Types.Animations.JSONAnimation;$/;"	m
toJSON	pilas-engine/declaraciones/phaser.d.ts	/^            toJSON(): Phaser.Types.Animations.JSONAnimationFrame;$/;"	m
toJSON	pilas-engine/declaraciones/phaser.d.ts	/^            toJSON(): Phaser.Types.Curves.JSONCurve;$/;"	m
toJSON	pilas-engine/declaraciones/phaser.d.ts	/^            toJSON(): Phaser.Types.Curves.JSONEllipseCurve;$/;"	m
toJSON	pilas-engine/declaraciones/phaser.d.ts	/^            toJSON(): Phaser.Types.Curves.JSONPath;$/;"	m
toJSON	pilas-engine/declaraciones/phaser.d.ts	/^            toJSON(): Phaser.Types.GameObjects.BitmapText.JSONBitmapText;$/;"	m
toJSON	pilas-engine/declaraciones/phaser.d.ts	/^            toJSON(): Phaser.Types.GameObjects.JSONGameObject;$/;"	m
toJSON	pilas-engine/declaraciones/phaser.d.ts	/^            toJSON(): object;$/;"	m
toJSON	pilas-engine/declaraciones/phaser.d.ts	/^            toJSON(key?: string): Phaser.Types.Animations.JSONAnimations;$/;"	m
toPhysVector	pilas-engine/laser.ts	/^  toPhysVector() {$/;"	m
toString	pilas-engine/actores/-actor-base.ts	/^  toString() {$/;"	m
toString	pilas-engine/declaraciones/phaser.d.ts	/^            toString(): string;$/;"	m
toString	pilas-engine/laser.ts	/^  toString() {$/;"	m
toggle	pilas-engine/declaraciones/phaser.d.ts	/^            toggle(key: string | object): Phaser.Data.DataManager;$/;"	m
toggleData	pilas-engine/declaraciones/phaser.d.ts	/^            toggleData(key: string | object): this;$/;"	m
toggleFlipX	pilas-engine/declaraciones/phaser.d.ts	/^                toggleFlipX(): this;$/;"	m
toggleFlipX	pilas-engine/declaraciones/phaser.d.ts	/^            toggleFlipX(): this;$/;"	m
toggleFlipY	pilas-engine/declaraciones/phaser.d.ts	/^                toggleFlipY(): this;$/;"	m
toggleFlipY	pilas-engine/declaraciones/phaser.d.ts	/^            toggleFlipY(): this;$/;"	m
toggleFullscreen	pilas-engine/declaraciones/phaser.d.ts	/^            toggleFullscreen(fullscreenOptions?: object): void;$/;"	m
toggleVisible	pilas-engine/declaraciones/phaser.d.ts	/^            toggleVisible(): this;$/;"	m
top	pilas-engine/declaraciones/phaser.d.ts	/^                readonly top: number;$/;"	m
top	pilas-engine/declaraciones/phaser.d.ts	/^            top: number;$/;"	m
topLeft	pilas-engine/declaraciones/phaser.d.ts	/^                    topLeft: number;$/;"	m
topOnly	pilas-engine/declaraciones/phaser.d.ts	/^            topOnly: boolean;$/;"	m
topRight	pilas-engine/declaraciones/phaser.d.ts	/^                    topRight: number;$/;"	m
topology	pilas-engine/declaraciones/phaser.d.ts	/^                topology: GLenum;$/;"	m
total	pilas-engine/declaraciones/phaser.d.ts	/^                function total(): number;$/;"	f
total	pilas-engine/declaraciones/phaser.d.ts	/^                total: number;$/;"	m
total	pilas-engine/declaraciones/phaser.d.ts	/^            readonly total: number;$/;"	m
total	pilas-engine/modos/modo_pausa.ts	/^  total: number;$/;"	m
totalComplete	pilas-engine/declaraciones/phaser.d.ts	/^            totalComplete: number;$/;"	m
totalData	pilas-engine/declaraciones/phaser.d.ts	/^            totalData: number;$/;"	m
totalDuration	pilas-engine/declaraciones/phaser.d.ts	/^            readonly totalDuration: number;$/;"	m
totalDuration	pilas-engine/declaraciones/phaser.d.ts	/^            totalDuration: number;$/;"	m
totalElapsed	pilas-engine/declaraciones/phaser.d.ts	/^            totalElapsed: number;$/;"	m
totalFailed	pilas-engine/declaraciones/phaser.d.ts	/^            totalFailed: number;$/;"	m
totalProgress	pilas-engine/declaraciones/phaser.d.ts	/^            totalProgress: number;$/;"	m
totalRate	pilas-engine/declaraciones/phaser.d.ts	/^            readonly totalRate: number;$/;"	m
totalRendered	pilas-engine/declaraciones/phaser.d.ts	/^            readonly totalRendered: number;$/;"	m
totalTargets	pilas-engine/declaraciones/phaser.d.ts	/^            totalTargets: number;$/;"	m
totalToLoad	pilas-engine/declaraciones/phaser.d.ts	/^            totalToLoad: number;$/;"	m
touch	pilas-engine/declaraciones/phaser.d.ts	/^            touch: Phaser.Input.Touch.TouchManager;$/;"	m
touch	pilas-engine/declaraciones/phaser.d.ts	/^            touch: boolean;$/;"	m
touch	pilas-engine/pilas.ts	/^        touch: true,$/;"	m
touchLocked	pilas-engine/declaraciones/phaser.d.ts	/^            touchLocked: boolean;$/;"	m
touching	pilas-engine/declaraciones/phaser.d.ts	/^                touching: Phaser.Types.Physics.Arcade.ArcadeBodyCollision;$/;"	m
trackVisible	pilas-engine/declaraciones/phaser.d.ts	/^                trackVisible: boolean;$/;"	m
traducir_mensaje_de_error	pilas-engine/modos/modo_error.ts	/^  private traducir_mensaje_de_error(mensaje: string) {$/;"	m
transform	pilas-engine/declaraciones/phaser.d.ts	/^                transform(a: number, b: number, c: number, d: number, tx: number, ty: number): this;$/;"	m
transform	pilas-engine/declaraciones/phaser.d.ts	/^                transform: object;$/;"	m
transform	pilas-engine/declaraciones/phaser.d.ts	/^            transform(position: Phaser.Math.Vector3, scale: Phaser.Math.Vector3, rotation: Phaser.Math.Quaternion): this;$/;"	m
transform	pilas-engine/libs/spriter.ts	/^  static transform(space, v, out) {$/;"	m
transformCoordinates	pilas-engine/declaraciones/phaser.d.ts	/^            transformCoordinates(mat: Phaser.Math.Matrix4): Phaser.Math.Vector3;$/;"	m
transformCoordinatesLocal	pilas-engine/declaraciones/phaser.d.ts	/^                transformCoordinatesLocal(transformMatrix: Phaser.Math.Matrix4, width: number, height: number, cameraZ: number): this;$/;"	m
transformCoordinatesLocal	pilas-engine/declaraciones/phaser.d.ts	/^                transformCoordinatesLocal(transformMatrix: Phaser.Math.Matrix4, width: number, height: number, cameraZ: number): void;$/;"	m
transformMat3	pilas-engine/declaraciones/phaser.d.ts	/^            transformMat3(mat: Phaser.Math.Matrix3): Phaser.Math.Vector2;$/;"	m
transformMat3	pilas-engine/declaraciones/phaser.d.ts	/^            transformMat3(mat: Phaser.Math.Matrix3): Phaser.Math.Vector3;$/;"	m
transformMat4	pilas-engine/declaraciones/phaser.d.ts	/^            transformMat4(mat: Phaser.Math.Matrix4): Phaser.Math.Vector2;$/;"	m
transformMat4	pilas-engine/declaraciones/phaser.d.ts	/^            transformMat4(mat: Phaser.Math.Matrix4): Phaser.Math.Vector3;$/;"	m
transformMat4	pilas-engine/declaraciones/phaser.d.ts	/^            transformMat4(mat: Phaser.Math.Matrix4): Phaser.Math.Vector4;$/;"	m
transformMatrix	pilas-engine/declaraciones/phaser.d.ts	/^            transformMatrix: Phaser.Math.Matrix4;$/;"	m
transformOnly	pilas-engine/declaraciones/phaser.d.ts	/^            transformOnly: boolean;$/;"	m
transformPoint	pilas-engine/declaraciones/phaser.d.ts	/^                transformPoint(x: number, y: number, point: Phaser.Geom.Point | Phaser.Math.Vector2 | object): Phaser.Geom.Point | Phaser.Math.Vector2 | object;$/;"	m
transformPointer	pilas-engine/declaraciones/phaser.d.ts	/^            transformPointer(pointer: Phaser.Input.Pointer, pageX: number, pageY: number, wasMove: boolean): void;$/;"	m
transformQuat	pilas-engine/declaraciones/phaser.d.ts	/^            transformQuat(q: Phaser.Math.Quaternion): Phaser.Math.Vector3;$/;"	m
transformQuat	pilas-engine/declaraciones/phaser.d.ts	/^            transformQuat(q: Phaser.Math.Quaternion): Phaser.Math.Vector4;$/;"	m
transformX	pilas-engine/declaraciones/phaser.d.ts	/^            transformX(pageX: number): number;$/;"	m
transformY	pilas-engine/declaraciones/phaser.d.ts	/^            transformY(pageY: number): number;$/;"	m
transition	pilas-engine/declaraciones/phaser.d.ts	/^            transition(config: Phaser.Types.Scenes.SceneTransitionConfig): boolean;$/;"	m
transitionAllowInput	pilas-engine/declaraciones/phaser.d.ts	/^                transitionAllowInput: boolean;$/;"	m
transitionDuration	pilas-engine/declaraciones/phaser.d.ts	/^                transitionDuration: number;$/;"	m
transitionFrom	pilas-engine/declaraciones/phaser.d.ts	/^                transitionFrom: Phaser.Scene;$/;"	m
transitionProgress	pilas-engine/declaraciones/phaser.d.ts	/^            transitionProgress: number;$/;"	m
translate	pilas-engine/declaraciones/phaser.d.ts	/^                translate(x: number, y: number): this;$/;"	m
translate	pilas-engine/declaraciones/phaser.d.ts	/^                translate(x: number, y?: number): this;$/;"	m
translate	pilas-engine/declaraciones/phaser.d.ts	/^            translate(v: Phaser.Math.Vector2 | Phaser.Math.Vector3 | Phaser.Math.Vector4): Phaser.Math.Matrix3;$/;"	m
translate	pilas-engine/declaraciones/phaser.d.ts	/^            translate(v: Phaser.Math.Vector3 | Phaser.Math.Vector4): this;$/;"	m
translate	pilas-engine/libs/spriter.ts	/^  static translate(space, x, y) {$/;"	m
translateCanvas	pilas-engine/declaraciones/phaser.d.ts	/^            translateCanvas(x: number, y: number): this;$/;"	m
translateXYZ	pilas-engine/declaraciones/phaser.d.ts	/^            translateXYZ(x: number, y: number, z: number): this;$/;"	m
transparencia	pilas-engine/actores/-actor-base.ts	/^      transparencia: this.transparencia,$/;"	m
transparencia	pilas-engine/actores/-actor-base.ts	/^    transparencia: 0,$/;"	m
transparencia	pilas-engine/actores/-actor-base.ts	/^  get transparencia() {$/;"	m
transparencia	pilas-engine/actores/-actor-base.ts	/^  set transparencia(t: any) {$/;"	m
transparencia	pilas-engine/actores/pantalla_completa.ts	/^    transparencia: 50$/;"	m
transparencia	pilas-engine/animacion_de_propiedad.ts	/^      transparencia: valor,$/;"	m
transparencia_hasta	pilas-engine/animacion_de_propiedad.ts	/^  transparencia_hasta(valor: number, duraci√≥n: number = 0) {$/;"	m
transparencia_hasta	pilas-engine/animacion_nula.ts	/^  transparencia_hasta() {$/;"	m
transparent	pilas-engine/declaraciones/phaser.d.ts	/^                transparent: boolean;$/;"	m
transparent	pilas-engine/declaraciones/phaser.d.ts	/^            readonly transparent: boolean;$/;"	m
transparent	pilas-engine/declaraciones/phaser.d.ts	/^            transparent(): Phaser.Display.Color;$/;"	m
transparent	pilas-engine/pilas.ts	/^      transparent: transparente,$/;"	m
transpose	pilas-engine/declaraciones/phaser.d.ts	/^            transpose(): Phaser.Math.Matrix3;$/;"	m
transpose	pilas-engine/declaraciones/phaser.d.ts	/^            transpose(): this;$/;"	m
trapezoid	pilas-engine/declaraciones/phaser.d.ts	/^                trapezoid(x: number, y: number, width: number, height: number, slope: number, options?: Phaser.Types.Physics.Matter.MatterBodyConfig): MatterJS.BodyType;$/;"	m
tree	pilas-engine/declaraciones/phaser.d.ts	/^                tree: Phaser.Structs.RTree;$/;"	m
treeMinMax	pilas-engine/declaraciones/phaser.d.ts	/^                treeMinMax: Phaser.Types.Physics.Arcade.ArcadeWorldTreeMinMax;$/;"	m
triangle	pilas-engine/declaraciones/phaser.d.ts	/^            triangle(x?: number, y?: number, x1?: number, y1?: number, x2?: number, y2?: number, x3?: number, y3?: number, fillColor?: number, fillAlpha?: number): Phaser.GameObjects.Triangle;$/;"	m
trident	pilas-engine/declaraciones/phaser.d.ts	/^            trident: boolean;$/;"	m
tridentVersion	pilas-engine/declaraciones/phaser.d.ts	/^            tridentVersion: number;$/;"	m
trigger	pilas-engine/libs/spriter.ts	/^  trigger: boolean = false;$/;"	m
trimmed	pilas-engine/declaraciones/phaser.d.ts	/^            readonly trimmed: boolean;$/;"	m
tween	pilas-engine/declaraciones/phaser.d.ts	/^            tween(config: Phaser.Types.Tweens.TweenBuilderConfig | object): Phaser.Tweens.Tween;$/;"	m
tween	pilas-engine/libs/spriter.ts	/^  public static tween(a: Vector, b: Vector, pct: number, out: Vector = new Vector()) {$/;"	m
tween	pilas-engine/libs/spriter.ts	/^  public tween(other: Vector, pct: number, out: Vector = new Vector()): Vector {$/;"	m
tween	pilas-engine/libs/spriter.ts	/^  static tween(a, b, pct, spin, out) {$/;"	m
tween	pilas-engine/libs/spriter.ts	/^  static tween(a: Angle, b: Angle, pct: number, spin: number, out: Angle = new Angle()): Angle {$/;"	m
tween	pilas-engine/libs/spriter.ts	/^  tween(other, pct, spin): void {$/;"	m
tween	pilas-engine/libs/spriter.ts	/^  tween(other: Angle, pct: number, spin: number, out: Angle = new Angle()): Angle {$/;"	m
tween	pilas-engine/libs/spriter.ts	/^  tween(other: Bone, pct: number, spin: number): void {$/;"	m
tween	pilas-engine/libs/spriter.ts	/^  tween(other: BoxObject, pct: number, spin: number): void {$/;"	m
tween	pilas-engine/libs/spriter.ts	/^  tween(other: EntityObject, pct: number, spin: number): void {$/;"	m
tween	pilas-engine/libs/spriter.ts	/^  tween(other: PointObject, pct: number, spin: number): void {$/;"	m
tween	pilas-engine/libs/spriter.ts	/^  tween(other: SoundObject, pct: number, spin: number): void {$/;"	m
tween	pilas-engine/libs/spriter.ts	/^  tween(other: VariableObject, pct: number, spin: number): void {}$/;"	m
tween	pilas-engine/libs/spriter.ts	/^function tween(a, b, t) {$/;"	f
tweenAngleRadians	pilas-engine/libs/spriter.ts	/^function tweenAngleRadians(a, b, t, spin) {$/;"	f
tweens	pilas-engine/declaraciones/phaser.d.ts	/^        tweens: Phaser.Tweens.TweenManager;$/;"	m
tx	pilas-engine/declaraciones/phaser.d.ts	/^                tx: number;$/;"	m
ty	pilas-engine/declaraciones/phaser.d.ts	/^                ty: number;$/;"	m
type	pilas-engine/declaraciones/phaser.d.ts	/^                    type: GLenum;$/;"	m
type	pilas-engine/declaraciones/phaser.d.ts	/^                    type: Phaser.Types.Renderer.WebGL.WebGLConst;$/;"	m
type	pilas-engine/declaraciones/phaser.d.ts	/^                    type: string;$/;"	m
type	pilas-engine/declaraciones/phaser.d.ts	/^                type: number;$/;"	m
type	pilas-engine/declaraciones/phaser.d.ts	/^                type: string;$/;"	m
type	pilas-engine/declaraciones/phaser.d.ts	/^            readonly type: number;$/;"	m
type	pilas-engine/declaraciones/phaser.d.ts	/^            type: string;$/;"	m
type	pilas-engine/libs/spriter.ts	/^  type: string = "linear";$/;"	m
type	pilas-engine/libs/spriter.ts	/^  type: string = "sprite";$/;"	m
type	pilas-engine/libs/spriter.ts	/^  type: string = "unknown";$/;"	m
type	pilas-engine/libs/spriter.ts	/^  type: string;$/;"	m
type	pilas-engine/pilas.ts	/^      type: Phaser.AUTO, \/\/ CANVAS, WEBGL o AUTO$/;"	m
u	pilas-engine/declaraciones/phaser.d.ts	/^                    u: number;$/;"	m
u	pilas-engine/declaraciones/phaser.d.ts	/^                u: number;$/;"	m
u1	pilas-engine/declaraciones/phaser.d.ts	/^                    u1: number;$/;"	m
u1	pilas-engine/declaraciones/phaser.d.ts	/^            u1: number;$/;"	m
umbral	pilas-engine/control.ts	/^  umbral: number;$/;"	m
unbind	pilas-engine/declaraciones/phaser.d.ts	/^                unbind(): void;$/;"	m
unbind	pilas-engine/declaraciones/phaser.d.ts	/^                unbind: any;$/;"	m
unbindTextures	pilas-engine/declaraciones/phaser.d.ts	/^                unbindTextures(all?: boolean): void;$/;"	m
uniforms	pilas-engine/declaraciones/phaser.d.ts	/^                uniforms: Phaser.Types.Renderer.WebGL.WebGLPipelineUniformsConfig;$/;"	m
uniforms	pilas-engine/declaraciones/phaser.d.ts	/^            uniforms: any;$/;"	m
union	pilas-engine/declaraciones/phaser.d.ts	/^            union(set: Phaser.Structs.Set<T>): Phaser.Structs.Set<T>;$/;"	m
unityAtlas	pilas-engine/declaraciones/phaser.d.ts	/^            unityAtlas(key: string | Phaser.Types.Loader.FileTypes.UnityAtlasFileConfig | Phaser.Types.Loader.FileTypes.UnityAtlasFileConfig[], textureURL?: string | string[], atlasURL?: string, textureXhrSettings?: Phaser.Types.Loader.XHRSettingsObject, atlasXhrSettings?: Phaser.Types.Loader.XHRSettingsObject): this;$/;"	m
unlock	pilas-engine/declaraciones/phaser.d.ts	/^            protected unlock(): void;$/;"	m
unlock	pilas-engine/declaraciones/phaser.d.ts	/^            unlock(): void;$/;"	m
unproject	pilas-engine/declaraciones/phaser.d.ts	/^            unproject(viewport: Phaser.Math.Vector4, invProjectionView: Phaser.Math.Matrix4): Phaser.Math.Vector3;$/;"	m
unprojectViewMatrix	pilas-engine/declaraciones/phaser.d.ts	/^            unprojectViewMatrix(projectionMatrix: Phaser.Math.Matrix4, worldMatrix: Phaser.Math.Matrix4): Phaser.Math.Vector3;$/;"	m
untransform	pilas-engine/libs/spriter.ts	/^  static untransform(space, v, out) {$/;"	m
up	pilas-engine/declaraciones/phaser.d.ts	/^                    up: Phaser.Input.Keyboard.Key;$/;"	m
up	pilas-engine/declaraciones/phaser.d.ts	/^                    up: boolean;$/;"	m
up	pilas-engine/declaraciones/phaser.d.ts	/^                up: Phaser.Input.Keyboard.Key;$/;"	m
up	pilas-engine/declaraciones/phaser.d.ts	/^                up: boolean;$/;"	m
up	pilas-engine/declaraciones/phaser.d.ts	/^            up(): Phaser.Math.Vector3;$/;"	m
upElement	pilas-engine/declaraciones/phaser.d.ts	/^            readonly upElement: any;$/;"	m
upTime	pilas-engine/declaraciones/phaser.d.ts	/^            upTime: number;$/;"	m
upX	pilas-engine/declaraciones/phaser.d.ts	/^            upX: number;$/;"	m
upY	pilas-engine/declaraciones/phaser.d.ts	/^            upY: number;$/;"	m
update	pilas-engine/declaraciones/phaser.d.ts	/^                    update(time: number, delta: number): void;$/;"	m
update	pilas-engine/declaraciones/phaser.d.ts	/^                protected update(time: number, delta: number): void;$/;"	m
update	pilas-engine/declaraciones/phaser.d.ts	/^                update(): void;$/;"	m
update	pilas-engine/declaraciones/phaser.d.ts	/^                update(a: number, b: number, c: number, d: number, e: number, f: number, roundPixels: boolean, alpha: number): this;$/;"	m
update	pilas-engine/declaraciones/phaser.d.ts	/^                update(delta: number): void;$/;"	m
update	pilas-engine/declaraciones/phaser.d.ts	/^                update(delta: number, step: number, processors: any[]): boolean;$/;"	m
update	pilas-engine/declaraciones/phaser.d.ts	/^                update(particle: Phaser.GameObjects.Particles.Particle, delta: number, step: number): void;$/;"	m
update	pilas-engine/declaraciones/phaser.d.ts	/^                update(time: number, delta: number): void;$/;"	m
update	pilas-engine/declaraciones/phaser.d.ts	/^            protected update(): void;$/;"	m
update	pilas-engine/declaraciones/phaser.d.ts	/^            protected update(time: number): void;$/;"	m
update	pilas-engine/declaraciones/phaser.d.ts	/^            protected update(time: number, delta: number): void;$/;"	m
update	pilas-engine/declaraciones/phaser.d.ts	/^            update(): Phaser.Textures.CanvasTexture;$/;"	m
update	pilas-engine/declaraciones/phaser.d.ts	/^            update(): T[];$/;"	m
update	pilas-engine/declaraciones/phaser.d.ts	/^            update(): void;$/;"	m
update	pilas-engine/declaraciones/phaser.d.ts	/^            update(...args: any[]): void;$/;"	m
update	pilas-engine/declaraciones/phaser.d.ts	/^            update(recalculateMetrics: boolean): Phaser.GameObjects.Text;$/;"	m
update	pilas-engine/declaraciones/phaser.d.ts	/^            update(time: number, delta: number): void;$/;"	m
update	pilas-engine/declaraciones/phaser.d.ts	/^            update(timestamp: number, delta: number): boolean;$/;"	m
update	pilas-engine/declaraciones/phaser.d.ts	/^            update(timestamp: number, delta: number): void;$/;"	m
update	pilas-engine/declaraciones/phaser.d.ts	/^        update(cta: string, text: object, key: string, frame: string | integer, template: string, updateData: object): this;$/;"	m
update	pilas-engine/declaraciones/phaser.d.ts	/^        update(time: number, delta: number): void;$/;"	m
update	pilas-engine/libs/spriter.ts	/^  update(elapsed_time: number): void {$/;"	m
update	pilas-engine/modos/modo.ts	/^  update(actores) {$/;"	m
update	pilas-engine/modos/modo_cargador.ts	/^  update() {$/;"	m
update	pilas-engine/modos/modo_deprecated.ts	/^  update() {$/;"	m
update	pilas-engine/modos/modo_ejecucion.ts	/^  update() {$/;"	m
update	pilas-engine/modos/modo_ejecucion_en_pausa.ts	/^  update() {}$/;"	m
update	pilas-engine/modos/modo_error.ts	/^  update() {}$/;"	m
update	pilas-engine/modos/modo_pausa.ts	/^  update() {$/;"	m
updateArcLengths	pilas-engine/declaraciones/phaser.d.ts	/^            updateArcLengths(): void;$/;"	m
updateBlendMode	pilas-engine/declaraciones/phaser.d.ts	/^                updateBlendMode(index: number, func: Function, equation: Function): this;$/;"	m
updateBounds	pilas-engine/declaraciones/phaser.d.ts	/^                updateBounds(): this;$/;"	m
updateBounds	pilas-engine/declaraciones/phaser.d.ts	/^                updateBounds(): void;$/;"	m
updateBounds	pilas-engine/declaraciones/phaser.d.ts	/^            updateBounds(): void;$/;"	m
updateCanvasTexture	pilas-engine/declaraciones/phaser.d.ts	/^                updateCanvasTexture(srcCanvas: HTMLCanvasElement, dstTexture: WebGLTexture, flipY?: boolean): WebGLTexture;$/;"	m
updateCenter	pilas-engine/declaraciones/phaser.d.ts	/^                updateCenter(): void;$/;"	m
updateCenter	pilas-engine/declaraciones/phaser.d.ts	/^            updateCenter(): void;$/;"	m
updateCropUVs	pilas-engine/declaraciones/phaser.d.ts	/^            updateCropUVs(crop: object, flipX: boolean, flipY: boolean): object;$/;"	m
updateDisplayOrigin	pilas-engine/declaraciones/phaser.d.ts	/^                updateDisplayOrigin(): this;$/;"	m
updateDisplayOrigin	pilas-engine/declaraciones/phaser.d.ts	/^            updateDisplayOrigin(): this;$/;"	m
updateFrameSequence	pilas-engine/declaraciones/phaser.d.ts	/^            updateFrameSequence(): this;$/;"	m
updateFromGameObject	pilas-engine/declaraciones/phaser.d.ts	/^                updateFromGameObject(): Phaser.Physics.Arcade.StaticBody;$/;"	m
updateFromGameObject	pilas-engine/declaraciones/phaser.d.ts	/^                updateFromGameObject(): void;$/;"	m
updateInputPlugins	pilas-engine/declaraciones/phaser.d.ts	/^            updateInputPlugins(type: number, pointers: Phaser.Input.Pointer[]): void;$/;"	m
updateLeaderboard	pilas-engine/declaraciones/phaser.d.ts	/^        updateLeaderboard(cta: string, text: object, key: string, frame: string | integer, template: string, updateData: object): this;$/;"	m
updateList	pilas-engine/declaraciones/phaser.d.ts	/^            protected updateList: Phaser.GameObjects.UpdateList;$/;"	m
updateList	pilas-engine/declaraciones/phaser.d.ts	/^            updateList: Phaser.GameObjects.UpdateList;$/;"	m
updateMarker	pilas-engine/declaraciones/phaser.d.ts	/^            updateMarker(marker: Phaser.Types.Sound.SoundMarker): boolean;$/;"	m
updateMotion	pilas-engine/declaraciones/phaser.d.ts	/^                updateMotion(body: Phaser.Physics.Arcade.Body, delta: number): void;$/;"	m
updateOrientation	pilas-engine/declaraciones/phaser.d.ts	/^            updateOrientation(): void;$/;"	m
updatePixelXY	pilas-engine/declaraciones/phaser.d.ts	/^            updatePixelXY(): this;$/;"	m
updatePoll	pilas-engine/declaraciones/phaser.d.ts	/^            updatePoll(time: number, delta: number): boolean;$/;"	m
updateProgress	pilas-engine/declaraciones/phaser.d.ts	/^            updateProgress(): void;$/;"	m
updateProjectionMatrix	pilas-engine/declaraciones/phaser.d.ts	/^                updateProjectionMatrix(): void;$/;"	m
updateScale	pilas-engine/declaraciones/phaser.d.ts	/^            updateScale(): void;$/;"	m
updateSize	pilas-engine/declaraciones/phaser.d.ts	/^            updateSize(): this;$/;"	m
updateSource	pilas-engine/declaraciones/phaser.d.ts	/^                    updateSource(): this;$/;"	m
updateText	pilas-engine/declaraciones/phaser.d.ts	/^            updateText(): this;$/;"	m
updateTexture	pilas-engine/declaraciones/phaser.d.ts	/^            updateTexture(): void;$/;"	m
updateTileData	pilas-engine/declaraciones/phaser.d.ts	/^            updateTileData(imageWidth: number, imageHeight: number): Phaser.Tilemaps.Tileset;$/;"	m
updateTo	pilas-engine/declaraciones/phaser.d.ts	/^            updateTo(key: string, value: any, startToCurrent?: boolean): this;$/;"	m
updateTweenData	pilas-engine/declaraciones/phaser.d.ts	/^            updateTweenData(tween: Phaser.Tweens.Tween, tweenData: Phaser.Types.Tweens.TweenDataConfig, delta: number): boolean;$/;"	m
updateUVs	pilas-engine/declaraciones/phaser.d.ts	/^            updateUVs(): Phaser.Textures.Frame;$/;"	m
updateUVs	pilas-engine/declaraciones/phaser.d.ts	/^            updateUVs(): this;$/;"	m
updateUVsInverted	pilas-engine/declaraciones/phaser.d.ts	/^            updateUVsInverted(): Phaser.Textures.Frame;$/;"	m
updateVertices	pilas-engine/declaraciones/phaser.d.ts	/^            updateVertices(): this;$/;"	m
updateVideoTexture	pilas-engine/declaraciones/phaser.d.ts	/^                updateVideoTexture(srcVideo: HTMLVideoElement, dstTexture: WebGLTexture, flipY?: boolean): WebGLTexture;$/;"	m
updateWall	pilas-engine/declaraciones/phaser.d.ts	/^                updateWall(add: boolean, position?: string, x?: number, y?: number, width?: number, height?: number): void;$/;"	m
updateWorldPoint	pilas-engine/declaraciones/phaser.d.ts	/^            updateWorldPoint(camera: Phaser.Cameras.Scene2D.Camera): this;$/;"	m
url	pilas-engine/declaraciones/phaser.d.ts	/^            url: object | string;$/;"	m
usar_grilla	pilas-engine/modos/modo_deprecated.ts	/^  usar_grilla: boolean;$/;"	m
usar_grilla	pilas-engine/modos/modo_editor.ts	/^  usar_grilla: boolean;$/;"	m
useBounds	pilas-engine/declaraciones/phaser.d.ts	/^                useBounds: boolean;$/;"	m
useDamping	pilas-engine/declaraciones/phaser.d.ts	/^                useDamping: boolean;$/;"	m
useFrames	pilas-engine/declaraciones/phaser.d.ts	/^            useFrames: boolean;$/;"	m
useTree	pilas-engine/declaraciones/phaser.d.ts	/^                useTree: boolean;$/;"	m
utilidades	pilas-engine/pilas.ts	/^  utilidades: Utilidades;$/;"	m
uuid	pilas-engine/declaraciones/phaser.d.ts	/^            uuid(): string;$/;"	m
uv	pilas-engine/declaraciones/phaser.d.ts	/^            uv: Float32Array;$/;"	m
uvs	pilas-engine/declaraciones/phaser.d.ts	/^                    uvs: number[];$/;"	m
v	pilas-engine/declaraciones/phaser.d.ts	/^                    v: number;$/;"	m
v	pilas-engine/declaraciones/phaser.d.ts	/^                v: number;$/;"	m
v	pilas-engine/declaraciones/phaser.d.ts	/^            v: number;$/;"	m
v1	pilas-engine/declaraciones/phaser.d.ts	/^                    v1: number;$/;"	m
v1	pilas-engine/declaraciones/phaser.d.ts	/^            v1: number;$/;"	m
val	pilas-engine/declaraciones/phaser.d.ts	/^            val: Float32Array;$/;"	m
val	pilas-engine/libs/spriter.ts	/^  val: number | string;$/;"	m
validar_color	pilas-engine/colores.ts	/^  validar_color(color: string) {$/;"	m
validar_numero	pilas-engine/utilidades.ts	/^  validar_numero(valor: number) {$/;"	m
validar_parametro_booleano	pilas-engine/utilidades.ts	/^  validar_parametro_booleano(parametro: string, valor: number) {$/;"	m
validar_parametro_lista_de_numeros_pares	pilas-engine/utilidades.ts	/^  validar_parametro_lista_de_numeros_pares(parametro: string, valor: Array<any>) {$/;"	m
validar_parametro_numero_entero_cero_o_positivo	pilas-engine/utilidades.ts	/^  validar_parametro_numero_entero_cero_o_positivo(parametro: string, valor: number) {$/;"	m
validar_parametro_numero_positivo	pilas-engine/utilidades.ts	/^  validar_parametro_numero_positivo(parametro: string, valor: number) {$/;"	m
validar_que_este_vivo	pilas-engine/utilidades.ts	/^  validar_que_este_vivo(actor: ActorBase) {$/;"	m
validar_que_existe_imagen	pilas-engine/utilidades.ts	/^  validar_que_existe_imagen(nombre) {$/;"	m
validar_que_existen_los_metodos_de_estado	pilas-engine/automata.ts	/^  validar_que_existen_los_metodos_de_estado(nombre: string) {$/;"	m
validar_si_existe	pilas-engine/comportamientos.ts	/^  validar_si_existe(nombre: string) {$/;"	m
valor	pilas-engine/actores/deslizador.ts	/^  valor: number = 0;$/;"	m
valor_inicial_dinamico	pilas-engine/habilidades/arrastrable.ts	/^  valor_inicial_dinamico: any = null;$/;"	m
value	pilas-engine/declaraciones/phaser.d.ts	/^                value: number;$/;"	m
value	pilas-engine/libs/spriter.ts	/^  value: number | string;$/;"	m
values	pilas-engine/declaraciones/phaser.d.ts	/^            values(): V[];$/;"	m
values	pilas-engine/declaraciones/phaser.d.ts	/^            values: {[key: string]:  any};$/;"	m
vaoExtension	pilas-engine/declaraciones/phaser.d.ts	/^                vaoExtension: OES_vertex_array_object;$/;"	m
var_def_array	pilas-engine/libs/spriter.ts	/^  var_def_array: VarDef[];$/;"	m
var_def_index	pilas-engine/libs/spriter.ts	/^  var_def_index: number = -1;$/;"	m
var_defs	pilas-engine/libs/spriter.ts	/^  var_defs: VarDefs;$/;"	m
var_map	pilas-engine/libs/spriter.ts	/^  var_map: { [key: string]: number | string } = {};$/;"	m
variable	pilas-engine/libs/spriter.ts	/^  variable: VariableObject;$/;"	m
varline_array	pilas-engine/libs/spriter.ts	/^  varline_array: Varline[];$/;"	m
vec2	pilas-engine/laser.ts	/^class vec2 {$/;"	c
veces	pilas-engine/animacion_de_propiedad.ts	/^  private veces: number;$/;"	m
veces_que_ejecuto	pilas-engine/animacion_de_propiedad.ts	/^  private veces_que_ejecuto: number = 0;$/;"	m
vector	pilas-engine/declaraciones/phaser.d.ts	/^                vector: MatterJS.VectorFactory;$/;"	m
velocidad	pilas-engine/actores/laser.ts	/^  velocidad: number;$/;"	m
velocidad	pilas-engine/actores/nube_animada.ts	/^  velocidad: number;$/;"	m
velocidad	pilas-engine/comportamientos/aparecer.ts	/^  velocidad: number = 1;$/;"	m
velocidad	pilas-engine/comportamientos/desaparecer.ts	/^  velocidad: number = 1;$/;"	m
velocidad_x	pilas-engine/actores/-actor-base.ts	/^  get velocidad_x() {$/;"	m
velocidad_x	pilas-engine/actores/-actor-base.ts	/^  set velocidad_x(valor: number) {$/;"	m
velocidad_y	pilas-engine/actores/-actor-base.ts	/^  get velocidad_y() {$/;"	m
velocidad_y	pilas-engine/actores/-actor-base.ts	/^  set velocidad_y(valor: number) {$/;"	m
velocity	pilas-engine/declaraciones/phaser.d.ts	/^                readonly velocity: Phaser.Math.Vector2;$/;"	m
velocity	pilas-engine/declaraciones/phaser.d.ts	/^                velocity: Phaser.Math.Vector2;$/;"	m
velocity	pilas-engine/declaraciones/phaser.d.ts	/^            readonly velocity: Phaser.Math.Vector2;$/;"	m
velocityDebugColor	pilas-engine/declaraciones/phaser.d.ts	/^                    velocityDebugColor: number;$/;"	m
velocityFromAngle	pilas-engine/declaraciones/phaser.d.ts	/^                velocityFromAngle(angle: number, speed?: number, vec2?: Phaser.Math.Vector2): Phaser.Math.Vector2;$/;"	m
velocityFromRotation	pilas-engine/declaraciones/phaser.d.ts	/^                velocityFromRotation(rotation: number, speed?: number, vec2?: Phaser.Math.Vector2): Phaser.Math.Vector2;$/;"	m
velocityX	pilas-engine/declaraciones/phaser.d.ts	/^                velocityX: number;$/;"	m
velocityY	pilas-engine/declaraciones/phaser.d.ts	/^                velocityY: number;$/;"	m
version	pilas-engine/declaraciones/phaser.d.ts	/^            version: number;$/;"	m
version	pilas-engine/declaraciones/phaser.d.ts	/^            version: string;$/;"	m
version	pilas-engine/declaraciones/phaser.d.ts	/^        version: string;$/;"	m
vertex1	pilas-engine/declaraciones/phaser.d.ts	/^                vertex1: Phaser.Geom.Mesh.Vertex;$/;"	m
vertex1	pilas-engine/declaraciones/phaser.d.ts	/^                vertex1: Phaser.Types.GameObjects.Vertex;$/;"	m
vertex2	pilas-engine/declaraciones/phaser.d.ts	/^                vertex2: Phaser.Geom.Mesh.Vertex;$/;"	m
vertex2	pilas-engine/declaraciones/phaser.d.ts	/^                vertex2: Phaser.Types.GameObjects.Vertex;$/;"	m
vertex3	pilas-engine/declaraciones/phaser.d.ts	/^                vertex3: Phaser.Geom.Mesh.Vertex;$/;"	m
vertex3	pilas-engine/declaraciones/phaser.d.ts	/^                vertex3: Phaser.Types.GameObjects.Vertex;$/;"	m
vertexBuffer	pilas-engine/declaraciones/phaser.d.ts	/^                readonly vertexBuffer: WebGLBuffer;$/;"	m
vertexBuffer	pilas-engine/declaraciones/phaser.d.ts	/^            vertexBuffer: WebGLBuffer;$/;"	m
vertexCapacity	pilas-engine/declaraciones/phaser.d.ts	/^                vertexCapacity: number;$/;"	m
vertexComponentCount	pilas-engine/declaraciones/phaser.d.ts	/^                vertexComponentCount: number;$/;"	m
vertexCount	pilas-engine/declaraciones/phaser.d.ts	/^                vertexCount: number;$/;"	m
vertexData	pilas-engine/declaraciones/phaser.d.ts	/^                readonly vertexData: ArrayBuffer;$/;"	m
vertexData	pilas-engine/declaraciones/phaser.d.ts	/^            vertexData: ArrayBuffer;$/;"	m
vertexIndex	pilas-engine/declaraciones/phaser.d.ts	/^                    vertexIndex: number;$/;"	m
vertexNormalIndex	pilas-engine/declaraciones/phaser.d.ts	/^                    vertexNormalIndex: number;$/;"	m
vertexNormals	pilas-engine/declaraciones/phaser.d.ts	/^                    vertexNormals: Phaser.Types.Math.Vector3Like[];$/;"	m
vertexSize	pilas-engine/declaraciones/phaser.d.ts	/^                readonly vertexSize: number;$/;"	m
vertexSrc	pilas-engine/declaraciones/phaser.d.ts	/^            vertexSrc: string;$/;"	m
vertexViewF32	pilas-engine/declaraciones/phaser.d.ts	/^                vertexViewF32: Float32Array;$/;"	m
vertexViewF32	pilas-engine/declaraciones/phaser.d.ts	/^            vertexViewF32: Float32Array;$/;"	m
vertexViewU32	pilas-engine/declaraciones/phaser.d.ts	/^                vertexViewU32: Uint32Array;$/;"	m
vertices	pilas-engine/declaraciones/phaser.d.ts	/^                    vertices: Phaser.Geom.Mesh.Vertex[];$/;"	m
vertices	pilas-engine/declaraciones/phaser.d.ts	/^                    vertices: Phaser.Types.Geom.Mesh.OBJFaceVertice[];$/;"	m
vertices	pilas-engine/declaraciones/phaser.d.ts	/^                    vertices: Phaser.Types.Math.Vector3Like[];$/;"	m
vertices	pilas-engine/declaraciones/phaser.d.ts	/^                vertices: MatterJS.VerticesFactory;$/;"	m
vertices	pilas-engine/declaraciones/phaser.d.ts	/^            vertices: Float32Array;$/;"	m
vertices	pilas-engine/declaraciones/phaser.d.ts	/^            vertices: Phaser.Geom.Mesh.Vertex[];$/;"	m
verts	pilas-engine/declaraciones/phaser.d.ts	/^                    verts: number[];$/;"	m
verts	pilas-engine/declaraciones/phaser.d.ts	/^                verts: MatterJS.VerticesFactory;$/;"	m
verts	pilas-engine/laser.ts	/^  verts: any;$/;"	m
vibrar	pilas-engine/camara.ts	/^  vibrar(intensidad: number = 1, tiempo: number = 1) {$/;"	m
vibration	pilas-engine/declaraciones/phaser.d.ts	/^                vibration: GamepadHapticActuator;$/;"	m
vibration	pilas-engine/declaraciones/phaser.d.ts	/^            vibration: boolean;$/;"	m
vida_actual	pilas-engine/actores/barra_de_energia.ts	/^  vida_actual: number = 100; \/\/ valor entre 0 y 100$/;"	m
vida_anterior	pilas-engine/actores/barra_de_energia.ts	/^  private vida_anterior: number = 0;$/;"	m
video	pilas-engine/declaraciones/phaser.d.ts	/^            video(config: Phaser.Types.GameObjects.Video.VideoConfig, addToScene?: boolean): Phaser.GameObjects.Video;$/;"	m
video	pilas-engine/declaraciones/phaser.d.ts	/^            video(key: string | Phaser.Types.Loader.FileTypes.VideoFileConfig | Phaser.Types.Loader.FileTypes.VideoFileConfig[], urls?: string | string[], loadEvent?: string, asBlob?: boolean, noAudio?: boolean, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject): this;$/;"	m
video	pilas-engine/declaraciones/phaser.d.ts	/^            video(x: number, y: number, key?: string): Phaser.GameObjects.Video;$/;"	m
video	pilas-engine/declaraciones/phaser.d.ts	/^            video: HTMLVideoElement;$/;"	m
video	pilas-engine/declaraciones/phaser.d.ts	/^            video: Phaser.Cache.BaseCache;$/;"	m
video	pilas-engine/declaraciones/phaser.d.ts	/^        video: Phaser.Device.Video;$/;"	m
video	pilas-engine/declaraciones/phaser.d.ts	/^    video: boolean;$/;"	m
videoTexture	pilas-engine/declaraciones/phaser.d.ts	/^            videoTexture: Phaser.Textures.Texture;$/;"	m
videoTextureSource	pilas-engine/declaraciones/phaser.d.ts	/^            videoTextureSource: Phaser.Textures.TextureSource;$/;"	m
view	pilas-engine/declaraciones/phaser.d.ts	/^                view: HTMLCanvasElement;$/;"	m
viewMatrix	pilas-engine/declaraciones/phaser.d.ts	/^            readonly viewMatrix: Float32Array;$/;"	m
viewMatrix	pilas-engine/declaraciones/phaser.d.ts	/^            viewMatrix: Phaser.Math.Matrix4;$/;"	m
viewPosition	pilas-engine/declaraciones/phaser.d.ts	/^            viewPosition: Phaser.Math.Vector3;$/;"	m
vincular	pilas-engine/actores.ts	/^  vincular(nombre: string, clase: any) {$/;"	m
vincular	pilas-engine/comportamientos.ts	/^  vincular(nombre: string, clase: any) {$/;"	m
vincular	pilas-engine/escenas.ts	/^  vincular(escena: Escena) {$/;"	m
vincular	pilas-engine/habilidades.ts	/^  vincular(nombre: string, clase: any) {$/;"	m
vincular_eventos_de_colision	pilas-engine/modos/modo_ejecucion.ts	/^  vincular_eventos_de_colision() {$/;"	m
vincular_gamepads	pilas-engine/control.ts	/^  vincular_gamepads() {$/;"	m
vintagePinhole	pilas-engine/declaraciones/phaser.d.ts	/^            vintagePinhole(multiply?: boolean): this;$/;"	m
visible	pilas-engine/declaraciones/phaser.d.ts	/^                visible: boolean;$/;"	m
visible	pilas-engine/declaraciones/phaser.d.ts	/^            visible: boolean;$/;"	m
visibleLights	pilas-engine/declaraciones/phaser.d.ts	/^            readonly visibleLights: number;$/;"	m
volume	pilas-engine/declaraciones/phaser.d.ts	/^            volume: number;$/;"	m
volume	pilas-engine/libs/spriter.ts	/^  volume: number = 1.0;$/;"	m
volumeNode	pilas-engine/declaraciones/phaser.d.ts	/^            volumeNode: GainNode;$/;"	m
vp9	pilas-engine/declaraciones/phaser.d.ts	/^            vp9: boolean;$/;"	m
vuela_actualizar	pilas-engine/actores/gallina.ts	/^  vuela_actualizar() {}$/;"	m
vuela_cuando_comienza_una_colision	pilas-engine/actores/gallina.ts	/^  vuela_cuando_comienza_una_colision(actor) {}$/;"	m
vuela_iniciar	pilas-engine/actores/gallina.ts	/^  vuela_iniciar() {$/;"	m
vx	pilas-engine/declaraciones/phaser.d.ts	/^                vx: number;$/;"	m
vy	pilas-engine/declaraciones/phaser.d.ts	/^                vy: number;$/;"	m
vz	pilas-engine/declaraciones/phaser.d.ts	/^                vz: number;$/;"	m
w	pilas-engine/declaraciones/phaser.d.ts	/^                    w: number;$/;"	m
w	pilas-engine/declaraciones/phaser.d.ts	/^                w: number;$/;"	m
w	pilas-engine/declaraciones/phaser.d.ts	/^            w: number;$/;"	m
w	pilas-engine/libs/spriter.ts	/^  w: number = 0;$/;"	m
wake	pilas-engine/declaraciones/phaser.d.ts	/^            wake(data?: object): Phaser.Scenes.Systems;$/;"	m
wake	pilas-engine/declaraciones/phaser.d.ts	/^            wake(key: string | Phaser.Scene, data?: object): this;$/;"	m
wake	pilas-engine/declaraciones/phaser.d.ts	/^            wake(key?: string | Phaser.Scene, data?: object): this;$/;"	m
wake	pilas-engine/declaraciones/phaser.d.ts	/^            wake(seamless?: boolean): void;$/;"	m
walls	pilas-engine/declaraciones/phaser.d.ts	/^                walls: object;$/;"	m
wasCanceled	pilas-engine/declaraciones/phaser.d.ts	/^            wasCanceled: boolean;$/;"	m
wasTouch	pilas-engine/declaraciones/phaser.d.ts	/^            wasTouch: boolean;$/;"	m
wasTouching	pilas-engine/declaraciones/phaser.d.ts	/^                wasTouching: Phaser.Types.Physics.Arcade.ArcadeBodyCollision;$/;"	m
wav	pilas-engine/declaraciones/phaser.d.ts	/^            wav: boolean;$/;"	m
webApp	pilas-engine/declaraciones/phaser.d.ts	/^            webApp: boolean;$/;"	m
webAudio	pilas-engine/declaraciones/phaser.d.ts	/^            webAudio: boolean;$/;"	m
webGL	pilas-engine/declaraciones/phaser.d.ts	/^            webGL: boolean;$/;"	m
webm	pilas-engine/declaraciones/phaser.d.ts	/^            webm: boolean;$/;"	m
weightedRandomize	pilas-engine/declaraciones/phaser.d.ts	/^            weightedRandomize(weightedIndexes: object[], tileX?: number, tileY?: number, width?: number, height?: number): this;$/;"	m
weightedRandomize	pilas-engine/declaraciones/phaser.d.ts	/^            weightedRandomize(weightedIndexes: object[], tileX?: number, tileY?: number, width?: number, height?: number, layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Tilemaps.Tilemap;$/;"	m
wells	pilas-engine/declaraciones/phaser.d.ts	/^                wells: Phaser.Structs.List<Phaser.GameObjects.Particles.GravityWell>;$/;"	m
wheelType	pilas-engine/declaraciones/phaser.d.ts	/^            wheelType: string;$/;"	m
while	pilas-engine/escenas/-escena-base.ts	/^    while (nombres_que_pueden_colisionar.indexOf(nombre_a_sugerir) > -1) {$/;"	m
while	pilas-engine/libs/spriter.ts	/^    while (t0 < t1) {$/;"	m
while	pilas-engine/libs/spriter.ts	/^    while (true) {$/;"	m
while	pilas-engine/pilas.ts	/^    while (valor == valor_a_excluir) {$/;"	m
whiteImage	pilas-engine/declaraciones/phaser.d.ts	/^            readonly whiteImage: string;$/;"	m
whiteTexture	pilas-engine/declaraciones/phaser.d.ts	/^                readonly whiteTexture: WebGLTexture;$/;"	m
width	pilas-engine/declaraciones/phaser.d.ts	/^                    width: number;$/;"	m
width	pilas-engine/declaraciones/phaser.d.ts	/^                readonly width: number;$/;"	m
width	pilas-engine/declaraciones/phaser.d.ts	/^                width: number;$/;"	m
width	pilas-engine/declaraciones/phaser.d.ts	/^            readonly width: number | string;$/;"	m
width	pilas-engine/declaraciones/phaser.d.ts	/^            readonly width: number;$/;"	m
width	pilas-engine/declaraciones/phaser.d.ts	/^            width: number;$/;"	m
width	pilas-engine/libs/spriter.ts	/^  width: number = 0;$/;"	m
width	pilas-engine/pilas.ts	/^      width: "100%",$/;"	m
width	pilas-engine/pilas.ts	/^      width: ancho,$/;"	m
widthInPixels	pilas-engine/declaraciones/phaser.d.ts	/^            widthInPixels: number;$/;"	m
willDrawDebug	pilas-engine/declaraciones/phaser.d.ts	/^                willDrawDebug(): boolean;$/;"	m
willKill	pilas-engine/declaraciones/phaser.d.ts	/^                    willKill(particle: Phaser.GameObjects.Particles.Particle): boolean;$/;"	m
willRender	pilas-engine/declaraciones/phaser.d.ts	/^            willRender(): boolean;$/;"	m
willRender	pilas-engine/declaraciones/phaser.d.ts	/^            willRender(camera: Phaser.Cameras.Scene2D.Camera): boolean;$/;"	m
windows	pilas-engine/declaraciones/phaser.d.ts	/^            windows: boolean;$/;"	m
windowsPhone	pilas-engine/declaraciones/phaser.d.ts	/^            windowsPhone: boolean;$/;"	m
word	pilas-engine/declaraciones/phaser.d.ts	/^                    word: string;$/;"	m
wordWrapCallback	pilas-engine/declaraciones/phaser.d.ts	/^            wordWrapCallback: TextStyleWordWrapCallback | null;$/;"	m
wordWrapCallbackScope	pilas-engine/declaraciones/phaser.d.ts	/^            wordWrapCallbackScope: object | null;$/;"	m
wordWrapCharCode	pilas-engine/declaraciones/phaser.d.ts	/^            wordWrapCharCode: number;$/;"	m
wordWrapUseAdvanced	pilas-engine/declaraciones/phaser.d.ts	/^            wordWrapUseAdvanced: boolean;$/;"	m
wordWrapWidth	pilas-engine/declaraciones/phaser.d.ts	/^            wordWrapWidth: number | null;$/;"	m
words	pilas-engine/declaraciones/phaser.d.ts	/^                    words: Phaser.Types.GameObjects.BitmapText.BitmapTextWord[];$/;"	m
worker	pilas-engine/declaraciones/phaser.d.ts	/^            worker: boolean;$/;"	m
world	pilas-engine/declaraciones/phaser.d.ts	/^                world: Phaser.Physics.Arcade.World;$/;"	m
world	pilas-engine/declaraciones/phaser.d.ts	/^                world: Phaser.Physics.Matter.World;$/;"	m
worldBounce	pilas-engine/declaraciones/phaser.d.ts	/^                worldBounce: Phaser.Math.Vector2;$/;"	m
worldConstraint	pilas-engine/declaraciones/phaser.d.ts	/^                worldConstraint(body: MatterJS.BodyType, length?: number, stiffness?: number, options?: Phaser.Types.Physics.Matter.MatterConstraintConfig): MatterJS.ConstraintType;$/;"	m
worldToTileX	pilas-engine/declaraciones/phaser.d.ts	/^            worldToTileX(worldX: number, snapToFloor?: boolean, camera?: Phaser.Cameras.Scene2D.Camera): number;$/;"	m
worldToTileX	pilas-engine/declaraciones/phaser.d.ts	/^            worldToTileX(worldX: number, snapToFloor?: boolean, camera?: Phaser.Cameras.Scene2D.Camera, layer?: string | number | Phaser.Tilemaps.TilemapLayer): number;$/;"	m
worldToTileXY	pilas-engine/declaraciones/phaser.d.ts	/^            worldToTileXY(worldX: number, worldY: number, snapToFloor?: boolean, point?: Phaser.Math.Vector2, camera?: Phaser.Cameras.Scene2D.Camera): Phaser.Math.Vector2;$/;"	m
worldToTileXY	pilas-engine/declaraciones/phaser.d.ts	/^            worldToTileXY(worldX: number, worldY: number, snapToFloor?: boolean, vec2?: Phaser.Math.Vector2, camera?: Phaser.Cameras.Scene2D.Camera, layer?: string | number | Phaser.Tilemaps.TilemapLayer): Phaser.Math.Vector2;$/;"	m
worldToTileY	pilas-engine/declaraciones/phaser.d.ts	/^            worldToTileY(worldY: number, snapToFloor?: boolean, camera?: Phaser.Cameras.Scene2D.Camera): number;$/;"	m
worldToTileY	pilas-engine/declaraciones/phaser.d.ts	/^            worldToTileY(worldY: number, snapToFloor?: boolean, camera?: Phaser.Cameras.Scene2D.Camera, layer?: string | number | Phaser.Tilemaps.TilemapLayer): number;$/;"	m
worldView	pilas-engine/declaraciones/phaser.d.ts	/^                readonly worldView: Phaser.Geom.Rectangle;$/;"	m
worldX	pilas-engine/declaraciones/phaser.d.ts	/^            worldX: number;$/;"	m
worldY	pilas-engine/declaraciones/phaser.d.ts	/^            worldY: number;$/;"	m
world_space	pilas-engine/libs/spriter.ts	/^  world_space: Space = new Space();$/;"	m
world_space	pilas-engine/libs/spriter.ts	/^  world_space: any;$/;"	m
wrap	pilas-engine/declaraciones/phaser.d.ts	/^                wrap(object: any, padding?: number): void;$/;"	m
wrap	pilas-engine/libs/spriter.ts	/^function wrap(num: number, min: number, max: number): number {$/;"	f
wrapAngleRadians	pilas-engine/libs/spriter.ts	/^function wrapAngleRadians(angle) {$/;"	f
wrapArray	pilas-engine/declaraciones/phaser.d.ts	/^                wrapArray(objects: any[], padding?: number): void;$/;"	m
wrapObject	pilas-engine/declaraciones/phaser.d.ts	/^                wrapObject(object: any, padding?: number): void;$/;"	m
wrappedText	pilas-engine/declaraciones/phaser.d.ts	/^                    wrappedText: string;$/;"	m
x	pilas-engine/actores/-actor-base.ts	/^            x: e.x,$/;"	m
x	pilas-engine/actores/-actor-base.ts	/^        x: x + s.distancia_x,$/;"	m
x	pilas-engine/actores/-actor-base.ts	/^      x: Math.round(this.x),$/;"	m
x	pilas-engine/actores/-actor-base.ts	/^    x: 0,$/;"	m
x	pilas-engine/actores/-actor-base.ts	/^  get x() {$/;"	m
x	pilas-engine/actores/-actor-base.ts	/^  set x(_x) {$/;"	m
x	pilas-engine/actores/caja.ts	/^    x: 0,$/;"	m
x	pilas-engine/actores/conejo.ts	/^        x: 0,$/;"	m
x	pilas-engine/actores/conejo.ts	/^    x: 0,$/;"	m
x	pilas-engine/actores/deslizador.ts	/^    x: 0,$/;"	m
x	pilas-engine/actores/gallina.ts	/^    x: 0,$/;"	m
x	pilas-engine/animacion_de_propiedad.ts	/^      x: "+=" + x,$/;"	m
x	pilas-engine/animacion_de_propiedad.ts	/^      x: x,$/;"	m
x	pilas-engine/camara.ts	/^  get x() {$/;"	m
x	pilas-engine/camara.ts	/^  set x(x: number) {$/;"	m
x	pilas-engine/control.ts	/^        x: resultado.x,$/;"	m
x	pilas-engine/declaraciones/phaser.d.ts	/^                    x: number;$/;"	m
x	pilas-engine/declaraciones/phaser.d.ts	/^                x: Phaser.GameObjects.Particles.EmitterOp;$/;"	m
x	pilas-engine/declaraciones/phaser.d.ts	/^                x: number;$/;"	m
x	pilas-engine/declaraciones/phaser.d.ts	/^            readonly x: number;$/;"	m
x	pilas-engine/declaraciones/phaser.d.ts	/^            x: number;$/;"	m
x	pilas-engine/laser.ts	/^  x: number;$/;"	m
x	pilas-engine/libs/spriter.ts	/^  public x: number = 0.0;$/;"	m
x	pilas-engine/modos/actor_en_modo_edicion.ts	/^        x: posicion.x,$/;"	m
x	pilas-engine/modos/modo.ts	/^          x: col.point.x,$/;"	m
x	pilas-engine/modos/modo_cargador.ts	/^  x: number;$/;"	m
x	pilas-engine/modos/modo_deprecated.ts	/^          x: sprite.x + sensor.dx,$/;"	m
x	pilas-engine/modos/modo_deprecated.ts	/^        x: gameObject.x,$/;"	m
x	pilas-engine/modos/modo_editor.ts	/^          x: this.cameras.main.scrollX,$/;"	m
x	pilas-engine/modos/modo_editor.ts	/^        x: camera.scrollX,$/;"	m
x	pilas-engine/modos/modo_ejecucion.ts	/^      x: p.x,$/;"	m
x	pilas-engine/modos/modo_ejecucion.ts	/^      x: posicion.x,$/;"	m
x	pilas-engine/modos/modo_pausa.ts	/^      x: escena.camara_x,$/;"	m
x	pilas-engine/pilas.ts	/^          x: punto.x,$/;"	m
x	pilas-engine/pilas.ts	/^        x: a.x, $/;"	m
x1	pilas-engine/declaraciones/phaser.d.ts	/^            x1: number;$/;"	m
x2	pilas-engine/declaraciones/phaser.d.ts	/^            x2: number;$/;"	m
x3	pilas-engine/declaraciones/phaser.d.ts	/^            x3: number;$/;"	m
xOffset	pilas-engine/declaraciones/phaser.d.ts	/^                    xOffset: number;$/;"	m
xRadius	pilas-engine/declaraciones/phaser.d.ts	/^                xRadius: number;$/;"	m
xRadius	pilas-engine/declaraciones/phaser.d.ts	/^            xRadius: number;$/;"	m
xValueAt	pilas-engine/laser.ts	/^  xValueAt(y: number) {$/;"	m
xhr	pilas-engine/declaraciones/phaser.d.ts	/^            xhr: Phaser.Types.Loader.XHRSettingsObject;$/;"	m
xhrLoader	pilas-engine/declaraciones/phaser.d.ts	/^            xhrLoader: XMLHttpRequest;$/;"	m
xhrSettings	pilas-engine/declaraciones/phaser.d.ts	/^            xhrSettings: Phaser.Types.Loader.XHRSettingsObject;$/;"	m
xml	pilas-engine/declaraciones/phaser.d.ts	/^            xml(key: string | Phaser.Types.Loader.FileTypes.XMLFileConfig | Phaser.Types.Loader.FileTypes.XMLFileConfig[], url?: string, xhrSettings?: Phaser.Types.Loader.XHRSettingsObject): this;$/;"	m
xml	pilas-engine/declaraciones/phaser.d.ts	/^            xml: Phaser.Cache.BaseCache;$/;"	m
xyz	pilas-engine/declaraciones/phaser.d.ts	/^            xyz(x: number, y: number, z: number): this;$/;"	m
y	pilas-engine/actores/-actor-base.ts	/^            y: e.y,$/;"	m
y	pilas-engine/actores/-actor-base.ts	/^        y: y - s.distancia_y$/;"	m
y	pilas-engine/actores/-actor-base.ts	/^      y: Math.round(this.y),$/;"	m
y	pilas-engine/actores/-actor-base.ts	/^    y: 0,$/;"	m
y	pilas-engine/actores/-actor-base.ts	/^  get y() {$/;"	m
y	pilas-engine/actores/-actor-base.ts	/^  set y(_y: any) {$/;"	m
y	pilas-engine/actores/caja.ts	/^    y: 0,$/;"	m
y	pilas-engine/actores/conejo.ts	/^        y: -51,$/;"	m
y	pilas-engine/actores/conejo.ts	/^    y: 0,$/;"	m
y	pilas-engine/actores/deslizador.ts	/^    y: 0,$/;"	m
y	pilas-engine/actores/gallina.ts	/^    y: 0,$/;"	m
y	pilas-engine/actores/pared.ts	/^    y: 0,$/;"	m
y	pilas-engine/actores/plataforma.ts	/^    y: 0,$/;"	m
y	pilas-engine/animacion_de_propiedad.ts	/^      y: "+=" + y,$/;"	m
y	pilas-engine/animacion_de_propiedad.ts	/^      y: y,$/;"	m
y	pilas-engine/camara.ts	/^  get y() {$/;"	m
y	pilas-engine/camara.ts	/^  set y(y: number) {$/;"	m
y	pilas-engine/control.ts	/^        y: -resultado.y$/;"	m
y	pilas-engine/declaraciones/phaser.d.ts	/^                    y: number;$/;"	m
y	pilas-engine/declaraciones/phaser.d.ts	/^                y: Phaser.GameObjects.Particles.EmitterOp;$/;"	m
y	pilas-engine/declaraciones/phaser.d.ts	/^                y: number;$/;"	m
y	pilas-engine/declaraciones/phaser.d.ts	/^            readonly y: number;$/;"	m
y	pilas-engine/declaraciones/phaser.d.ts	/^            y: number;$/;"	m
y	pilas-engine/laser.ts	/^  y: number;$/;"	m
y	pilas-engine/libs/spriter.ts	/^  public y: number = 0.0;$/;"	m
y	pilas-engine/modos/actor_en_modo_edicion.ts	/^        y: posicion.y,$/;"	m
y	pilas-engine/modos/modo.ts	/^          y: col.point.y$/;"	m
y	pilas-engine/modos/modo_deprecated.ts	/^          y: sprite.y - sensor.dy$/;"	m
y	pilas-engine/modos/modo_deprecated.ts	/^        y: gameObject.y$/;"	m
y	pilas-engine/modos/modo_editor.ts	/^          y: this.cameras.main.scrollY,$/;"	m
y	pilas-engine/modos/modo_editor.ts	/^        y: camera.scrollY,$/;"	m
y	pilas-engine/modos/modo_ejecucion.ts	/^      y: p.y,$/;"	m
y	pilas-engine/modos/modo_ejecucion.ts	/^      y: posicion.y,$/;"	m
y	pilas-engine/modos/modo_pausa.ts	/^      y: -escena.camara_y$/;"	m
y	pilas-engine/pilas.ts	/^          y: punto.y$/;"	m
y	pilas-engine/pilas.ts	/^        y: a.y$/;"	m
y1	pilas-engine/declaraciones/phaser.d.ts	/^            y1: number;$/;"	m
y2	pilas-engine/declaraciones/phaser.d.ts	/^            y2: number;$/;"	m
y3	pilas-engine/declaraciones/phaser.d.ts	/^            y3: number;$/;"	m
yOffset	pilas-engine/declaraciones/phaser.d.ts	/^                    yOffset: number;$/;"	m
yRadius	pilas-engine/declaraciones/phaser.d.ts	/^                yRadius: number;$/;"	m
yRadius	pilas-engine/declaraciones/phaser.d.ts	/^            yRadius: number;$/;"	m
yValueAt	pilas-engine/laser.ts	/^  yValueAt(x: number) {$/;"	m
yawPitchRoll	pilas-engine/declaraciones/phaser.d.ts	/^            yawPitchRoll(yaw: number, pitch: number, roll: number): this;$/;"	m
yoyo	pilas-engine/actores/-actor-base.ts	/^      yoyo: false,$/;"	m
yoyo	pilas-engine/declaraciones/phaser.d.ts	/^                    yoyo: boolean;$/;"	m
yoyo	pilas-engine/declaraciones/phaser.d.ts	/^                yoyo: boolean;$/;"	m
yoyo	pilas-engine/declaraciones/phaser.d.ts	/^            yoyo: boolean;$/;"	m
z	pilas-engine/actores/-actor-base.ts	/^      z: Math.round(this.z),$/;"	m
z	pilas-engine/actores/-actor-base.ts	/^    z: 0,$/;"	m
z	pilas-engine/actores/-actor-base.ts	/^  get z() {$/;"	m
z	pilas-engine/actores/-actor-base.ts	/^  set z(_z: number) {$/;"	m
z	pilas-engine/actores/boton.ts	/^    z: -10,$/;"	m
z	pilas-engine/actores/boton_abajo.ts	/^    z: -100$/;"	m
z	pilas-engine/actores/boton_activable.ts	/^    z: -10,$/;"	m
z	pilas-engine/actores/boton_arriba.ts	/^    z: -100$/;"	m
z	pilas-engine/actores/boton_derecha.ts	/^    z: -100$/;"	m
z	pilas-engine/actores/boton_espacio.ts	/^    z: -100$/;"	m
z	pilas-engine/actores/boton_izquierda.ts	/^    z: -100$/;"	m
z	pilas-engine/actores/interruptor_de_gravedad.ts	/^    z: -100$/;"	m
z	pilas-engine/actores/nube_animada.ts	/^    z: 30$/;"	m
z	pilas-engine/actores/pantalla_completa.ts	/^    z: -10,$/;"	m
z	pilas-engine/actores/puntaje.ts	/^    z: -10,$/;"	m
z	pilas-engine/actores/reiniciar_escena.ts	/^    z: -10,$/;"	m
z	pilas-engine/actores/texto.ts	/^    z: -10,$/;"	m
z	pilas-engine/declaraciones/phaser.d.ts	/^                z: number;$/;"	m
z	pilas-engine/declaraciones/phaser.d.ts	/^            z: number;$/;"	m
z_index	pilas-engine/libs/spriter.ts	/^  z_index: number = 0;$/;"	m
zero	pilas-engine/declaraciones/phaser.d.ts	/^            zero(): Phaser.Math.Matrix4;$/;"	m
zone	pilas-engine/declaraciones/phaser.d.ts	/^            zone(config: Phaser.Types.GameObjects.Zone.ZoneConfig): Phaser.GameObjects.Zone;$/;"	m
zone	pilas-engine/declaraciones/phaser.d.ts	/^            zone(x: number, y: number, width: number, height: number): Phaser.GameObjects.Zone;$/;"	m
zoom	pilas-engine/camara.ts	/^  get zoom() {$/;"	m
zoom	pilas-engine/camara.ts	/^  set zoom(x: number) {$/;"	m
zoom	pilas-engine/declaraciones/phaser.d.ts	/^                    zoom: number;$/;"	m
zoom	pilas-engine/declaraciones/phaser.d.ts	/^                zoom: number;$/;"	m
zoom	pilas-engine/declaraciones/phaser.d.ts	/^            readonly zoom: Phaser.Scale.ZoomType | number;$/;"	m
zoom	pilas-engine/declaraciones/phaser.d.ts	/^            zoom: number;$/;"	m
zoom	pilas-engine/modos/modo_editor.ts	/^          zoom: this.cameras.main.zoom,$/;"	m
zoom	pilas-engine/modos/modo_editor.ts	/^        zoom: camera.zoom,$/;"	m
zoomEffect	pilas-engine/declaraciones/phaser.d.ts	/^                zoomEffect: Phaser.Cameras.Scene2D.Effects.Zoom;$/;"	m
zoomIn	pilas-engine/declaraciones/phaser.d.ts	/^                zoomIn: Phaser.Input.Keyboard.Key;$/;"	m
zoomOut	pilas-engine/declaraciones/phaser.d.ts	/^                zoomOut: Phaser.Input.Keyboard.Key;$/;"	m
zoomSpeed	pilas-engine/declaraciones/phaser.d.ts	/^                zoomSpeed: number;$/;"	m
zoomTo	pilas-engine/declaraciones/phaser.d.ts	/^                zoomTo(zoom: number, duration?: number, ease?: string | Function, force?: boolean, callback?: Phaser.Types.Cameras.Scene2D.CameraPanCallback, context?: any): this;$/;"	m
zoomX	pilas-engine/declaraciones/phaser.d.ts	/^                zoomX: number;$/;"	m
zoomY	pilas-engine/declaraciones/phaser.d.ts	/^                zoomY: number;$/;"	m
